["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.markup');\ngoog.require('cljs.core');\ngoog.require('devtools.formatters.helpers');\ngoog.require('devtools.formatters.printing');\ngoog.require('devtools.formatters.state');\ngoog.require('devtools.formatters.templating');\ngoog.require('devtools.munging');\ndevtools.formatters.markup.print_with = (function devtools$formatters$markup$print_with(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44369 = arguments.length;\nvar i__4737__auto___44370 = (0);\nwhile(true){\nif((i__4737__auto___44370 < len__4736__auto___44369)){\nargs__4742__auto__.push((arguments[i__4737__auto___44370]));\n\nvar G__44371 = (i__4737__auto___44370 + (1));\ni__4737__auto___44370 = G__44371;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic = (function (method,value,tag,p__44011){\nvar vec__44012 = p__44011;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44012,(0),null);\nvar job_fn = (function (){\nvar G__44015 = value;\nvar G__44016 = tag;\nvar G__44017 = (devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0 ? devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0() : devtools.formatters.markup.get_markup_db.call(null));\nreturn (method.cljs$core$IFn$_invoke$arity$3 ? method.cljs$core$IFn$_invoke$arity$3(G__44015,G__44016,G__44017) : method.call(null,G__44015,G__44016,G__44017));\n});\nif((!((max_level == null)))){\nvar _STAR_print_level_STAR__orig_val__44018 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__44019 = (max_level + (1));\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__44019);\n\ntry{return job_fn();\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__44018);\n}} else {\nreturn job_fn();\n}\n}));\n\n(devtools.formatters.markup.print_with.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_with.cljs$lang$applyTo = (function (seq44006){\nvar G__44008 = cljs.core.first(seq44006);\nvar seq44006__$1 = cljs.core.next(seq44006);\nvar G__44009 = cljs.core.first(seq44006__$1);\nvar seq44006__$2 = cljs.core.next(seq44006__$1);\nvar G__44010 = cljs.core.first(seq44006__$2);\nvar seq44006__$3 = cljs.core.next(seq44006__$2);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44008,G__44009,G__44010,seq44006__$3);\n}));\n\ndevtools.formatters.markup.print_via_writer = (function devtools$formatters$markup$print_via_writer(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44372 = arguments.length;\nvar i__4737__auto___44373 = (0);\nwhile(true){\nif((i__4737__auto___44373 < len__4736__auto___44372)){\nargs__4742__auto__.push((arguments[i__4737__auto___44373]));\n\nvar G__44374 = (i__4737__auto___44373 + (1));\ni__4737__auto___44373 = G__44374;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__44023){\nvar vec__44024 = p__44023;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44024,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_writer,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_writer.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_writer.cljs$lang$applyTo = (function (seq44020){\nvar G__44021 = cljs.core.first(seq44020);\nvar seq44020__$1 = cljs.core.next(seq44020);\nvar G__44022 = cljs.core.first(seq44020__$1);\nvar seq44020__$2 = cljs.core.next(seq44020__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44021,G__44022,seq44020__$2);\n}));\n\ndevtools.formatters.markup.print_via_protocol = (function devtools$formatters$markup$print_via_protocol(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44375 = arguments.length;\nvar i__4737__auto___44376 = (0);\nwhile(true){\nif((i__4737__auto___44376 < len__4736__auto___44375)){\nargs__4742__auto__.push((arguments[i__4737__auto___44376]));\n\nvar G__44377 = (i__4737__auto___44376 + (1));\ni__4737__auto___44376 = G__44377;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__44042){\nvar vec__44043 = p__44042;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44043,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_protocol,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_protocol.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_protocol.cljs$lang$applyTo = (function (seq44037){\nvar G__44038 = cljs.core.first(seq44037);\nvar seq44037__$1 = cljs.core.next(seq44037);\nvar G__44039 = cljs.core.first(seq44037__$1);\nvar seq44037__$2 = cljs.core.next(seq44037__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44038,G__44039,seq44037__$2);\n}));\n\ndevtools.formatters.markup._LT_expandable_GT_ = (function devtools$formatters$markup$_LT_expandable_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44378 = arguments.length;\nvar i__4737__auto___44379 = (0);\nwhile(true){\nif((i__4737__auto___44379 < len__4736__auto___44378)){\nargs__4742__auto__.push((arguments[i__4737__auto___44379]));\n\nvar G__44380 = (i__4737__auto___44379 + (1));\ni__4737__auto___44379 = G__44380;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nvar inner_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-inner-tag\",\"expandable-inner-tag\",-799648560)], null),children);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-tag\",\"expandable-tag\",151027578),new cljs.core.Keyword(null,\"expandable-symbol\",\"expandable-symbol\",1644611290),inner_markup], null);\n}));\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$applyTo = (function (seq44046){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq44046));\n}));\n\ndevtools.formatters.markup._LT_raw_surrogate_GT_ = (function devtools$formatters$markup$_LT_raw_surrogate_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44381 = arguments.length;\nvar i__4737__auto___44382 = (0);\nwhile(true){\nif((i__4737__auto___44382 < len__4736__auto___44381)){\nargs__4742__auto__.push((arguments[i__4737__auto___44382]));\n\nvar G__44383 = (i__4737__auto___44382 + (1));\ni__4737__auto___44382 = G__44383;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"surrogate\"], null),args);\n}));\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$applyTo = (function (seq44048){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq44048));\n}));\n\ndevtools.formatters.markup._LT_surrogate_GT_ = (function devtools$formatters$markup$_LT_surrogate_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44384 = arguments.length;\nvar i__4737__auto___44385 = (0);\nwhile(true){\nif((i__4737__auto___44385 < len__4736__auto___44384)){\nargs__4742__auto__.push((arguments[i__4737__auto___44385]));\n\nvar G__44386 = (i__4737__auto___44385 + (1));\ni__4737__auto___44385 = G__44386;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (p__44064){\nvar vec__44065 = p__44064;\nvar object = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44065,(0),null);\nvar header = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44065,(1),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44065,(2),null);\nvar start_index = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44065,(3),null);\nvar header__$1 = (((!((body == null))))?devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header], 0)):header);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,header__$1,body,start_index], 0));\n}));\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$applyTo = (function (seq44054){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq44054));\n}));\n\ndevtools.formatters.markup._LT_reference_GT_ = (function devtools$formatters$markup$_LT_reference_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44387 = arguments.length;\nvar i__4737__auto___44388 = (0);\nwhile(true){\nif((i__4737__auto___44388 < len__4736__auto___44387)){\nargs__4742__auto__.push((arguments[i__4737__auto___44388]));\n\nvar G__44390 = (i__4737__auto___44388 + (1));\ni__4737__auto___44388 = G__44390;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reference\"], null),args);\n}));\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$applyTo = (function (seq44074){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq44074));\n}));\n\ndevtools.formatters.markup._LT_reference_surrogate_GT_ = (function devtools$formatters$markup$_LT_reference_surrogate_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44391 = arguments.length;\nvar i__4737__auto___44392 = (0);\nwhile(true){\nif((i__4737__auto___44392 < len__4736__auto___44391)){\nargs__4742__auto__.push((arguments[i__4737__auto___44392]));\n\nvar G__44393 = (i__4737__auto___44392 + (1));\ni__4737__auto___44392 = G__44393;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_surrogate_GT_,args)], 0));\n}));\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$applyTo = (function (seq44075){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq44075));\n}));\n\ndevtools.formatters.markup._LT_circular_reference_GT_ = (function devtools$formatters$markup$_LT_circular_reference_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44394 = arguments.length;\nvar i__4737__auto___44395 = (0);\nwhile(true){\nif((i__4737__auto___44395 < len__4736__auto___44394)){\nargs__4742__auto__.push((arguments[i__4737__auto___44395]));\n\nvar G__44396 = (i__4737__auto___44395 + (1));\ni__4737__auto___44395 = G__44396;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-tag\",\"circular-reference-tag\",858973471),new cljs.core.Keyword(null,\"circular-ref-icon\",\"circular-ref-icon\",-2087682919)], null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-body-tag\",\"circular-reference-body-tag\",-1301830023)], null),children)], 0));\n}));\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$applyTo = (function (seq44076){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq44076));\n}));\n\ndevtools.formatters.markup._LT_native_reference_GT_ = (function devtools$formatters$markup$_LT_native_reference_GT_(object){\nvar reference = devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,(function (p1__44077_SHARP_){\nreturn devtools.formatters.state.set_prevent_recursion(p1__44077_SHARP_,true);\n})], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-wrapper-tag\",\"native-reference-wrapper-tag\",2047690940),new cljs.core.Keyword(null,\"native-reference-background\",\"native-reference-background\",-286129550),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-tag\",\"native-reference-tag\",-1516119079),reference], null)], null);\n});\ndevtools.formatters.markup._LT_header_expander_GT_ = (function devtools$formatters$markup$_LT_header_expander_GT_(object){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,new cljs.core.Keyword(null,\"header-expander-symbol\",\"header-expander-symbol\",907531743),new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0)),devtools.formatters.state.reset_depth_limits], 0));\n});\ndevtools.formatters.markup._LT_cljs_land_GT_ = (function devtools$formatters$markup$_LT_cljs_land_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44397 = arguments.length;\nvar i__4737__auto___44398 = (0);\nwhile(true){\nif((i__4737__auto___44398 < len__4736__auto___44397)){\nargs__4742__auto__.push((arguments[i__4737__auto___44398]));\n\nvar G__44399 = (i__4737__auto___44398 + (1));\ni__4737__auto___44398 = G__44399;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cljs-land-tag\",\"cljs-land-tag\",-7524377)], null),children);\n}));\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$applyTo = (function (seq44078){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq44078));\n}));\n\ndevtools.formatters.markup._LT_nil_GT_ = (function devtools$formatters$markup$_LT_nil_GT_(){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil-tag\",\"nil-tag\",-1587449115),new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], null);\n});\ndevtools.formatters.markup._LT_bool_GT_ = (function devtools$formatters$markup$_LT_bool_GT_(bool){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bool-tag\",\"bool-tag\",-10409808),cljs.core.str.cljs$core$IFn$_invoke$arity$1(bool)], null);\n});\ndevtools.formatters.markup._LT_keyword_GT_ = (function devtools$formatters$markup$_LT_keyword_GT_(keyword){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keyword-tag\",\"keyword-tag\",1587228387),cljs.core.str.cljs$core$IFn$_invoke$arity$1(keyword)], null);\n});\ndevtools.formatters.markup._LT_symbol_GT_ = (function devtools$formatters$markup$_LT_symbol_GT_(symbol){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"symbol-tag\",\"symbol-tag\",-100807517),cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)], null);\n});\ndevtools.formatters.markup._LT_number_GT_ = (function devtools$formatters$markup$_LT_number_GT_(number){\nif(cljs.core.truth_(isFinite(number))){\nif(cljs.core.integer_QMARK_(number)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"integer-tag\",\"integer-tag\",698000472),number], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-tag\",\"float-tag\",-390834106),number], null);\n}\n} else {\nif(cljs.core.truth_(isNaN(number))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-nan-tag\",\"float-nan-tag\",557403379),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-infinity-tag\",\"float-infinity-tag\",-289254297),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\n}\n}\n});\ndevtools.formatters.markup._LT_string_GT_ = (function devtools$formatters$markup$_LT_string_GT_(string){\nvar dq = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"dq\",\"dq\",-1690275860));\nvar re_nl = (new RegExp(\"\\n\",\"g\"));\nvar nl_marker = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"new-line-string-replacer\",\"new-line-string-replacer\",-753206206));\nvar inline_string = string.replace(re_nl,nl_marker);\nvar max_inline_string_size = (devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)) + devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar quote_string = (function (s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq)].join('');\n});\nvar should_abbreviate_QMARK_ = (cljs.core.count(inline_string) > max_inline_string_size);\nif(should_abbreviate_QMARK_){\nvar abbreviated_string = devtools.formatters.helpers.abbreviate_long_string(inline_string,devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-abbreviation-marker\",\"string-abbreviation-marker\",-347785112)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar abbreviated_string_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(abbreviated_string)], null);\nvar string_with_nl_markers = string.replace(re_nl,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(nl_marker),\"\\n\"].join(''));\nvar details_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expanded-string-tag\",\"expanded-string-tag\",-2125162127),string_with_nl_markers], null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([string,abbreviated_string_markup,details_markup], 0));\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(inline_string)], null);\n}\n});\ndevtools.formatters.markup._LT_preview_GT_ = (function devtools$formatters$markup$_LT_preview_GT_(value){\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"header-tag\",\"header-tag\",1594852433),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-print-level\",\"max-print-level\",-462237413))], 0));\n});\ndevtools.formatters.markup._LT_body_GT_ = (function devtools$formatters$markup$_LT_body_GT_(markup){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-tag\",\"body-tag\",433527431),markup], null);\n});\ndevtools.formatters.markup._LT_aligned_body_GT_ = (function devtools$formatters$markup$_LT_aligned_body_GT_(markups_lists){\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aligned-li-tag\",\"aligned-li-tag\",1727029722)], null),line);\n} else {\nreturn null;\n}\n});\nvar aligned_lines = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn devtools.formatters.markup._LT_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747)], null),aligned_lines));\n});\ndevtools.formatters.markup._LT_standard_body_GT_ = (function devtools$formatters$markup$_LT_standard_body_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44407 = arguments.length;\nvar i__4737__auto___44408 = (0);\nwhile(true){\nif((i__4737__auto___44408 < len__4736__auto___44407)){\nargs__4742__auto__.push((arguments[i__4737__auto___44408]));\n\nvar G__44409 = (i__4737__auto___44408 + (1));\ni__4737__auto___44408 = G__44409;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (markups_lists,p__44114){\nvar vec__44115 = p__44114;\nvar no_margin_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44115,(0),null);\nvar ol_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747):new cljs.core.Keyword(null,\"standard-ol-tag\",\"standard-ol-tag\",1120081433));\nvar li_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-li-no-margin-tag\",\"standard-li-no-margin-tag\",-844555468):new cljs.core.Keyword(null,\"standard-li-tag\",\"standard-li-tag\",-932749876));\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [li_tag], null),line);\n} else {\nreturn null;\n}\n});\nvar lines_markups = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ol_tag], null),lines_markups);\n}));\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$applyTo = (function (seq44109){\nvar G__44110 = cljs.core.first(seq44109);\nvar seq44109__$1 = cljs.core.next(seq44109);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44110,seq44109__$1);\n}));\n\ndevtools.formatters.markup._LT_standard_body_reference_GT_ = (function devtools$formatters$markup$_LT_standard_body_reference_GT_(o){\nreturn devtools.formatters.markup._LT_standard_body_GT_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([o], 0))], null)], null));\n});\ndevtools.formatters.markup._LT_index_GT_ = (function devtools$formatters$markup$_LT_index_GT_(value){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"index-tag\",\"index-tag\",693492486),value,new cljs.core.Keyword(null,\"line-index-separator\",\"line-index-separator\",-1735989246)], null);\n});\ndevtools.formatters.markup.body_line = (function devtools$formatters$markup$body_line(index,value){\nvar index_markup = devtools.formatters.markup._LT_index_GT_(index);\nvar value_markup = devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"item-tag\",\"item-tag\",-988763304),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"body-line-max-print-level\",\"body-line-max-print-level\",571158623))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index_markup,value_markup], null);\n});\ndevtools.formatters.markup.prepare_body_lines = (function devtools$formatters$markup$prepare_body_lines(data,starting_index){\nvar work = data;\nvar index = starting_index;\nvar lines = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(work)){\nreturn lines;\n} else {\nvar G__44410 = cljs.core.rest(work);\nvar G__44411 = (index + (1));\nvar G__44412 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,devtools.formatters.markup.body_line(index,cljs.core.first(work)));\nwork = G__44410;\nindex = G__44411;\nlines = G__44412;\ncontinue;\n}\nbreak;\n}\n});\ndevtools.formatters.markup.body_lines = (function devtools$formatters$markup$body_lines(value,starting_index){\nvar seq = cljs.core.seq(value);\nvar max_number_body_items = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-number-body-items\",\"max-number-body-items\",299914624));\nvar chunk = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar rest = cljs.core.drop.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar lines = devtools.formatters.markup.prepare_body_lines(chunk,starting_index);\nvar continue_QMARK_ = (!(cljs.core.empty_QMARK_(cljs.core.take.cljs$core$IFn$_invoke$arity$2((1),rest))));\nif((!(continue_QMARK_))){\nreturn lines;\n} else {\nvar more_label_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-items-more-tag\",\"body-items-more-tag\",867141569),new cljs.core.Keyword(null,\"body-items-more-label\",\"body-items-more-label\",-1561152123)], null);\nvar start_index = (starting_index + max_number_body_items);\nvar more_markup = devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rest,more_label_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721),start_index], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [more_markup], null));\n}\n});\ndevtools.formatters.markup._LT_details_GT_ = (function devtools$formatters$markup$_LT_details_GT_(value,starting_index){\nvar has_continuation_QMARK_ = (starting_index > (0));\nvar body_markup = devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup.body_lines(value,starting_index),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([has_continuation_QMARK_], 0));\nif(has_continuation_QMARK_){\nreturn body_markup;\n} else {\nreturn devtools.formatters.markup._LT_body_GT_(body_markup);\n}\n});\ndevtools.formatters.markup._LT_list_details_GT_ = (function devtools$formatters$markup$_LT_list_details_GT_(items,_opts){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,items));\n});\ndevtools.formatters.markup._LT_list_GT_ = (function devtools$formatters$markup$_LT_list_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44415 = arguments.length;\nvar i__4737__auto___44416 = (0);\nwhile(true){\nif((i__4737__auto___44416 < len__4736__auto___44415)){\nargs__4742__auto__.push((arguments[i__4737__auto___44416]));\n\nvar G__44417 = (i__4737__auto___44416 + (1));\ni__4737__auto___44416 = G__44417;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (items,max_count,p__44177){\nvar vec__44179 = p__44177;\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44179,(0),null);\nvar items_markups = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_count,items);\nvar more_count = (cljs.core.count(items) - max_count);\nvar more_QMARK_ = (more_count > (0));\nvar separator = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-separator\",\"list-separator\",900562185);\n}\n})();\nvar more_symbol = ((more_QMARK_)?(function (){var temp__5733__auto__ = new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar more_symbol = temp__5733__auto__;\nif(cljs.core.fn_QMARK_(more_symbol)){\nreturn (more_symbol.cljs$core$IFn$_invoke$arity$1 ? more_symbol.cljs$core$IFn$_invoke$arity$1(more_count) : more_symbol.call(null,more_count));\n} else {\nreturn more_symbol;\n}\n} else {\nreturn devtools.formatters.helpers.get_more_marker(more_count);\n}\n})():null);\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-tag\",\"list-tag\",1555796884);\n}\n})(),(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-open-symbol\",\"list-open-symbol\",-1162287443);\n}\n})()], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(separator,items_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator,more_symbol], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-close-symbol\",\"list-close-symbol\",-1120016586);\n}\n})()], null)], 0));\nif(more_QMARK_){\nvar details_markup = new cljs.core.Keyword(null,\"details\",\"details\",1956795411).cljs$core$IFn$_invoke$arity$1(opts);\nvar default_details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(devtools.formatters.markup._LT_list_details_GT_,items,opts);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,(function (){var or__4126__auto__ = details_markup;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn default_details_fn;\n}\n})()], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$applyTo = (function (seq44165){\nvar G__44167 = cljs.core.first(seq44165);\nvar seq44165__$1 = cljs.core.next(seq44165);\nvar G__44168 = cljs.core.first(seq44165__$1);\nvar seq44165__$2 = cljs.core.next(seq44165__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44167,G__44168,seq44165__$2);\n}));\n\ndevtools.formatters.markup._LT_meta_GT_ = (function devtools$formatters$markup$_LT_meta_GT_(metadata){\nvar body_fn = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-body-tag\",\"meta-body-tag\",1689183121),devtools.formatters.markup._LT_preview_GT_(metadata)], null);\n});\nvar header = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-header-tag\",\"meta-header-tag\",-1207812581),\"meta\"], null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-reference-tag\",\"meta-reference-tag\",914791936),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metadata,header,body_fn], 0))], null);\n});\ndevtools.formatters.markup._LT_meta_wrapper_GT_ = (function devtools$formatters$markup$_LT_meta_wrapper_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44444 = arguments.length;\nvar i__4737__auto___44445 = (0);\nwhile(true){\nif((i__4737__auto___44445 < len__4736__auto___44444)){\nargs__4742__auto__.push((arguments[i__4737__auto___44445]));\n\nvar G__44446 = (i__4737__auto___44445 + (1));\ni__4737__auto___44445 = G__44446;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (metadata,children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-wrapper-tag\",\"meta-wrapper-tag\",1927429038)], null),children,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_meta_GT_(metadata)], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$applyTo = (function (seq44223){\nvar G__44224 = cljs.core.first(seq44223);\nvar seq44223__$1 = cljs.core.next(seq44223);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44224,seq44223__$1);\n}));\n\ndevtools.formatters.markup._LT_function_details_GT_ = (function devtools$formatters$markup$_LT_function_details_GT_(fn_obj,ns,_name,arities,prefix){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar arities__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.wrap_arity,arities);\nvar make_arity_markup_list = (function (arity){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-multi-arity-args-indent-tag\",\"fn-multi-arity-args-indent-tag\",-1931373734),prefix], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),arity], null)], null);\n});\nvar arities_markupts_lists = (((cljs.core.count(arities__$1) > (1)))?cljs.core.map.cljs$core$IFn$_invoke$arity$2(make_arity_markup_list,arities__$1):null);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar native_markups_list = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(fn_obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arities_markupts_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_arities_GT_ = (function devtools$formatters$markup$_LT_arities_GT_(arities){\nvar multi_arity_QMARK_ = (cljs.core.count(arities) > (1));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),devtools.formatters.helpers.wrap_arity(((multi_arity_QMARK_)?devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653)):cljs.core.first(arities)))], null);\n});\ndevtools.formatters.markup._LT_function_GT_ = (function devtools$formatters$markup$_LT_function_GT_(fn_obj){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar vec__44259 = devtools.munging.parse_fn_info(fn_obj);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44259,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44259,(1),null);\nvar lambda_QMARK_ = cljs.core.empty_QMARK_(name);\nvar spacer_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"spacer\",\"spacer\",2067425139));\nvar rest_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"rest-symbol\",\"rest-symbol\",1021371174));\nvar multi_arity_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653));\nvar arities = devtools.munging.extract_arities(fn_obj,true,spacer_symbol,multi_arity_symbol,rest_symbol);\nvar arities_markup = devtools.formatters.markup._LT_arities_GT_(arities);\nvar name_markup = (((!(lambda_QMARK_)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-name-tag\",\"fn-name-tag\",555823755),name], null):null);\nvar icon_markup = ((lambda_QMARK_)?new cljs.core.Keyword(null,\"lambda-icon\",\"lambda-icon\",980753546):new cljs.core.Keyword(null,\"fn-icon\",\"fn-icon\",-1412665288));\nvar prefix_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-prefix-tag\",\"fn-prefix-tag\",1947411856),icon_markup,name_markup], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-header-tag\",\"fn-header-tag\",-1262068349),prefix_markup,arities_markup], null);\nvar details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_function_details_GT_,fn_obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arities,prefix_markup], 0));\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_obj,preview_markup,details_fn], 0));\n});\ndevtools.formatters.markup._LT_type_basis_item_GT_ = (function devtools$formatters$markup$_LT_type_basis_item_GT_(basis_item){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-item-tag\",\"type-basis-item-tag\",50612816),cljs.core.name(basis_item)], null);\n});\ndevtools.formatters.markup._LT_type_basis_GT_ = (function devtools$formatters$markup$_LT_type_basis_GT_(basis){\nvar item_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_type_basis_item_GT_,basis);\nvar children_markups = cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type-basis-item-separator\",\"type-basis-item-separator\",-2029193896),item_markups);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-tag\",\"type-basis-tag\",-2122159204)], null),children_markups);\n});\ndevtools.formatters.markup._LT_type_details_GT_ = (function devtools$formatters$markup$_LT_type_details_GT_(constructor_fn,ns,_name,basis){\nvar ns_markup = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar basis_markup = ((cljs.core.empty_QMARK_(basis))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"empty-basis-symbol\",\"empty-basis-symbol\",-1971559593)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"basis-icon\",\"basis-icon\",1917779567),devtools.formatters.markup._LT_type_basis_GT_(basis)], null));\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(constructor_fn)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [basis_markup,ns_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_type_GT_ = (function devtools$formatters$markup$_LT_type_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44456 = arguments.length;\nvar i__4737__auto___44458 = (0);\nwhile(true){\nif((i__4737__auto___44458 < len__4736__auto___44456)){\nargs__4742__auto__.push((arguments[i__4737__auto___44458]));\n\nvar G__44459 = (i__4737__auto___44458 + (1));\ni__4737__auto___44458 = G__44459;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__44276){\nvar vec__44277 = p__44276;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44277,(0),null);\nvar vec__44280 = devtools.munging.parse_constructor_info(constructor_fn);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44280,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44280,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44280,(2),null);\nvar name_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-name-tag\",\"type-name-tag\",-1317275511),name], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4126__auto__ = header_tag;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"type-header-tag\",\"type-header-tag\",1645372265);\n}\n})(),new cljs.core.Keyword(null,\"type-symbol\",\"type-symbol\",-941894755),name_markup], null);\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_type_details_GT_,constructor_fn,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([basis], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-wrapper-tag\",\"type-wrapper-tag\",-1732366004),new cljs.core.Keyword(null,\"type-header-background\",\"type-header-background\",-810861696),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-ref-tag\",\"type-ref-tag\",2126727355),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([constructor_fn,preview_markup,details_markup_fn], 0))], null)], null);\n}));\n\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$applyTo = (function (seq44274){\nvar G__44275 = cljs.core.first(seq44274);\nvar seq44274__$1 = cljs.core.next(seq44274);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44275,seq44274__$1);\n}));\n\ndevtools.formatters.markup._LT_standalone_type_GT_ = (function devtools$formatters$markup$_LT_standalone_type_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44469 = arguments.length;\nvar i__4737__auto___44470 = (0);\nwhile(true){\nif((i__4737__auto___44470 < len__4736__auto___44469)){\nargs__4742__auto__.push((arguments[i__4737__auto___44470]));\n\nvar G__44471 = (i__4737__auto___44470 + (1));\ni__4737__auto___44470 = G__44471;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__44287){\nvar vec__44288 = p__44287;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44288,(0),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standalone-type-tag\",\"standalone-type-tag\",-1677164791),devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header_tag], 0))], null);\n}));\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$applyTo = (function (seq44284){\nvar G__44285 = cljs.core.first(seq44284);\nvar seq44284__$1 = cljs.core.next(seq44284);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44285,seq44284__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_arity_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arity_GT_(arity_fn){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arity_fn], 0));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_details_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_details_GT_(fns){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,fns));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44472 = arguments.length;\nvar i__4737__auto___44473 = (0);\nwhile(true){\nif((i__4737__auto___44473 < len__4736__auto___44472)){\nargs__4742__auto__.push((arguments[i__4737__auto___44473]));\n\nvar G__44474 = (i__4737__auto___44473 + (1));\ni__4737__auto___44473 = G__44474;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fns,p__44298){\nvar vec__44299 = p__44298;\nvar max_fns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44299,(0),null);\nvar max_fns__$1 = (function (){var or__4126__auto__ = max_fns;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-protocol-method-arities-list\",\"max-protocol-method-arities-list\",-45936465));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fns) > max_fns__$1);\nvar aritites_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fns__$1,fns));\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-tag\",\"protocol-method-arities-header-tag\",734407707),new cljs.core.Keyword(null,\"protocol-method-arities-header-open-symbol\",\"protocol-method-arities-header-open-symbol\",1704200465)], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"protocol-method-arities-list-header-separator\",\"protocol-method-arities-list-header-separator\",-115158954),aritites_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-more-symbol\",\"protocol-method-arities-more-symbol\",-477018522)], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-close-symbol\",\"protocol-method-arities-header-close-symbol\",-1375237120)], null)], 0));\nif(more_QMARK_){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arities_details_GT_,fns);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,details_markup_fn], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$applyTo = (function (seq44296){\nvar G__44297 = cljs.core.first(seq44296);\nvar seq44296__$1 = cljs.core.next(seq44296);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44297,seq44296__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_GT_ = (function devtools$formatters$markup$_LT_protocol_method_GT_(name,arities){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-tag\",\"protocol-method-tag\",2032279830),new cljs.core.Keyword(null,\"method-icon\",\"method-icon\",-1678775281),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-name-tag\",\"protocol-method-name-tag\",-1030376744),name], null),devtools.formatters.markup._LT_protocol_method_arities_GT_(arities)], null);\n});\ndevtools.formatters.markup._LT_protocol_details_GT_ = (function devtools$formatters$markup$_LT_protocol_details_GT_(obj,ns,_name,selector,_fast_QMARK_){\nvar protocol_obj = devtools.munging.get_protocol_object(selector);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-ns-name-tag\",\"protocol-ns-name-tag\",1832081510),ns], null)], null):null);\nvar native_markups_list = (((!((protocol_obj == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(protocol_obj)], null):null);\nvar methods$ = devtools.munging.collect_protocol_methods(obj,selector);\nvar methods_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__44319){\nvar vec__44320 = p__44319;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44320,(0),null);\nvar arities = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44320,(1),null);\nreturn devtools.formatters.markup._LT_protocol_method_GT_(name,arities);\n}),methods$);\nvar methods_markups_lists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,methods_markups);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(methods_markups_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_protocol_GT_ = (function devtools$formatters$markup$_LT_protocol_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44485 = arguments.length;\nvar i__4737__auto___44486 = (0);\nwhile(true){\nif((i__4737__auto___44486 < len__4736__auto___44485)){\nargs__4742__auto__.push((arguments[i__4737__auto___44486]));\n\nvar G__44487 = (i__4737__auto___44486 + (1));\ni__4737__auto___44486 = G__44487;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocol,p__44329){\nvar vec__44330 = p__44329;\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44330,(0),null);\nvar map__44333 = protocol;\nvar map__44333__$1 = (((((!((map__44333 == null))))?(((((map__44333.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__44333.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__44333):map__44333);\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44333__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44333__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar selector = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44333__$1,new cljs.core.Keyword(null,\"selector\",\"selector\",762528866));\nvar fast_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44333__$1,new cljs.core.Keyword(null,\"fast?\",\"fast?\",-1813307150));\nvar preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4126__auto__ = tag;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"protocol-name-tag\",\"protocol-name-tag\",1508238310);\n}\n})(),name], null);\nvar prefix_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fast_QMARK_)?new cljs.core.Keyword(null,\"fast-protocol-tag\",\"fast-protocol-tag\",2066025065):new cljs.core.Keyword(null,\"slow-protocol-tag\",\"slow-protocol-tag\",2061129467)),new cljs.core.Keyword(null,\"protocol-background\",\"protocol-background\",1111513794)], null);\nif((!((obj == null)))){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_protocol_details_GT_,obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selector,fast_QMARK_], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,preview_markup,details_markup_fn], 0)));\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,preview_markup);\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$applyTo = (function (seq44326){\nvar G__44327 = cljs.core.first(seq44326);\nvar seq44326__$1 = cljs.core.next(seq44326);\nvar G__44328 = cljs.core.first(seq44326__$1);\nvar seq44326__$2 = cljs.core.next(seq44326__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44327,G__44328,seq44326__$2);\n}));\n\ndevtools.formatters.markup._LT_more_protocols_GT_ = (function devtools$formatters$markup$_LT_more_protocols_GT_(more_count){\nvar fake_protocol = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),devtools.formatters.helpers.get_more_marker(more_count)], null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic(null,fake_protocol,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"protocol-more-tag\",\"protocol-more-tag\",2098702865)], 0));\n});\ndevtools.formatters.markup._LT_protocols_list_GT_ = (function devtools$formatters$markup$_LT_protocols_list_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44492 = arguments.length;\nvar i__4737__auto___44493 = (0);\nwhile(true){\nif((i__4737__auto___44493 < len__4736__auto___44492)){\nargs__4742__auto__.push((arguments[i__4737__auto___44493]));\n\nvar G__44494 = (i__4737__auto___44493 + (1));\ni__4737__auto___44493 = G__44494;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocols,p__44342){\nvar vec__44343 = p__44342;\nvar max_protocols = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44343,(0),null);\nvar max_protocols__$1 = (function (){var or__4126__auto__ = max_protocols;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-list-protocols\",\"max-list-protocols\",-537135129));\n}\n})();\nvar protocols_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_GT_,obj),protocols);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic(protocols_markups,max_protocols__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"protocols-header-tag\",\"protocols-header-tag\",-734413384),new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825),new cljs.core.Keyword(null,\"protocols-list-open-symbol\",\"protocols-list-open-symbol\",-729713043),new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165),new cljs.core.Keyword(null,\"protocols-list-close-symbol\",\"protocols-list-close-symbol\",652072902),new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125),new cljs.core.Keyword(null,\"header-protocol-separator\",\"header-protocol-separator\",445531439),new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242),devtools.formatters.markup._LT_more_protocols_GT_], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$applyTo = (function (seq44339){\nvar G__44340 = cljs.core.first(seq44339);\nvar seq44339__$1 = cljs.core.next(seq44339);\nvar G__44341 = cljs.core.first(seq44339__$1);\nvar seq44339__$2 = cljs.core.next(seq44339__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44340,G__44341,seq44339__$2);\n}));\n\ndevtools.formatters.markup._LT_field_GT_ = (function devtools$formatters$markup$_LT_field_GT_(name,value){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-tag\",\"header-field-tag\",-1403476101),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-name-tag\",\"header-field-name-tag\",82291956),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null),new cljs.core.Keyword(null,\"header-field-value-spacer\",\"header-field-value-spacer\",-1210630679),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-value-tag\",\"header-field-value-tag\",-1708691701),devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),(function (p1__44346_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__44346_SHARP_,(1));\n})], 0))], null),new cljs.core.Keyword(null,\"header-field-separator\",\"header-field-separator\",-774444018)], null);\n});\ndevtools.formatters.markup._LT_fields_details_row_GT_ = (function devtools$formatters$markup$_LT_fields_details_row_GT_(field){\nvar vec__44347 = field;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44347,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44347,(1),null);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-tr-tag\",\"body-field-tr-tag\",37280691),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td1-tag\",\"body-field-td1-tag\",256357429),new cljs.core.Keyword(null,\"body-field-symbol\",\"body-field-symbol\",256897537),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-name-tag\",\"body-field-name-tag\",917867601),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td2-tag\",\"body-field-td2-tag\",94501500),new cljs.core.Keyword(null,\"body-field-value-spacer\",\"body-field-value-spacer\",1279911362)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td3-tag\",\"body-field-td3-tag\",-803119922),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-value-tag\",\"body-field-value-tag\",800789079),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0))], null)], null)], null);\n});\ndevtools.formatters.markup._LT_fields_GT_ = (function devtools$formatters$markup$_LT_fields_GT_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___44503 = arguments.length;\nvar i__4737__auto___44504 = (0);\nwhile(true){\nif((i__4737__auto___44504 < len__4736__auto___44503)){\nargs__4742__auto__.push((arguments[i__4737__auto___44504]));\n\nvar G__44506 = (i__4737__auto___44504 + (1));\ni__4737__auto___44504 = G__44506;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fields,p__44353){\nvar vec__44354 = p__44353;\nvar max_fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44354,(0),null);\nif((cljs.core.count(fields) === (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-no-fields-symbol\",\"fields-header-no-fields-symbol\",-1749204979)], null);\n} else {\nvar max_fields__$1 = (function (){var or__4126__auto__ = max_fields;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-instance-header-fields\",\"max-instance-header-fields\",-126007269));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fields) > max_fields__$1);\nvar fields_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__44358){\nvar vec__44359 = p__44358;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44359,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44359,(1),null);\nreturn devtools.formatters.markup._LT_field_GT_(name,value);\n}),cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fields__$1,fields));\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-open-symbol\",\"fields-header-open-symbol\",-26243798)], null),fields_markups,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((more_QMARK_)?new cljs.core.Keyword(null,\"more-fields-symbol\",\"more-fields-symbol\",720022882):null),new cljs.core.Keyword(null,\"fields-header-close-symbol\",\"fields-header-close-symbol\",1615181116)], null)], 0));\n}\n}));\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$applyTo = (function (seq44350){\nvar G__44351 = cljs.core.first(seq44350);\nvar seq44350__$1 = cljs.core.next(seq44350);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44351,seq44350__$1);\n}));\n\ndevtools.formatters.markup._LT_fields_details_GT_ = (function devtools$formatters$markup$_LT_fields_details_GT_(fields,obj){\nvar protocols = devtools.munging.scan_protocols(obj);\nvar has_protocols_QMARK_ = (!(cljs.core.empty_QMARK_(protocols)));\nvar fields_markup = (((!((cljs.core.count(fields) === (0)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-icon\",\"fields-icon\",-436030420),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-body-fields-table-tag\",\"instance-body-fields-table-tag\",1306340776)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_fields_details_row_GT_,fields))], null):null);\nvar protocols_list_markup = ((has_protocols_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocols-icon\",\"protocols-icon\",-517302494),devtools.formatters.markup._LT_protocols_list_GT_(obj,protocols)], null):null);\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fields_markup,protocols_list_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_instance_GT_ = (function devtools$formatters$markup$_LT_instance_GT_(value){\nvar constructor_fn = devtools.formatters.helpers.get_constructor(value);\nvar vec__44362 = devtools.munging.parse_constructor_info(constructor_fn);\nvar _ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44362,(0),null);\nvar _name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44362,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44362,(2),null);\nvar custom_printing_QMARK_ = (((!((value == null))))?(((((value.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === value.cljs$core$IPrintWithWriter$))))?true:false):false);\nvar type_markup = devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"instance-type-header-tag\",\"instance-type-header-tag\",-1015702989)], 0));\nvar fields = devtools.formatters.helpers.fetch_fields_values(value,basis);\nvar fields_markup = devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic(fields,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((custom_printing_QMARK_)?(0):null)], 0));\nvar fields_details_markup_fn = (function (){\nreturn devtools.formatters.markup._LT_fields_details_GT_(fields,value);\n});\nvar fields_preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-value-tag\",\"instance-value-tag\",-1739593896),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value,fields_markup,fields_details_markup_fn], 0))], null);\nvar custom_printing_markup = ((custom_printing_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-custom-printing-wrapper-tag\",\"instance-custom-printing-wrapper-tag\",1461890684),new cljs.core.Keyword(null,\"instance-custom-printing-background\",\"instance-custom-printing-background\",-248433646),devtools.formatters.markup.print_via_protocol(value,new cljs.core.Keyword(null,\"instance-custom-printing-tag\",\"instance-custom-printing-tag\",-67034432))], null):null);\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-header-tag\",\"instance-header-tag\",903623870),new cljs.core.Keyword(null,\"instance-header-background\",\"instance-header-background\",1510357287),fields_preview_markup,custom_printing_markup,type_markup], null);\n});\ndevtools.formatters.markup._LT_header_GT_ = (function devtools$formatters$markup$_LT_header_GT_(value){\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_preview_GT_(value)], 0));\n});\ndevtools.formatters.markup._LT_surrogate_header_GT_ = (function devtools$formatters$markup$_LT_surrogate_header_GT_(surrogate){\nvar or__4126__auto__ = devtools.formatters.templating.get_surrogate_header(surrogate);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn devtools.formatters.markup._LT_preview_GT_(devtools.formatters.templating.get_surrogate_target(surrogate));\n}\n});\ndevtools.formatters.markup._LT_surrogate_target_GT_ = (function devtools$formatters$markup$_LT_surrogate_target_GT_(surrogate){\nvar target = devtools.formatters.templating.get_surrogate_target(surrogate);\nif(cljs.core.seqable_QMARK_(target)){\nvar starting_index = devtools.formatters.templating.get_surrogate_start_index(surrogate);\nreturn devtools.formatters.markup._LT_details_GT_(target,starting_index);\n} else {\nreturn devtools.formatters.markup._LT_standard_body_reference_GT_(target);\n}\n});\ndevtools.formatters.markup._LT_surrogate_body_GT_ = (function devtools$formatters$markup$_LT_surrogate_body_GT_(surrogate){\nvar temp__5733__auto__ = devtools.formatters.templating.get_surrogate_body(surrogate);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar body = temp__5733__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"target\",\"target\",253001721),body)){\nreturn devtools.formatters.markup._LT_surrogate_target_GT_(surrogate);\n} else {\nreturn body;\n}\n} else {\nreturn null;\n}\n});\ndevtools.formatters.markup._LT_atomic_GT_ = (function devtools$formatters$markup$_LT_atomic_GT_(value){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-nils\",\"render-nils\",1360008699),value,cljs.core.nil_QMARK_))){\nreturn devtools.formatters.markup._LT_nil_GT_();\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-bools\",\"render-bools\",1793659724),value,devtools.formatters.helpers.bool_QMARK_))){\nreturn devtools.formatters.markup._LT_bool_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-strings\",\"render-strings\",-1497177335),value,cljs.core.string_QMARK_))){\nreturn devtools.formatters.markup._LT_string_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-numbers\",\"render-numbers\",-1385392009),value,cljs.core.number_QMARK_))){\nreturn devtools.formatters.markup._LT_number_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-keywords\",\"render-keywords\",1200455875),value,cljs.core.keyword_QMARK_))){\nreturn devtools.formatters.markup._LT_keyword_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-symbols\",\"render-symbols\",-887705016),value,cljs.core.symbol_QMARK_))){\nreturn devtools.formatters.markup._LT_symbol_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-instances\",\"render-instances\",-1803579686),value,devtools.formatters.helpers.should_render_instance_QMARK_))){\nreturn devtools.formatters.markup._LT_instance_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-types\",\"render-types\",-129927851),value,devtools.formatters.helpers.cljs_type_QMARK_))){\nreturn devtools.formatters.markup._LT_standalone_type_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-functions\",\"render-functions\",1273333002),value,devtools.formatters.helpers.cljs_function_QMARK_))){\nreturn devtools.formatters.markup._LT_function_GT_(value);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\ndevtools.formatters.markup.get_markup_db = (function devtools$formatters$markup$get_markup_db(){\nif((devtools.formatters.markup._STAR_markup_db_STAR_ == null)){\n(devtools.formatters.markup._STAR_markup_db_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"aligned-body\",\"aligned-body\",-2124118747),new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Keyword(null,\"protocol-method-arities\",\"protocol-method-arities\",-545542044),new cljs.core.Keyword(null,\"surrogate-header\",\"surrogate-header\",1705524526),new cljs.core.Keyword(null,\"details\",\"details\",1956795411),new cljs.core.Keyword(null,\"more-protocols\",\"more-protocols\",359555207),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),new cljs.core.Keyword(null,\"fields-details\",\"fields-details\",-269572714),new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),new cljs.core.Keyword(null,\"string\",\"string\",-1989541586),new cljs.core.Keyword(null,\"standard-body\",\"standard-body\",-1563020798),new cljs.core.Keyword(null,\"type-basis\",\"type-basis\",-1825246054),new cljs.core.Keyword(null,\"bool\",\"bool\",1444635321),new cljs.core.Keyword(null,\"standalone-type\",\"standalone-type\",-802565278),new cljs.core.Keyword(null,\"preview\",\"preview\",451279890),new cljs.core.Keyword(null,\"header\",\"header\",119441134),new cljs.core.Keyword(null,\"protocol-method\",\"protocol-method\",1794903206),new cljs.core.Keyword(null,\"cljs-land\",\"cljs-land\",1255896927),new cljs.core.Keyword(null,\"type-basis-item\",\"type-basis-item\",-1662150132),new cljs.core.Keyword(null,\"protocol-method-arities-details\",\"protocol-method-arities-details\",1944702118),new cljs.core.Keyword(null,\"fields-details-row\",\"fields-details-row\",2066344936),new cljs.core.Keyword(null,\"standard-body-reference\",\"standard-body-reference\",1513301561),new cljs.core.Keyword(null,\"surrogate-body\",\"surrogate-body\",-1618569585),new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"protocol-method-arity\",\"protocol-method-arity\",-1861927833),new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),new cljs.core.Keyword(null,\"type-details\",\"type-details\",477755178),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587),new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),new cljs.core.Keyword(null,\"surrogate\",\"surrogate\",2122284260),new cljs.core.Keyword(null,\"protocols-list\",\"protocols-list\",371434187),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"instance\",\"instance\",-2121349050),new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),new cljs.core.Keyword(null,\"function-details\",\"function-details\",1501147310),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),new cljs.core.Keyword(null,\"arities\",\"arities\",-1781122917),new cljs.core.Keyword(null,\"header-expander\",\"header-expander\",-1606368578),new cljs.core.Keyword(null,\"list-details\",\"list-details\",46031799),new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),new cljs.core.Keyword(null,\"surrogate-target\",\"surrogate-target\",-1262730220),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"number\",\"number\",1570378438),new cljs.core.Keyword(null,\"protocol-details\",\"protocol-details\",-121549824)],[devtools.formatters.markup._LT_aligned_body_GT_,devtools.formatters.markup._LT_native_reference_GT_,devtools.formatters.markup._LT_reference_surrogate_GT_,devtools.formatters.markup._LT_keyword_GT_,devtools.formatters.markup._LT_protocol_method_arities_GT_,devtools.formatters.markup._LT_surrogate_header_GT_,devtools.formatters.markup._LT_details_GT_,devtools.formatters.markup._LT_more_protocols_GT_,devtools.formatters.markup._LT_field_GT_,devtools.formatters.markup._LT_symbol_GT_,devtools.formatters.markup._LT_fields_details_GT_,devtools.formatters.markup._LT_atomic_GT_,devtools.formatters.markup._LT_string_GT_,devtools.formatters.markup._LT_standard_body_GT_,devtools.formatters.markup._LT_type_basis_GT_,devtools.formatters.markup._LT_bool_GT_,devtools.formatters.markup._LT_standalone_type_GT_,devtools.formatters.markup._LT_preview_GT_,devtools.formatters.markup._LT_header_GT_,devtools.formatters.markup._LT_protocol_method_GT_,devtools.formatters.markup._LT_cljs_land_GT_,devtools.formatters.markup._LT_type_basis_item_GT_,devtools.formatters.markup._LT_protocol_method_arities_details_GT_,devtools.formatters.markup._LT_fields_details_row_GT_,devtools.formatters.markup._LT_standard_body_reference_GT_,devtools.formatters.markup._LT_surrogate_body_GT_,devtools.formatters.markup._LT_expandable_GT_,devtools.formatters.markup._LT_type_GT_,devtools.formatters.markup._LT_protocol_method_arity_GT_,devtools.formatters.markup._LT_raw_surrogate_GT_,devtools.formatters.markup._LT_type_details_GT_,devtools.formatters.markup._LT_list_GT_,devtools.formatters.markup._LT_meta_wrapper_GT_,devtools.formatters.markup._LT_protocol_GT_,devtools.formatters.markup._LT_index_GT_,devtools.formatters.markup._LT_surrogate_GT_,devtools.formatters.markup._LT_protocols_list_GT_,devtools.formatters.markup._LT_meta_GT_,devtools.formatters.markup._LT_instance_GT_,devtools.formatters.markup._LT_reference_GT_,devtools.formatters.markup._LT_function_details_GT_,devtools.formatters.markup._LT_function_GT_,devtools.formatters.markup._LT_arities_GT_,devtools.formatters.markup._LT_header_expander_GT_,devtools.formatters.markup._LT_list_details_GT_,devtools.formatters.markup._LT_circular_reference_GT_,devtools.formatters.markup._LT_surrogate_target_GT_,devtools.formatters.markup._LT_fields_GT_,devtools.formatters.markup._LT_nil_GT_,devtools.formatters.markup._LT_body_GT_,devtools.formatters.markup._LT_number_GT_,devtools.formatters.markup._LT_protocol_details_GT_]));\n} else {\n}\n\nreturn devtools.formatters.markup._STAR_markup_db_STAR_;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/markup.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",["^ ","~$emit-markup-db","~$devtools.formatters.markup"],"~:excludes",["~#set",[]],"~:macros",["^ ","^K",["^ ","~:arglists",["~#list",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","~:name","~$devtools.formatters.markup/emit-markup-db","~:ns","^L","~:macro",true]],"^R","^L","~:op","^T","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^Y","~$devtools.formatters.printing","^Z","~$devtools.formatters.state","^[","~$devtools.formatters.templating","^10","~$devtools.munging","^11","~$munging","^11","~$cljs.core","^13","~$goog","^14"],"~:seen",["^N",["~:require","~:require-macros"]],"~:uses",["^ ","~$expandable?","^Y","~$should-render?","^Y","~$set-managed-print-level","^[","~$bool?","^Y","~$cljs-instance?","^Y","~$get-surrogate-body","^10","~$get-constructor","^Y","~$managed-print-via-writer","^Z","~$pref","^Y","~$wrap-arity","^Y","~$cljs-function?","^Y","~$get-more-marker","^Y","~$fetch-fields-values","^Y","~$managed-print-via-protocol","^Z","~$abbreviated?","^Y","~$get-surrogate-header","^10","~$reset-depth-limits","^[","~$get-surrogate-target","^10","~$set-prevent-recursion","^[","~$get-surrogate-start-index","^10","~$abbreviate-long-string","^Y","~$cljs-type?","^Y","~$should-render-instance?","^Y"],"^17",["^ ","^L","^L","^13","^13","^11","^11","^12","^11"],"~:form",["^Q",["~$ns","^L",["^Q",["^17",["^L","~:refer",["^K"]]]],["^Q",["^16",["^Y","^1R",["^1<","^1C","^1N","^1=","^1O","^19","^1G","^1M","^1?","^1A","^1:","^1D","^1B","^1E"]],["^Z","^1R",["^1@","^1F"]],["^[","^1R",["^1K","^1;","^1I"]],["^10","^1R",["^1>","^1J","^1L","^1H"]],["^11","~:as","^12"]]]]],"~:flags",["^ ","^17",["^N",[]],"^16",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^Y","^Z","^[","^10","^11"]],"^T","^L","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/markup.cljs"],"~:compiled-at",1598576881958,"~:resource-name","devtools/formatters/markup.cljs","~:warnings",[],"~:source","(ns devtools.formatters.markup\n  (:require-macros [devtools.formatters.markup :refer [emit-markup-db]])\n  (:require [devtools.formatters.helpers :refer [bool? cljs-function? cljs-type? cljs-instance?\n                                                 should-render-instance? expandable? abbreviated?\n                                                 abbreviate-long-string get-constructor pref should-render?\n                                                 get-more-marker wrap-arity fetch-fields-values]]\n            [devtools.formatters.printing :refer [managed-print-via-writer managed-print-via-protocol]]\n            [devtools.formatters.state :refer [set-prevent-recursion set-managed-print-level reset-depth-limits]]\n            [devtools.formatters.templating :refer [get-surrogate-body\n                                                    get-surrogate-target\n                                                    get-surrogate-start-index\n                                                    get-surrogate-header]]\n            [devtools.munging :as munging]))\n\n; reusable hiccup-like templates\n\n(declare get-markup-db)\n\n; -- cljs printing  ---------------------------------------------------------------------------------------------------------\n\n(defn print-with [method value tag & [max-level]]\n  (let [job-fn #(method value tag (get-markup-db))]\n    (if (some? max-level)\n      (binding [*print-level* (inc max-level)]                                                                                ; when printing do at most print-level deep recursion\n        (job-fn))\n      (job-fn))))\n\n(defn print-via-writer [value tag & [max-level]]\n  (print-with managed-print-via-writer value tag max-level))\n\n(defn print-via-protocol [value tag & [max-level]]\n  (print-with managed-print-via-protocol value tag max-level))\n\n; -- references -------------------------------------------------------------------------------------------------------------\n\n(defn <expandable> [& children]\n  (let [inner-markup (concat [:expandable-inner-tag] children)]\n    [:expandable-tag :expandable-symbol inner-markup]))\n\n(defn <raw-surrogate> [& args]\n  (concat [\"surrogate\"] args))\n\n(defn <surrogate> [& [object header body start-index]]\n  (let [header (if (some? body) (<expandable> header) header)]\n    (<raw-surrogate> object header body start-index)))\n\n(defn <reference> [& args]\n  (concat [\"reference\"] args))\n\n(defn <reference-surrogate> [& args]\n  (<reference> (apply <surrogate> args)))\n\n(defn <circular-reference> [& children]\n  (<reference-surrogate> nil [:circular-reference-tag :circular-ref-icon] (concat [:circular-reference-body-tag] children)))\n\n(defn <native-reference> [object]\n  (let [reference (<reference> object #(set-prevent-recursion % true))]\n    [:native-reference-wrapper-tag :native-reference-background [:native-reference-tag reference]]))\n\n(defn <header-expander> [object]\n  (<reference> (<raw-surrogate> object :header-expander-symbol :target) reset-depth-limits))\n\n; -- simple markup ----------------------------------------------------------------------------------------------------------\n\n(defn <cljs-land> [& children]\n  (concat [:cljs-land-tag] children))\n\n(defn <nil> []\n  ; this code is duplicated in templating.cljs, see make-reference\n  [:nil-tag :nil-label])\n\n(defn <bool> [bool]\n  [:bool-tag (str bool)])\n\n(defn <keyword> [keyword]\n  [:keyword-tag (str keyword)])\n\n(defn <symbol> [symbol]\n  [:symbol-tag (str symbol)])\n\n(defn <number> [number]\n  (if (js/isFinite number)\n    (if (integer? number)\n      [:integer-tag number]\n      [:float-tag number])\n    (if (js/isNaN number)\n      [:float-nan-tag (pr-str number)]\n      [:float-infinity-tag (pr-str number)])))\n\n; -- string markup ----------------------------------------------------------------------------------------------------------\n\n(defn <string> [string]\n  (let [dq (pref :dq)\n        re-nl (js/RegExp. \"\\n\" \"g\")\n        nl-marker (pref :new-line-string-replacer)\n        inline-string (.replace string re-nl nl-marker)\n        max-inline-string-size (+ (pref :string-prefix-limit) (pref :string-postfix-limit))\n        quote-string (fn [s] (str dq s dq))\n        should-abbreviate? (> (count inline-string) max-inline-string-size)]\n    (if should-abbreviate?\n      (let [abbreviated-string (abbreviate-long-string inline-string\n                                                       (pref :string-abbreviation-marker)\n                                                       (pref :string-prefix-limit)\n                                                       (pref :string-postfix-limit))\n            abbreviated-string-markup [:string-tag (quote-string abbreviated-string)]\n            string-with-nl-markers (.replace string re-nl (str nl-marker \"\\n\"))\n            details-markup [:expanded-string-tag string-with-nl-markers]]\n        (<reference-surrogate> string abbreviated-string-markup details-markup))\n      [:string-tag (quote-string inline-string)])))\n\n; -- generic preview markup -------------------------------------------------------------------------------------------------\n\n(defn <preview> [value]\n  (print-via-writer value :header-tag (pref :max-print-level)))\n\n; -- body-related templates -------------------------------------------------------------------------------------------------\n\n(defn <body> [markup]\n  [:body-tag markup])\n\n(defn <aligned-body> [markups-lists]\n  (let [prepend-li-tag (fn [line]\n                         (if line\n                           (concat [:aligned-li-tag] line)))\n        aligned-lines (keep prepend-li-tag markups-lists)]\n    (<body> (concat [:standard-ol-no-margin-tag] aligned-lines))))\n\n(defn <standard-body> [markups-lists & [no-margin?]]\n  (let [ol-tag (if no-margin? :standard-ol-no-margin-tag :standard-ol-tag)\n        li-tag (if no-margin? :standard-li-no-margin-tag :standard-li-tag)\n        prepend-li-tag (fn [line]\n                         (if line\n                           (concat [li-tag] line)))\n        lines-markups (keep prepend-li-tag markups-lists)]\n    (concat [ol-tag] lines-markups)))\n\n(defn <standard-body-reference> [o]\n  (<standard-body> [[(<reference> o)]]))\n\n; -- generic details markup -------------------------------------------------------------------------------------------------\n\n(defn <index> [value]\n  [:index-tag value :line-index-separator])\n\n(defn- body-line [index value]\n  (let [index-markup (<index> index)\n        value-markup (print-via-writer value :item-tag (pref :body-line-max-print-level))]\n    [index-markup value-markup]))\n\n; TODO: this fn is screaming for rewrite\n(defn- prepare-body-lines [data starting-index]\n  (loop [work data\n         index starting-index\n         lines []]\n    (if (empty? work)\n      lines\n      (recur (rest work) (inc index) (conj lines (body-line index (first work)))))))\n\n(defn- body-lines [value starting-index]\n  (let [seq (seq value)\n        max-number-body-items (pref :max-number-body-items)\n        chunk (take max-number-body-items seq)\n        rest (drop max-number-body-items seq)\n        lines (prepare-body-lines chunk starting-index)\n        continue? (not (empty? (take 1 rest)))]\n    (if-not continue?\n      lines\n      (let [more-label-markup [:body-items-more-tag :body-items-more-label]\n            start-index (+ starting-index max-number-body-items)\n            more-markup (<reference-surrogate> rest more-label-markup :target start-index)]\n        (conj lines [more-markup])))))\n\n(defn <details> [value starting-index]\n  (let [has-continuation? (pos? starting-index)\n        body-markup (<standard-body> (body-lines value starting-index) has-continuation?)]\n    (if has-continuation?\n      body-markup\n      (<body> body-markup))))\n\n; -- generic list template --------------------------------------------------------------------------------------------------\n\n(defn <list-details> [items _opts]\n  (<aligned-body> (map list items)))\n\n(defn <list> [items max-count & [opts]]\n  (let [items-markups (take max-count items)\n        more-count (- (count items) max-count)\n        more? (pos? more-count)\n        separator (or (:separator opts) :list-separator)\n        more-symbol (if more?\n                      (if-let [more-symbol (:more-symbol opts)]\n                        (if (fn? more-symbol)\n                          (more-symbol more-count)\n                          more-symbol)\n                        (get-more-marker more-count)))\n        preview-markup (concat [(or (:tag opts) :list-tag)\n                                (or (:open-symbol opts) :list-open-symbol)]\n                               (interpose separator items-markups)\n                               (if more? [separator more-symbol])\n                               [(or (:close-symbol opts) :list-close-symbol)])]\n    (if more?\n      (let [details-markup (:details opts)\n            default-details-fn (partial <list-details> items opts)]\n        (<reference-surrogate> nil preview-markup (or details-markup default-details-fn)))\n      preview-markup)))\n\n; -- mete-related markup ----------------------------------------------------------------------------------------------------\n\n(defn <meta> [metadata]\n  (let [body-fn (fn [] [:meta-body-tag (<preview> metadata)])\n        header [:meta-header-tag \"meta\"]]\n    [:meta-reference-tag (<reference-surrogate> metadata header body-fn)]))                                                   ; body must be lazy, see #35\n\n(defn <meta-wrapper> [metadata & children]\n  (concat [:meta-wrapper-tag] children [(<meta> metadata)]))\n\n; -- function markup --------------------------------------------------------------------------------------------------------\n\n(defn <function-details> [fn-obj ns _name arities prefix]\n  {:pre [(fn? fn-obj)]}\n  (let [arities (map wrap-arity arities)\n        make-arity-markup-list (fn [arity]\n                                 [[:fn-multi-arity-args-indent-tag prefix]\n                                  [:fn-args-tag arity]])\n        arities-markupts-lists (if (> (count arities) 1) (map make-arity-markup-list arities))\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        native-markups-list [:native-icon (<native-reference> fn-obj)]]\n    (<aligned-body> (concat arities-markupts-lists [ns-markups-list native-markups-list]))))\n\n(defn <arities> [arities]\n  (let [multi-arity? (> (count arities) 1)]\n    [:fn-args-tag (wrap-arity (if multi-arity?\n                                (pref :multi-arity-symbol)\n                                (first arities)))]))\n\n(defn <function> [fn-obj]\n  {:pre [(fn? fn-obj)]}\n  (let [[ns name] (munging/parse-fn-info fn-obj)\n        lambda? (empty? name)\n        spacer-symbol (pref :spacer)\n        rest-symbol (pref :rest-symbol)\n        multi-arity-symbol (pref :multi-arity-symbol)\n        arities (munging/extract-arities fn-obj true spacer-symbol multi-arity-symbol rest-symbol)\n        arities-markup (<arities> arities)\n        name-markup (if-not lambda? [:fn-name-tag name])\n        icon-markup (if lambda? :lambda-icon :fn-icon)\n        prefix-markup [:fn-prefix-tag icon-markup name-markup]\n        preview-markup [:fn-header-tag prefix-markup arities-markup]\n        details-fn (partial <function-details> fn-obj ns name arities prefix-markup)]\n    (<reference-surrogate> fn-obj preview-markup details-fn)))\n\n; -- type markup ------------------------------------------------------------------------------------------------------------\n\n(defn <type-basis-item> [basis-item]\n  [:type-basis-item-tag (name basis-item)])\n\n(defn <type-basis> [basis]\n  (let [item-markups (map <type-basis-item> basis)\n        children-markups (interpose :type-basis-item-separator item-markups)]\n    (concat [:type-basis-tag] children-markups)))\n\n(defn <type-details> [constructor-fn ns _name basis]\n  (let [ns-markup (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        basis-markup (if (empty? basis)\n                       [:empty-basis-symbol]\n                       [:basis-icon (<type-basis> basis)])\n        native-markup [:native-icon (<native-reference> constructor-fn)]]\n    (<aligned-body> [basis-markup ns-markup native-markup])))\n\n(defn <type> [constructor-fn & [header-tag]]\n  (let [[ns name basis] (munging/parse-constructor-info constructor-fn)\n        name-markup [:type-name-tag name]\n        preview-markup [(or header-tag :type-header-tag) :type-symbol name-markup]\n        details-markup-fn (partial <type-details> constructor-fn ns name basis)]\n    [:type-wrapper-tag\n     :type-header-background\n     [:type-ref-tag (<reference-surrogate> constructor-fn preview-markup details-markup-fn)]]))\n\n(defn <standalone-type> [constructor-fn & [header-tag]]\n  [:standalone-type-tag (<type> constructor-fn header-tag)])\n\n; -- protocols markup -------------------------------------------------------------------------------------------------------\n\n(defn <protocol-method-arity> [arity-fn]\n  (<reference> arity-fn))\n\n(defn <protocol-method-arities-details> [fns]\n  (<aligned-body> (map <protocol-method-arity> fns)))\n\n(defn <protocol-method-arities> [fns & [max-fns]]\n  (let [max-fns (or max-fns (pref :max-protocol-method-arities-list))\n        more? (> (count fns) max-fns)\n        aritites-markups (map <protocol-method-arity> (take max-fns fns))\n        preview-markup (concat [:protocol-method-arities-header-tag :protocol-method-arities-header-open-symbol]\n                               (interpose :protocol-method-arities-list-header-separator aritites-markups)\n                               (if more? [:protocol-method-arities-more-symbol])\n                               [:protocol-method-arities-header-close-symbol])]\n    (if more?\n      (let [details-markup-fn (partial <protocol-method-arities-details> fns)]\n        (<reference-surrogate> nil preview-markup details-markup-fn))\n      preview-markup)))\n\n(defn <protocol-method> [name arities]\n  [:protocol-method-tag\n   :method-icon\n   [:protocol-method-name-tag name]\n   (<protocol-method-arities> arities)])\n\n(defn <protocol-details> [obj ns _name selector _fast?]\n  (let [protocol-obj (munging/get-protocol-object selector)\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:protocol-ns-name-tag ns]])\n        native-markups-list (if (some? protocol-obj) [:native-icon (<native-reference> protocol-obj)])\n        methods (munging/collect-protocol-methods obj selector)\n        methods-markups (map (fn [[name arities]] (<protocol-method> name arities)) methods)\n        methods-markups-lists (map list methods-markups)]\n    (<aligned-body> (concat methods-markups-lists [ns-markups-list native-markups-list]))))\n\n(defn <protocol> [obj protocol & [tag]]\n  (let [{:keys [ns name selector fast?]} protocol\n        preview-markup [(or tag :protocol-name-tag) name]\n        prefix-markup [(if fast? :fast-protocol-tag :slow-protocol-tag) :protocol-background]]\n    (if (some? obj)\n      (let [details-markup-fn (partial <protocol-details> obj ns name selector fast?)]\n        (conj prefix-markup (<reference-surrogate> obj preview-markup details-markup-fn)))\n      (conj prefix-markup preview-markup))))\n\n(defn <more-protocols> [more-count]\n  (let [fake-protocol {:name (get-more-marker more-count)}]\n    (<protocol> nil fake-protocol :protocol-more-tag)))\n\n(defn <protocols-list> [obj protocols & [max-protocols]]\n  (let [max-protocols (or max-protocols (pref :max-list-protocols))\n        protocols-markups (map (partial <protocol> obj) protocols)]\n    (<list> protocols-markups max-protocols {:tag          :protocols-header-tag\n                                             :open-symbol  :protocols-list-open-symbol\n                                             :close-symbol :protocols-list-close-symbol\n                                             :separator    :header-protocol-separator\n                                             :more-symbol  <more-protocols>})))\n\n; -- instance fields markup -------------------------------------------------------------------------------------------------\n\n(defn <field> [name value]\n  [:header-field-tag\n   [:header-field-name-tag (str name)]\n   :header-field-value-spacer\n   [:header-field-value-tag (<reference> (<surrogate> value) #(set-managed-print-level % 1))]\n   :header-field-separator])\n\n(defn <fields-details-row> [field]\n  (let [[name value] field]\n    [:body-field-tr-tag\n     [:body-field-td1-tag\n      :body-field-symbol\n      [:body-field-name-tag (str name)]]\n     [:body-field-td2-tag\n      :body-field-value-spacer]\n     [:body-field-td3-tag\n      [:body-field-value-tag (<reference-surrogate> value)]]]))\n\n(defn <fields> [fields & [max-fields]]\n  (if (zero? (count fields))\n    [:fields-header-tag :fields-header-no-fields-symbol]\n    (let [max-fields (or max-fields (pref :max-instance-header-fields))\n          more? (> (count fields) max-fields)\n          fields-markups (map (fn [[name value]] (<field> name value)) (take max-fields fields))]\n      (concat [:fields-header-tag\n               :fields-header-open-symbol]\n              fields-markups\n              [(if more? :more-fields-symbol)\n               :fields-header-close-symbol]))))\n\n(defn <fields-details> [fields obj]\n  (let [protocols (munging/scan-protocols obj)\n        has-protocols? (not (empty? protocols))\n        fields-markup (if-not (zero? (count fields))\n                        [:fields-icon (concat [:instance-body-fields-table-tag] (map <fields-details-row> fields))])\n        protocols-list-markup (if has-protocols? [:protocols-icon (<protocols-list> obj protocols)])\n        native-markup [:native-icon (<native-reference> obj)]]\n    (<aligned-body> [fields-markup protocols-list-markup native-markup])))\n\n; -- type/record instance markup --------------------------------------------------------------------------------------------\n\n(defn <instance> [value]\n  (let [constructor-fn (get-constructor value)\n        [_ns _name basis] (munging/parse-constructor-info constructor-fn)\n        custom-printing? (implements? IPrintWithWriter value)\n        type-markup (<type> constructor-fn :instance-type-header-tag)\n        fields (fetch-fields-values value basis)\n        fields-markup (<fields> fields (if custom-printing? 0))\n        fields-details-markup-fn #(<fields-details> fields value)\n        fields-preview-markup [:instance-value-tag (<reference-surrogate> value fields-markup fields-details-markup-fn)]\n        custom-printing-markup (if custom-printing?\n                                 [:instance-custom-printing-wrapper-tag\n                                  :instance-custom-printing-background\n                                  (print-via-protocol value :instance-custom-printing-tag)])]\n    [:instance-header-tag\n     :instance-header-background\n     fields-preview-markup\n     custom-printing-markup\n     type-markup]))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <header> [value]\n  (<cljs-land> (<preview> value)))\n\n(defn <surrogate-header> [surrogate]\n  (or (get-surrogate-header surrogate)\n      (<preview> (get-surrogate-target surrogate))))\n\n(defn <surrogate-target> [surrogate]\n  (let [target (get-surrogate-target surrogate)]\n    (if (seqable? target)\n      (let [starting-index (get-surrogate-start-index surrogate)]\n        (<details> target starting-index))\n      (<standard-body-reference> target))))\n\n(defn <surrogate-body> [surrogate]\n  (if-let [body (get-surrogate-body surrogate)]\n    (if (= :target body)\n      (<surrogate-target> surrogate)\n      body)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <atomic> [value]\n  (cond\n    (should-render? :render-nils value nil?) (<nil>)\n    (should-render? :render-bools value bool?) (<bool> value)\n    (should-render? :render-strings value string?) (<string> value)\n    (should-render? :render-numbers value number?) (<number> value)\n    (should-render? :render-keywords value keyword?) (<keyword> value)\n    (should-render? :render-symbols value symbol?) (<symbol> value)\n    (should-render? :render-instances value should-render-instance?) (<instance> value)\n    (should-render? :render-types value cljs-type?) (<standalone-type> value)\n    (should-render? :render-functions value cljs-function?) (<function> value)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(def ^:dynamic *markup-db*)\n\n; emit-markup-db macro will generate a map of all markup <functions> in this namespace:\n;\n;    {:atomic              <atomic>\n;     :reference           <reference>\n;     :native-reference    <native-reference>\n;     ...}\n;\n; we generate it only on first call and cache it in *markup-db*\n; emitting markup db statically into def would prevent dead-code elimination\n;\n(defn get-markup-db []\n  (if (nil? *markup-db*)\n    (set! *markup-db* (emit-markup-db)))\n  *markup-db*)\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","devtools.formatters.markup/print-with","p__44011","vec__44012","cljs.core.nth","seq44006","G__44008","cljs.core/first","cljs.core/next","G__44009","G__44010","self__4723__auto__","method","value","tag","max-level","job-fn","G__44015","G__44016","G__44017","devtools.formatters.markup/get-markup-db","*print-level*-orig-val__44018","*print-level*-temp-val__44019","cljs.core/*print-level*","devtools.formatters.markup/print-via-writer","p__44023","vec__44024","seq44020","G__44021","G__44022","devtools.formatters.markup.print_with","devtools.formatters.printing/managed-print-via-writer","devtools.formatters.markup/print-via-protocol","p__44042","vec__44043","seq44037","G__44038","G__44039","devtools.formatters.printing/managed-print-via-protocol","devtools.formatters.markup/<expandable>","seq44046","self__4724__auto__","cljs.core/seq","children","inner-markup","cljs.core.concat","devtools.formatters.markup/<raw-surrogate>","seq44048","args","devtools.formatters.markup/<surrogate>","p__44064","vec__44065","seq44054","object","header","body","start-index","devtools.formatters.markup._LT_expandable_GT_","devtools.formatters.markup._LT_raw_surrogate_GT_","devtools.formatters.markup/<reference>","seq44074","devtools.formatters.markup/<reference-surrogate>","seq44075","devtools.formatters.markup._LT_reference_GT_","cljs.core.apply","devtools.formatters.markup/<circular-reference>","seq44076","devtools.formatters.markup._LT_reference_surrogate_GT_","devtools.formatters.markup/<native-reference>","reference","p1__44077#","devtools.formatters.state/set-prevent-recursion","devtools.formatters.markup/<header-expander>","devtools.formatters.state/reset-depth-limits","devtools.formatters.markup/<cljs-land>","seq44078","devtools.formatters.markup/<nil>","devtools.formatters.markup/<bool>","bool","devtools.formatters.markup/<keyword>","keyword","devtools.formatters.markup/<symbol>","symbol","devtools.formatters.markup/<number>","number","js/isFinite","cljs.core/integer?","js/isNaN","cljs.core.pr_str","devtools.formatters.markup/<string>","string","dq","devtools.formatters.helpers/pref","re-nl","js/RegExp","nl-marker","inline-string","max-inline-string-size","quote-string","s","should-abbreviate?","cljs.core/count","abbreviated-string","devtools.formatters.helpers/abbreviate-long-string","abbreviated-string-markup","string-with-nl-markers","details-markup","devtools.formatters.markup/<preview>","devtools.formatters.markup.print_via_writer","devtools.formatters.markup/<body>","markup","devtools.formatters.markup/<aligned-body>","markups-lists","prepend-li-tag","line","aligned-lines","cljs.core.keep","devtools.formatters.markup/<standard-body>","p__44114","vec__44115","seq44109","G__44110","no-margin?","ol-tag","li-tag","lines-markups","devtools.formatters.markup/<standard-body-reference>","o","devtools.formatters.markup/<index>","devtools.formatters.markup/body-line","index","index-markup","value-markup","devtools.formatters.markup/prepare-body-lines","data","starting-index","work","lines","cljs.core/empty?","cljs.core/rest","cljs.core.conj","devtools.formatters.markup/body-lines","seq","max-number-body-items","chunk","cljs.core.take","rest","cljs.core.drop","continue?","more-label-markup","more-markup","devtools.formatters.markup/<details>","has-continuation?","body-markup","devtools.formatters.markup._LT_standard_body_GT_","devtools.formatters.markup/<list-details>","items","_opts","cljs.core.map","cljs.core/list","devtools.formatters.markup/<list>","p__44177","vec__44179","seq44165","G__44167","G__44168","max-count","opts","items-markups","more-count","more?","separator","or__4126__auto__","more-symbol","temp__5733__auto__","cljs.core/fn?","devtools.formatters.helpers/get-more-marker","preview-markup","cljs.core.interpose","default-details-fn","cljs.core.partial","devtools.formatters.markup/<meta>","metadata","body-fn","devtools.formatters.markup/<meta-wrapper>","seq44223","G__44224","js/Error","devtools.formatters.markup/<function-details>","fn-obj","ns","_name","arities","prefix","devtools.formatters.helpers/wrap-arity","make-arity-markup-list","arity","arities-markupts-lists","ns-markups-list","native-markups-list","devtools.formatters.markup/<arities>","multi-arity?","devtools.formatters.markup/<function>","vec__44259","name","devtools.munging/parse-fn-info","lambda?","spacer-symbol","rest-symbol","multi-arity-symbol","devtools.munging/extract-arities","arities-markup","name-markup","icon-markup","prefix-markup","details-fn","devtools.formatters.markup/<type-basis-item>","basis-item","cljs.core/name","devtools.formatters.markup/<type-basis>","basis","item-markups","children-markups","devtools.formatters.markup/<type-details>","constructor-fn","ns-markup","basis-markup","native-markup","devtools.formatters.markup/<type>","p__44276","vec__44277","seq44274","G__44275","header-tag","vec__44280","devtools.munging/parse-constructor-info","details-markup-fn","devtools.formatters.markup/<standalone-type>","p__44287","vec__44288","seq44284","G__44285","devtools.formatters.markup._LT_type_GT_","devtools.formatters.markup/<protocol-method-arity>","arity-fn","devtools.formatters.markup/<protocol-method-arities-details>","fns","devtools.formatters.markup/<protocol-method-arities>","p__44298","vec__44299","seq44296","G__44297","max-fns","aritites-markups","devtools.formatters.markup/<protocol-method>","devtools.formatters.markup/<protocol-details>","obj","selector","_fast?","protocol-obj","devtools.munging/get-protocol-object","methods","devtools.munging/collect-protocol-methods","methods-markups","p__44319","vec__44320","methods-markups-lists","devtools.formatters.markup/<protocol>","p__44329","vec__44330","seq44326","G__44327","G__44328","protocol","map__44333","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","fast?","devtools.formatters.markup/<more-protocols>","fake-protocol","devtools.formatters.markup._LT_protocol_GT_","devtools.formatters.markup/<protocols-list>","p__44342","vec__44343","seq44339","G__44340","G__44341","protocols","max-protocols","protocols-markups","devtools.formatters.markup._LT_list_GT_","devtools.formatters.markup/<field>","p1__44346#","devtools.formatters.markup._LT_surrogate_GT_","devtools.formatters.state/set-managed-print-level","devtools.formatters.markup/<fields-details-row>","field","vec__44347","devtools.formatters.markup/<fields>","p__44353","vec__44354","seq44350","G__44351","fields","max-fields","fields-markups","p__44358","vec__44359","devtools.formatters.markup/<fields-details>","devtools.munging/scan-protocols","has-protocols?","fields-markup","protocols-list-markup","devtools.formatters.markup/<instance>","vec__44362","devtools.formatters.helpers/get-constructor","_ns","custom-printing?","type-markup","devtools.formatters.helpers/fetch-fields-values","devtools.formatters.markup._LT_fields_GT_","fields-details-markup-fn","fields-preview-markup","custom-printing-markup","devtools.formatters.markup/<header>","devtools.formatters.markup._LT_cljs_land_GT_","devtools.formatters.markup/<surrogate-header>","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-target","devtools.formatters.markup/<surrogate-target>","target","cljs.core/seqable?","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.markup/<surrogate-body>","devtools.formatters.templating/get-surrogate-body","cljs.core._EQ_","devtools.formatters.markup/<atomic>","devtools.formatters.helpers/should-render?","cljs.core/nil?","devtools.formatters.helpers/bool?","cljs.core/string?","cljs.core/number?","cljs.core/keyword?","cljs.core/symbol?","devtools.formatters.helpers/should-render-instance?","devtools.formatters.helpers/cljs-type?","devtools.formatters.helpers/cljs-function?","devtools.formatters.markup/*markup-db*","cljs.core/PersistentHashMap"]],"~:used-vars",["^N",["~$devtools.formatters.markup/<type-basis-item>","~$devtools.formatters.markup/<cljs-land>","~$devtools.formatters.printing/managed-print-via-protocol","~$cljs.core/rest","~$cljs.core/PersistentHashMap","~$devtools.formatters.markup/<standalone-type>","~$cljs.core/*print-level*","~$cljs.core/keyword?","~$devtools.formatters.markup/<string>","~$devtools.formatters.markup/body-lines","~$devtools.formatters.markup/<atomic>","~$devtools.formatters.markup/body-line","~$devtools.formatters.markup/<fields-details>","~$devtools.formatters.markup/<surrogate-body>","~$devtools.formatters.markup/<header-expander>","~$cljs.core/=","~$devtools.formatters.printing/managed-print-via-writer","~$devtools.formatters.markup/<type-basis>","~$devtools.formatters.markup/<fields-details-row>","~$devtools.formatters.markup/<standard-body>","~$devtools.formatters.markup/<arities>","~$devtools.formatters.helpers/should-render-instance?","~$devtools.formatters.helpers/cljs-type?","~$cljs.core/count","~$cljs.core/seq","~$cljs.core/apply","~$devtools.formatters.markup/<preview>","~$devtools.formatters.helpers/cljs-function?","~$devtools.formatters.markup/<surrogate>","~$cljs.core/string?","~$js/isFinite","~$devtools.formatters.markup/get-markup-db","~$cljs.core/concat","~$cljs.core/pr-str","~$devtools.formatters.markup/<symbol>","~$devtools.formatters.markup/<protocol-method-arities-details>","~$devtools.formatters.markup/<standard-body-reference>","~$devtools.formatters.markup/<type-details>","~$devtools.formatters.markup/<protocol-method-arity>","~$devtools.formatters.markup/<type>","~$devtools.formatters.markup/<surrogate-header>","~$cljs.core/empty?","~$devtools.formatters.state/reset-depth-limits","~$cljs.core/conj","~$devtools.formatters.markup/<more-protocols>","~$devtools.formatters.markup/*markup-db*","~$devtools.formatters.markup/<protocols-list>","~$cljs.core/map","~$devtools.formatters.markup/<index>","~$cljs.core/fn?","~$devtools.formatters.markup/<protocol>","~$devtools.formatters.templating/get-surrogate-target","~$devtools.formatters.markup/<instance>","~$devtools.formatters.helpers/bool?","~$devtools.formatters.markup/<meta>","~$cljs.core/number?","~$cljs.core/integer?","~$devtools.formatters.markup/<reference>","~$devtools.formatters.helpers/pref","~$devtools.formatters.markup/<function-details>","~$js/isNaN","~$devtools.formatters.markup/<bool>","~$devtools.formatters.markup/print-with","~$devtools.formatters.helpers/wrap-arity","~$devtools.formatters.markup/print-via-protocol","~$cljs.core/nil?","~$devtools.formatters.markup/<function>","~$devtools.formatters.markup/<nil>","~$devtools.formatters.markup/<circular-reference>","~$devtools.formatters.markup/<header>","~$devtools.formatters.markup/<protocol-method>","~$devtools.formatters.markup/<expandable>","~$devtools.formatters.markup/<body>","~$devtools.formatters.markup/<fields>","~$cljs.core/not","~$devtools.formatters.markup/<surrogate-target>","~$devtools.formatters.markup/prepare-body-lines","~$cljs.core/seqable?","~$cljs.core/symbol?","~$devtools.formatters.markup/<protocol-details>","~$devtools.formatters.markup/<native-reference>","~$devtools.formatters.state/set-managed-print-level","~$devtools.formatters.markup/<number>","~$devtools.formatters.markup/<reference-surrogate>","~$devtools.formatters.markup/<keyword>","~$devtools.formatters.markup/<list>","~$devtools.formatters.markup/<meta-wrapper>","~$cljs.core/first","~$devtools.formatters.markup/<protocol-method-arities>","~$devtools.formatters.markup/<raw-surrogate>","~$devtools.formatters.markup/<list-details>","~$cljs.core/list","~$devtools.formatters.markup/print-via-writer","~$devtools.formatters.markup/<aligned-body>","~$cljs.core/name","~$js/Error","~$devtools.formatters.helpers/should-render?","~$devtools.formatters.markup/<details>","~$devtools.formatters.markup/<field>"]]],"~:cache-keys",["~#cmap",[["^1X","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["^14","~$goog.dom.HtmlElement"]]],["^1X","devtools/formatters/printing.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","~$devtools.prefs","~$devtools.format","~$devtools.protocols","^[","^Y"]]],["^1X","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","~$goog.labs.userAgent.util","~$goog.string"]]],["^1X","devtools/formatters/markup.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","^Y","^Z","^[","^10","^11"]]],["^1X","devtools/formatters/helpers.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","^4J","^11","^4K","^4L"]]],["^1X","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","~$goog.array","~$goog.asserts"]]],["^1X","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4O","^4M","~$goog.object","~$goog.string.internal"]]],["^1X","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4P","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4R"]]],["^1X","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4P"]]],["^1X","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^4M","~$goog.reflect","^4N"]]],["^1X","devtools/formatters/templating.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","~$clojure.walk","~$devtools.util","^4L","^Y","^[","~$clojure.string"]]],["^1X","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","cljs/pprint.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","^53","^4N","~$goog.string.StringBuffer"]]],["^1X","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4P"]]],"~:SHADOW-TIMESTAMP",[1598571556000,1598571556000,1598571537000],["^1X","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4P","^50"]]],["^1X","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4P","~$goog.html.trustedtypes","^4U","^4V","^4W","^4X"]]],["^1X","devtools/version.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13"]]],["^1X","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4O","^4P","~$goog.html.SafeUrl","^4W","^4X","^4R"]]],["^1X","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4P","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^57","^4T","~$goog.html.uncheckedconversions","^4W","^4R"]]],["^1X","devtools/prefs.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","~$devtools.defaults"]]],["^1X","clojure/walk.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13"]]],["^1X","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1X","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4O","^4P","~$goog.dom.TagName","~$goog.dom.tags","^5;","^5<","~$goog.html.SafeStyleSheet","^57","^4T","^56","^4U","^4V","^4Y","^4Q","^4W","^4X","^4R"]]],["^1X","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4Q"]]],["^1X","devtools/munging.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","^53","~$devtools.context","^4Q","^54"]]],["^1X","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4O","^4M","^4N"]]],["^1X","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1X","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4O","^4P","^4N","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1X","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",[]]],["^1X","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4O","^4Q"]]],["^1X","clojure/string.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","^4N","^54"]]],["^1X","devtools/formatters/state.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13"]]],["^1X","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","~$goog.dom.safe","^5=","^4W","^4R"]]],["^1X","clojure/data.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","~$clojure.set"]]],["^1X","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4R"]]],["^1X","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4O","^4P","^59","~$goog.math"]]],["^1X","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4P","^5:","^5;","^5<","^5C","^57","^4T","^4W","^4R"]]],["^1X","devtools/defaults.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13"]]],["^1X","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14"]]],["^1X","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","~$goog.math.Long","~$goog.math.Integer","^4N","^4Q","^4O","~$goog.Uri","^54"]]],["^1X","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4P","^56","^4W","^4X"]]],["^1X","devtools/context.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13"]]],["^1X","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4O","^4P","^5<","^4Q","^4W","^4X","^4R"]]],["^1X","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^50"]]],["^1X","devtools/format.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","^5D"]]],["^1X","clojure/set.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13"]]],["^1X","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4O","^4P","^4N"]]],["^1X","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^4P","^4X"]]],["^1X","devtools/protocols.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13"]]],["^1X","devtools/util.cljs"],["7cb2343acea512994ff124141c577137c37def89","^4E",["^ ","^4F",null,"^4G",["^N",[]],"^4H",["^14","^13","~$goog.userAgent","~$clojure.data","~$devtools.version","^5D","^C","^4J"]]]]],"~:clj-info",["^ ","jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/compiler.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/pprint.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596724258000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/prefs.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/oops.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/defaults.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/formatters/markup.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/version.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/munging.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1598571537000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",["^ ","^K","^L"],"^M",["^N",[]],"^O",["^ ","^K",["^ ","^P",["^Q",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","^R","^S","^T","^L","^U",true]],"^R","^L","^W",null,"^X",["^ ","^Y","^Y","^Z","^Z","^[","^[","^10","^10","^11","^11","^12","^11","^13","^13","^14","^14"],"^15",["^N",["^16","^17"]],"~:shadow/js-access-global",["^N",["isNaN","RegExp","isFinite","Error"]],"^18",["^ ","^19","^Y","^1:","^Y","^1;","^[","^1<","^Y","^1=","^Y","^1>","^10","^1?","^Y","^1@","^Z","^1A","^Y","^1B","^Y","^1C","^Y","^1D","^Y","^1E","^Y","^1F","^Z","^1G","^Y","^1H","^10","^1I","^[","^1J","^10","^1K","^[","^1L","^10","^1M","^Y","^1N","^Y","^1O","^Y"],"~:defs",["^ ","~$<aligned-body>",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",121,"^8",7,"^9",121,"^:",21,"^P",["^Q",["~$quote",["^Q",[["~$markups-lists"]]]]]],"^R","^4=","^6","devtools/formatters/markup.cljs","^:",21,"~:method-params",["^Q",[["^6Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^8",1,"~:variadic?",false,"^7",121,"~:ret-tag","~$cljs.core/IVector","^9",121,"~:max-fixed-arity",1,"~:fn-var",true,"^P",["^Q",["^6P",["^Q",[["^6Q"]]]]]],"~$<native-reference>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",56,"^8",7,"^9",56,"^:",25,"^P",["^Q",["^6P",["^Q",[["~$object"]]]]]],"^R","^40","^6","devtools/formatters/markup.cljs","^:",25,"^6R",["^Q",[["^6["]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",56,"^6V","^6W","^9",56,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^6["]]]]]],"~$<reference-surrogate>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",50,"^8",7,"^9",50,"^:",28,"^P",["^Q",["^6P",["^Q",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^6U",true,"~:fixed-arity",0,"^6X",0,"^6R",[["^Q",["^71"]]],"^P",["^Q",[["~$&","^71"]]],"^6T",["^Q",[null]]]],"^R","^43","^6","devtools/formatters/markup.cljs","^:",28,"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^71"]]],"^P",["^Q",[["~$&","^71"]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^71"]]],"^6S",null,"^73",0,"^6T",["^Q",[null]],"^8",1,"^6U",true,"~:methods",[["^ ","^73",0,"^6U",true,"~:tag","~$cljs.core/LazySeq"]],"^7",50,"^6V","~$any","^9",50,"^6X",0,"^6Y",true,"^P",["^Q",[["~$&","^71"]]]],"~$<keyword>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",75,"^8",7,"^9",75,"^:",16,"^P",["^Q",["^6P",["^Q",[["~$keyword"]]]]]],"^R","^44","^6","devtools/formatters/markup.cljs","^:",16,"^6R",["^Q",[["^79"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",75,"^6V","^6W","^9",75,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^79"]]]]]],"~$print-via-writer",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",28,"^8",7,"^9",28,"^:",23,"^P",["^Q",["^6P",["^Q",[["~$value","~$tag","~$&",["~$max-level"]]]]]],"^72",["^ ","^6U",true,"^73",2,"^6X",2,"^6R",[["^Q",["^7;","^7<",["^7="]]]],"^P",["^Q",[["^7;","^7<","~$&",["^7="]]]],"^6T",["^Q",[null]]]],"^R","^4<","^6","devtools/formatters/markup.cljs","^:",23,"^72",["^ ","^6U",true,"^73",2,"^6X",2,"^6R",[["^Q",["^7;","^7<",["^7="]]]],"^P",["^Q",[["^7;","^7<","~$&",["^7="]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^7;","^7<",["^7="]]]],"^6S",null,"^73",2,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",2,"^6U",true,"^75",["^N",[null,"^77"]]]],"^7",28,"^6V","^77","^9",28,"^6X",2,"^6Y",true,"^P",["^Q",[["^7;","^7<","~$&",["^7="]]]]],"~$<protocol-method-arities>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",290,"^8",7,"^9",290,"^:",32,"^P",["^Q",["^6P",["^Q",[["~$fns","~$&",["~$max-fns"]]]]]],"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^7?",["^7@"]]]],"^P",["^Q",[["^7?","~$&",["^7@"]]]],"^6T",["^Q",[null]]]],"^R","^48","^6","devtools/formatters/markup.cljs","^:",32,"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^7?",["^7@"]]]],"^P",["^Q",[["^7?","~$&",["^7@"]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^7?",["^7@"]]]],"^6S",null,"^73",1,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",1,"^6U",true,"^75","^76"]],"^7",290,"^6V","^77","^9",290,"^6X",1,"^6Y",true,"^P",["^Q",[["^7?","~$&",["^7@"]]]]],"~$<surrogate-header>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",407,"^8",7,"^9",407,"^:",25,"^P",["^Q",["^6P",["^Q",[["~$surrogate"]]]]]],"^R","^34","^6","devtools/formatters/markup.cljs","^:",25,"^6R",["^Q",[["^7B"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",407,"^6V",["^N",[null,"^77"]],"^9",407,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7B"]]]]]],"~$<details>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",173,"^8",7,"^9",173,"^:",16,"^P",["^Q",["^6P",["^Q",[["^7;","~$starting-index"]]]]]],"^R","^4A","^6","devtools/formatters/markup.cljs","^:",16,"^6R",["^Q",[["^7;","^7D"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",173,"^6V","~$clj","^9",173,"^6X",2,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7;","^7D"]]]]]],"~$<more-protocols>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",327,"^8",7,"^9",327,"^:",23,"^P",["^Q",["^6P",["^Q",[["~$more-count"]]]]]],"^R","^38","^6","devtools/formatters/markup.cljs","^:",23,"^6R",["^Q",[["^7G"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",327,"^6V","^7E","^9",327,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7G"]]]]]],"~$<field>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",342,"^8",7,"^9",342,"^:",14,"^P",["^Q",["^6P",["^Q",[["~$name","^7;"]]]]]],"^R","^4B","^6","devtools/formatters/markup.cljs","^:",14,"^6R",["^Q",[["^7I","^7;"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",342,"^6V","^6W","^9",342,"^6X",2,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7I","^7;"]]]]]],"~$<symbol>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",78,"^8",7,"^9",78,"^:",15,"^P",["^Q",["^6P",["^Q",[["~$symbol"]]]]]],"^R","^2Z","^6","devtools/formatters/markup.cljs","^:",15,"^6R",["^Q",[["^7K"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",78,"^6V","^6W","^9",78,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7K"]]]]]],"~$<fields-details>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",372,"^8",7,"^9",372,"^:",23,"^P",["^Q",["^6P",["^Q",[["~$fields","~$obj"]]]]]],"^R","^2D","^6","devtools/formatters/markup.cljs","^:",23,"^6R",["^Q",[["^7M","^7N"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",372,"^6V","^6W","^9",372,"^6X",2,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7M","^7N"]]]]]],"~$<atomic>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",426,"^8",7,"^9",426,"^:",15,"^P",["^Q",["^6P",["^Q",[["^7;"]]]]]],"^R","^2B","^6","devtools/formatters/markup.cljs","^:",15,"^6R",["^Q",[["^7;"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",426,"^6V",["^N",["^7E","^6W","^76","~$clj-nil"]],"^9",426,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7;"]]]]]],"~$<string>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",92,"^8",7,"^9",92,"^:",15,"^P",["^Q",["^6P",["^Q",[["~$string"]]]]]],"^R","^2@","^6","devtools/formatters/markup.cljs","^:",15,"^6R",["^Q",[["^7R"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",92,"^6V","^7E","^9",92,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7R"]]]]]],"~$<standard-body>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",128,"^8",7,"^9",128,"^:",22,"^P",["^Q",["^6P",["^Q",[["^6Q","~$&",["~$no-margin?"]]]]]],"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^6Q",["^7T"]]]],"^P",["^Q",[["^6Q","~$&",["^7T"]]]],"^6T",["^Q",[null]]]],"^R","^2K","^6","devtools/formatters/markup.cljs","^:",22,"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^6Q",["^7T"]]]],"^P",["^Q",[["^6Q","~$&",["^7T"]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^6Q",["^7T"]]]],"^6S",null,"^73",1,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",1,"^6U",true,"^75","^76"]],"^7",128,"^6V","^77","^9",128,"^6X",1,"^6Y",true,"^P",["^Q",[["^6Q","~$&",["^7T"]]]]],"~$<type-basis>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",257,"^8",7,"^9",257,"^:",19,"^P",["^Q",["^6P",["^Q",[["~$basis"]]]]]],"^R","^2I","^6","devtools/formatters/markup.cljs","^:",19,"^6R",["^Q",[["^7V"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",257,"^6V","^76","^9",257,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7V"]]]]]],"~$*markup-db*",["^ ","^5",["^ ","^6","devtools/formatters/markup.cljs","^7",440,"^8",16,"^9",440,"^:",27,"~:dynamic",true],"^R","^39","^6","devtools/formatters/markup.cljs","^:",27,"^8",1,"^7X",true,"^7",440,"^9",440,"^75","^77"],"~$print-via-protocol",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",31,"^8",7,"^9",31,"^:",25,"^P",["^Q",["^6P",["^Q",[["^7;","^7<","~$&",["^7="]]]]]],"^72",["^ ","^6U",true,"^73",2,"^6X",2,"^6R",[["^Q",["^7;","^7<",["^7="]]]],"^P",["^Q",[["^7;","^7<","~$&",["^7="]]]],"^6T",["^Q",[null]]]],"^R","^3L","^6","devtools/formatters/markup.cljs","^:",25,"^72",["^ ","^6U",true,"^73",2,"^6X",2,"^6R",[["^Q",["^7;","^7<",["^7="]]]],"^P",["^Q",[["^7;","^7<","~$&",["^7="]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^7;","^7<",["^7="]]]],"^6S",null,"^73",2,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",2,"^6U",true,"^75",["^N",[null,"^77"]]]],"^7",31,"^6V","^77","^9",31,"^6X",2,"^6Y",true,"^P",["^Q",[["^7;","^7<","~$&",["^7="]]]]],"~$print-with",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",21,"^8",7,"^9",21,"^:",17,"^P",["^Q",["^6P",["^Q",[["~$method","^7;","^7<","~$&",["^7="]]]]]],"^72",["^ ","^6U",true,"^73",3,"^6X",3,"^6R",[["^Q",["^7[","^7;","^7<",["^7="]]]],"^P",["^Q",[["^7[","^7;","^7<","~$&",["^7="]]]],"^6T",["^Q",[null]]]],"^R","^3J","^6","devtools/formatters/markup.cljs","^:",17,"^72",["^ ","^6U",true,"^73",3,"^6X",3,"^6R",[["^Q",["^7[","^7;","^7<",["^7="]]]],"^P",["^Q",[["^7[","^7;","^7<","~$&",["^7="]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^7[","^7;","^7<",["^7="]]]],"^6S",null,"^73",3,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",3,"^6U",true,"^75",["^N",[null,"^77"]]]],"^7",21,"^6V","^77","^9",21,"^6X",3,"^6Y",true,"^P",["^Q",[["^7[","^7;","^7<","~$&",["^7="]]]]],"~$<bool>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",72,"^8",7,"^9",72,"^:",13,"^P",["^Q",["^6P",["^Q",[["~$bool"]]]]]],"^R","^3I","^6","devtools/formatters/markup.cljs","^:",13,"^6R",["^Q",[["^81"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",72,"^6V","^6W","^9",72,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^81"]]]]]],"~$<standalone-type>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",279,"^8",7,"^9",279,"^:",24,"^P",["^Q",["^6P",["^Q",[["~$constructor-fn","~$&",["~$header-tag"]]]]]],"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^83",["^84"]]]],"^P",["^Q",[["^83","~$&",["^84"]]]],"^6T",["^Q",[null]]]],"^R","^2=","^6","devtools/formatters/markup.cljs","^:",24,"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^83",["^84"]]]],"^P",["^Q",[["^83","~$&",["^84"]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^83",["^84"]]]],"^6S",null,"^73",1,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",1,"^6U",true,"^75","^6W"]],"^7",279,"^6V","^77","^9",279,"^6X",1,"^6Y",true,"^P",["^Q",[["^83","~$&",["^84"]]]]],"~$<preview>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",113,"^8",7,"^9",113,"^:",16,"^P",["^Q",["^6P",["^Q",[["^7;"]]]]]],"^R","^2R","^6","devtools/formatters/markup.cljs","^:",16,"^6R",["^Q",[["^7;"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",113,"^6V",["^N",[null,"^77"]],"^9",113,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7;"]]]]]],"~$<header>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",404,"^8",7,"^9",404,"^:",15,"^P",["^Q",["^6P",["^Q",[["^7;"]]]]]],"^R","^3Q","^6","devtools/formatters/markup.cljs","^:",15,"^6R",["^Q",[["^7;"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",404,"^6V","^76","^9",404,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7;"]]]]]],"~$<protocol-method>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",303,"^8",7,"^9",303,"^:",24,"^P",["^Q",["^6P",["^Q",[["^7I","~$arities"]]]]]],"^R","^3R","^6","devtools/formatters/markup.cljs","^:",24,"^6R",["^Q",[["^7I","^88"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",303,"^6V","^6W","^9",303,"^6X",2,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7I","^88"]]]]]],"~$<cljs-land>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",65,"^8",7,"^9",65,"^:",18,"^P",["^Q",["^6P",["^Q",[["~$&","~$children"]]]]],"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^8:"]]],"^P",["^Q",[["~$&","^8:"]]],"^6T",["^Q",[null]]]],"^R","^29","^6","devtools/formatters/markup.cljs","^:",18,"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^8:"]]],"^P",["^Q",[["~$&","^8:"]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^8:"]]],"^6S",null,"^73",0,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",0,"^6U",true,"^75","^76"]],"^7",65,"^6V","^77","^9",65,"^6X",0,"^6Y",true,"^P",["^Q",[["~$&","^8:"]]]],"~$<type-basis-item>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",254,"^8",7,"^9",254,"^:",24,"^P",["^Q",["^6P",["^Q",[["~$basis-item"]]]]]],"^R","^28","^6","devtools/formatters/markup.cljs","^:",24,"^6R",["^Q",[["^8<"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",254,"^6V","^6W","^9",254,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^8<"]]]]]],"~$<protocol-method-arities-details>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",287,"^8",7,"^9",287,"^:",40,"^P",["^Q",["^6P",["^Q",[["^7?"]]]]]],"^R","^2[","^6","devtools/formatters/markup.cljs","^:",40,"^6R",["^Q",[["^7?"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",287,"^6V","^6W","^9",287,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7?"]]]]]],"~$<fields-details-row>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",349,"^8",7,"^9",349,"^:",27,"^P",["^Q",["^6P",["^Q",[["~$field"]]]]]],"^R","^2J","^6","devtools/formatters/markup.cljs","^:",27,"^6R",["^Q",[["^8?"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",349,"^6V","^6W","^9",349,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^8?"]]]]]],"~$<standard-body-reference>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",137,"^8",7,"^9",137,"^:",32,"^P",["^Q",["^6P",["^Q",[["~$o"]]]]]],"^R","^30","^6","devtools/formatters/markup.cljs","^:",32,"^6R",["^Q",[["~$o"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",137,"^6V","^76","^9",137,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["~$o"]]]]]],"~$<surrogate-body>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",418,"^8",7,"^9",418,"^:",23,"^P",["^Q",["^6P",["^Q",[["^7B"]]]]]],"^R","^2E","^6","devtools/formatters/markup.cljs","^:",23,"^6R",["^Q",[["^7B"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",418,"^6V",["^N",["^7E","^77","^7P"]],"^9",418,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7B"]]]]]],"~$get-markup-db",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",452,"^8",7,"^9",452,"^:",20,"^P",["^Q",["^6P",["^Q",[[]]]]]],"^R","^2W","^6","devtools/formatters/markup.cljs","^:",20,"^6R",["^Q",[[]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",452,"^6V","^77","^9",452,"^6X",0,"^6Y",true,"^P",["^Q",["^6P",["^Q",[[]]]]]],"~$<expandable>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",36,"^8",7,"^9",36,"^:",19,"^P",["^Q",["^6P",["^Q",[["~$&","^8:"]]]]],"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^8:"]]],"^P",["^Q",[["~$&","^8:"]]],"^6T",["^Q",[null]]]],"^R","^3S","^6","devtools/formatters/markup.cljs","^:",19,"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^8:"]]],"^P",["^Q",[["~$&","^8:"]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^8:"]]],"^6S",null,"^73",0,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",0,"^6U",true,"^75","^6W"]],"^7",36,"^6V","^77","^9",36,"^6X",0,"^6Y",true,"^P",["^Q",[["~$&","^8:"]]]],"~$<type>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",270,"^8",7,"^9",270,"^:",13,"^P",["^Q",["^6P",["^Q",[["^83","~$&",["^84"]]]]]],"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^83",["^84"]]]],"^P",["^Q",[["^83","~$&",["^84"]]]],"^6T",["^Q",[null]]]],"^R","^33","^6","devtools/formatters/markup.cljs","^:",13,"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^83",["^84"]]]],"^P",["^Q",[["^83","~$&",["^84"]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^83",["^84"]]]],"^6S",null,"^73",1,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",1,"^6U",true,"^75","^6W"]],"^7",270,"^6V","^77","^9",270,"^6X",1,"^6Y",true,"^P",["^Q",[["^83","~$&",["^84"]]]]],"~$<protocol-method-arity>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",284,"^8",7,"^9",284,"^:",30,"^P",["^Q",["^6P",["^Q",[["~$arity-fn"]]]]]],"^R","^32","^6","devtools/formatters/markup.cljs","^:",30,"^6R",["^Q",[["^8F"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",284,"^6V","^76","^9",284,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^8F"]]]]]],"~$<raw-surrogate>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",40,"^8",7,"^9",40,"^:",22,"^P",["^Q",["^6P",["^Q",[["~$&","^71"]]]]],"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^71"]]],"^P",["^Q",[["~$&","^71"]]],"^6T",["^Q",[null]]]],"^R","^49","^6","devtools/formatters/markup.cljs","^:",22,"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^71"]]],"^P",["^Q",[["~$&","^71"]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^71"]]],"^6S",null,"^73",0,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",0,"^6U",true,"^75","^76"]],"^7",40,"^6V","^77","^9",40,"^6X",0,"^6Y",true,"^P",["^Q",[["~$&","^71"]]]],"~$<type-details>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",262,"^8",7,"^9",262,"^:",21,"^P",["^Q",["^6P",["^Q",[["^83","^1Q","~$_name","^7V"]]]]]],"^R","^31","^6","devtools/formatters/markup.cljs","^:",21,"^6R",["^Q",[["^83","^1Q","^8I","^7V"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",262,"^6V","^6W","^9",262,"^6X",4,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^83","^1Q","^8I","^7V"]]]]]],"~$<list>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",185,"^8",7,"^9",185,"^:",13,"^P",["^Q",["^6P",["^Q",[["~$items","~$max-count","~$&",["~$opts"]]]]]],"^72",["^ ","^6U",true,"^73",2,"^6X",2,"^6R",[["^Q",["^8K","^8L",["^8M"]]]],"^P",["^Q",[["^8K","^8L","~$&",["^8M"]]]],"^6T",["^Q",[null]]]],"^R","^45","^6","devtools/formatters/markup.cljs","^:",13,"^72",["^ ","^6U",true,"^73",2,"^6X",2,"^6R",[["^Q",["^8K","^8L",["^8M"]]]],"^P",["^Q",[["^8K","^8L","~$&",["^8M"]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^8K","^8L",["^8M"]]]],"^6S",null,"^73",2,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",2,"^6U",true,"^75","^76"]],"^7",185,"^6V","^77","^9",185,"^6X",2,"^6Y",true,"^P",["^Q",[["^8K","^8L","~$&",["^8M"]]]]],"~$<meta-wrapper>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",214,"^8",7,"^9",214,"^:",21,"^P",["^Q",["^6P",["^Q",[["~$metadata","~$&","^8:"]]]]],"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^8O","^8:"]]],"^P",["^Q",[["^8O","~$&","^8:"]]],"^6T",["^Q",[null]]]],"^R","^46","^6","devtools/formatters/markup.cljs","^:",21,"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^8O","^8:"]]],"^P",["^Q",[["^8O","~$&","^8:"]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^8O","^8:"]]],"^6S",null,"^73",1,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",1,"^6U",true,"^75","^76"]],"^7",214,"^6V","^77","^9",214,"^6X",1,"^6Y",true,"^P",["^Q",[["^8O","~$&","^8:"]]]],"~$<protocol>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",318,"^8",7,"^9",318,"^:",17,"^P",["^Q",["^6P",["^Q",[["^7N","~$protocol","~$&",["^7<"]]]]]],"^72",["^ ","^6U",true,"^73",2,"^6X",2,"^6R",[["^Q",["^7N","^8Q",["^7<"]]]],"^P",["^Q",[["^7N","^8Q","~$&",["^7<"]]]],"^6T",["^Q",[null]]]],"^R","^3>","^6","devtools/formatters/markup.cljs","^:",17,"^72",["^ ","^6U",true,"^73",2,"^6X",2,"^6R",[["^Q",["^7N","^8Q",["^7<"]]]],"^P",["^Q",[["^7N","^8Q","~$&",["^7<"]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^7N","^8Q",["^7<"]]]],"^6S",null,"^73",2,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",2,"^6U",true,"^75","^7E"]],"^7",318,"^6V","^77","^9",318,"^6X",2,"^6Y",true,"^P",["^Q",[["^7N","^8Q","~$&",["^7<"]]]]],"~$<index>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",142,"^8",7,"^9",142,"^:",14,"^P",["^Q",["^6P",["^Q",[["^7;"]]]]]],"^R","^3<","^6","devtools/formatters/markup.cljs","^:",14,"^6R",["^Q",[["^7;"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",142,"^6V","^6W","^9",142,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7;"]]]]]],"~$<surrogate>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",43,"^8",7,"^9",43,"^:",18,"^P",["^Q",["^6P",["^Q",[["~$&",["^6[","~$header","~$body","~$start-index"]]]]]],"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",[["^6[","^8T","^8U","^8V"]]]],"^P",["^Q",[["~$&",["^6[","^8T","^8U","^8V"]]]],"^6T",["^Q",[null]]]],"^R","^2T","^6","devtools/formatters/markup.cljs","^:",18,"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",[["^6[","^8T","^8U","^8V"]]]],"^P",["^Q",[["~$&",["^6[","^8T","^8U","^8V"]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",[["^6[","^8T","^8U","^8V"]]]],"^6S",null,"^73",0,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",0,"^6U",true,"^75","^76"]],"^7",43,"^6V","^77","^9",43,"^6X",0,"^6Y",true,"^P",["^Q",[["~$&",["^6[","^8T","^8U","^8V"]]]]],"~$<protocols-list>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",331,"^8",7,"^9",331,"^:",23,"^P",["^Q",["^6P",["^Q",[["^7N","~$protocols","~$&",["~$max-protocols"]]]]]],"^72",["^ ","^6U",true,"^73",2,"^6X",2,"^6R",[["^Q",["^7N","^8X",["^8Y"]]]],"^P",["^Q",[["^7N","^8X","~$&",["^8Y"]]]],"^6T",["^Q",[null]]]],"^R","^3:","^6","devtools/formatters/markup.cljs","^:",23,"^72",["^ ","^6U",true,"^73",2,"^6X",2,"^6R",[["^Q",["^7N","^8X",["^8Y"]]]],"^P",["^Q",[["^7N","^8X","~$&",["^8Y"]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^7N","^8X",["^8Y"]]]],"^6S",null,"^73",2,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",2,"^6U",true,"^75","^76"]],"^7",331,"^6V","^77","^9",331,"^6X",2,"^6Y",true,"^P",["^Q",[["^7N","^8X","~$&",["^8Y"]]]]],"~$<meta>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",209,"^8",7,"^9",209,"^:",13,"^P",["^Q",["^6P",["^Q",[["^8O"]]]]]],"^R","^3B","^6","devtools/formatters/markup.cljs","^:",13,"^6R",["^Q",[["^8O"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",209,"^6V","^6W","^9",209,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^8O"]]]]]],"~$<instance>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",383,"^8",7,"^9",383,"^:",17,"^P",["^Q",["^6P",["^Q",[["^7;"]]]]]],"^R","^3@","^6","devtools/formatters/markup.cljs","^:",17,"^6R",["^Q",[["^7;"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",383,"^6V","^6W","^9",383,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7;"]]]]]],"~$<reference>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",47,"^8",7,"^9",47,"^:",18,"^P",["^Q",["^6P",["^Q",[["~$&","^71"]]]]],"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^71"]]],"^P",["^Q",[["~$&","^71"]]],"^6T",["^Q",[null]]]],"^R","^3E","^6","devtools/formatters/markup.cljs","^:",18,"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^71"]]],"^P",["^Q",[["~$&","^71"]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^71"]]],"^6S",null,"^73",0,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",0,"^6U",true,"^75","^76"]],"^7",47,"^6V","^77","^9",47,"^6X",0,"^6Y",true,"^P",["^Q",[["~$&","^71"]]]],"~$<function-details>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",219,"^8",7,"^9",219,"^:",25,"^P",["^Q",["^6P",["^Q",[["~$fn-obj","^1Q","^8I","^88","~$prefix"]]]]]],"^R","^3G","^6","devtools/formatters/markup.cljs","^:",25,"^6R",["^Q",[["^92","^1Q","^8I","^88","^93"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",219,"^6V","^6W","^9",219,"^6X",5,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^92","^1Q","^8I","^88","^93"]]]]]],"~$<function>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",236,"^8",7,"^9",236,"^:",17,"^P",["^Q",["^6P",["^Q",[["^92"]]]]]],"^R","^3N","^6","devtools/formatters/markup.cljs","^:",17,"^6R",["^Q",[["^92"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",236,"^6V","^76","^9",236,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^92"]]]]]],"~$<arities>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",230,"^8",7,"^9",230,"^:",16,"^P",["^Q",["^6P",["^Q",[["^88"]]]]]],"^R","^2L","^6","devtools/formatters/markup.cljs","^:",16,"^6R",["^Q",[["^88"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",230,"^6V","^6W","^9",230,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^88"]]]]]],"~$<header-expander>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",60,"^8",7,"^9",60,"^:",24,"^P",["^Q",["^6P",["^Q",[["^6["]]]]]],"^R","^2F","^6","devtools/formatters/markup.cljs","^:",24,"^6R",["^Q",[["^6["]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",60,"^6V","^76","^9",60,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^6["]]]]]],"~$<list-details>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",182,"^8",7,"^9",182,"^:",21,"^P",["^Q",["^6P",["^Q",[["^8K","~$_opts"]]]]]],"^R","^4:","^6","devtools/formatters/markup.cljs","^:",21,"^6R",["^Q",[["^8K","^98"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",182,"^6V","^6W","^9",182,"^6X",2,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^8K","^98"]]]]]],"~$<circular-reference>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",53,"^8",7,"^9",53,"^:",27,"^P",["^Q",["^6P",["^Q",[["~$&","^8:"]]]]],"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^8:"]]],"^P",["^Q",[["~$&","^8:"]]],"^6T",["^Q",[null]]]],"^R","^3P","^6","devtools/formatters/markup.cljs","^:",27,"^72",["^ ","^6U",true,"^73",0,"^6X",0,"^6R",[["^Q",["^8:"]]],"^P",["^Q",[["~$&","^8:"]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^8:"]]],"^6S",null,"^73",0,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",0,"^6U",true,"^75","^76"]],"^7",53,"^6V","^77","^9",53,"^6X",0,"^6Y",true,"^P",["^Q",[["~$&","^8:"]]]],"~$<surrogate-target>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",411,"^8",7,"^9",411,"^:",25,"^P",["^Q",["^6P",["^Q",[["^7B"]]]]]],"^R","^3W","^6","devtools/formatters/markup.cljs","^:",25,"^6R",["^Q",[["^7B"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",411,"^6V","^7E","^9",411,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7B"]]]]]],"~$body-line",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",145,"^8",8,"^9",145,"^:",17,"~:private",true,"^P",["^Q",["^6P",["^Q",[["~$index","^7;"]]]]]],"^9<",true,"^R","^2C","^6","devtools/formatters/markup.cljs","^:",17,"^6R",["^Q",[["^9=","^7;"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",145,"^6V","^6W","^9",145,"^6X",2,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^9=","^7;"]]]]]],"~$body-lines",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",159,"^8",8,"^9",159,"^:",18,"^9<",true,"^P",["^Q",["^6P",["^Q",[["^7;","^7D"]]]]]],"^9<",true,"^R","^2A","^6","devtools/formatters/markup.cljs","^:",18,"^6R",["^Q",[["^7;","^7D"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",159,"^6V",["^N",["^7E","^6W"]],"^9",159,"^6X",2,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7;","^7D"]]]]]],"~$<fields>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",360,"^8",7,"^9",360,"^:",15,"^P",["^Q",["^6P",["^Q",[["^7M","~$&",["~$max-fields"]]]]]],"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^7M",["^9@"]]]],"^P",["^Q",[["^7M","~$&",["^9@"]]]],"^6T",["^Q",[null]]]],"^R","^3U","^6","devtools/formatters/markup.cljs","^:",15,"^72",["^ ","^6U",true,"^73",1,"^6X",1,"^6R",[["^Q",["^7M",["^9@"]]]],"^P",["^Q",[["^7M","~$&",["^9@"]]]],"^6T",["^Q",[null]]],"^6R",[["^Q",["^7M",["^9@"]]]],"^6S",null,"^73",1,"^6T",["^Q",[null]],"^8",1,"^6U",true,"^74",[["^ ","^73",1,"^6U",true,"^75","^7E"]],"^7",360,"^6V","^77","^9",360,"^6X",1,"^6Y",true,"^P",["^Q",[["^7M","~$&",["^9@"]]]]],"~$<nil>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",68,"^8",7,"^9",68,"^:",12,"^P",["^Q",["^6P",["^Q",[[]]]]]],"^R","^3O","^6","devtools/formatters/markup.cljs","^:",12,"^6R",["^Q",[[]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",68,"^6V","^6W","^9",68,"^6X",0,"^6Y",true,"^P",["^Q",["^6P",["^Q",[[]]]]]],"~$<body>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",118,"^8",7,"^9",118,"^:",13,"^P",["^Q",["^6P",["^Q",[["~$markup"]]]]]],"^R","^3T","^6","devtools/formatters/markup.cljs","^:",13,"^6R",["^Q",[["^9C"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",118,"^6V","^6W","^9",118,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^9C"]]]]]],"~$<number>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",81,"^8",7,"^9",81,"^:",15,"^P",["^Q",["^6P",["^Q",[["~$number"]]]]]],"^R","^42","^6","devtools/formatters/markup.cljs","^:",15,"^6R",["^Q",[["^9E"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",81,"^6V","^6W","^9",81,"^6X",1,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^9E"]]]]]],"~$<protocol-details>",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",309,"^8",7,"^9",309,"^:",25,"^P",["^Q",["^6P",["^Q",[["^7N","^1Q","^8I","~$selector","~$_fast?"]]]]]],"^R","^3[","^6","devtools/formatters/markup.cljs","^:",25,"^6R",["^Q",[["^7N","^1Q","^8I","^9G","^9H"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",309,"^6V","^6W","^9",309,"^6X",5,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^7N","^1Q","^8I","^9G","^9H"]]]]]],"~$prepare-body-lines",["^ ","^6O",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",151,"^8",8,"^9",151,"^:",26,"^9<",true,"^P",["^Q",["^6P",["^Q",[["~$data","^7D"]]]]]],"^9<",true,"^R","^3X","^6","devtools/formatters/markup.cljs","^:",26,"^6R",["^Q",[["^9J","^7D"]]],"^6S",null,"^6T",["^Q",[null,null]],"^8",1,"^6U",false,"^7",151,"^6V",["^N",["^7E","^6W"]],"^9",151,"^6X",2,"^6Y",true,"^P",["^Q",["^6P",["^Q",[["^9J","^7D"]]]]]]],"^17",["^ ","^L","^L","^13","^13","^11","^11","^12","^11"],"~:cljs.analyzer/constants",["^ ","^15",["^N",["~:protocol-method-arities-header-close-symbol","~:protocol-details","~:max-number-body-items","~:meta-reference-tag","~:instance-custom-printing-tag","~:type-header-background","~:body-field-symbol","~:body-items-more-tag","~:line-index-separator","~:new-line-string-replacer","~:selector","~:more-fields-symbol","~:body-field-value-spacer","~:standard-body","~:protocol-background","~:protocols-icon","~:standalone-type","~:standard-ol-no-margin-tag","~:symbol-tag","~:render-keywords","~:fn-header-tag","~:keyword-tag","~:protocol-method-arities","~:surrogate","~:fields-header-tag","^5","~:aligned-body","~:body-items-more-label","~:nil-tag","~:index","~:instance","~:float-tag","~:protocol-ns-name-tag","~:protocol-method","~:protocol-method-arities-details","~:protocol-method-arities-more-symbol","~:number","~:index-tag","~:rest-symbol","~:protocol","~:protocols-list-close-symbol","~:protocol-name-tag","~:protocol-method-arity","~:float-infinity-tag","~:more-protocols","~:instance-header-background","~:body-tag","~:cljs-land-tag","~:max-list-protocols","~:string-abbreviation-marker","~:native-icon","~:instance-body-fields-table-tag","~:render-symbols","^T","~:symbol","~:fields-details-row","^R","~:type-name-tag","~:list-separator","~:header-field-value-spacer","~:fast-protocol-tag","~:render-strings","~:standalone-type-tag","~:type-header-tag","~:lambda-icon","~:render-functions","~:fields-header-open-symbol","~:fields","~:type-details","~:fn-name-tag","~:protocols-list","~:header-field-value-tag","~:fields-icon","~:type-wrapper-tag","~:field","~:type","~:standard-li-tag","~:type-basis-item","~:render-bools","~:dq","~:fields-header-no-fields-symbol","~:nil-label","~:meta-wrapper","~:protocols-list-open-symbol","~:list-open-symbol","~:raw-surrogate","~:header-field-separator","~:function-details","~:body-field-td3-tag","~:string","~:surrogate-header","~:more-symbol","~:native-reference","~:header","~:string-tag","~:meta-wrapper-tag","~:method-icon","~:function","~:max-protocol-method-arities-list","~:reference-surrogate","~:header-protocol-separator","~:basis-icon","~:surrogate-body","~:fn-args-tag","~:bool-tag","~:expandable-inner-tag","~:fn-prefix-tag","~:type-basis-item-tag","~:fn-ns-name-tag","~:header-tag","~:body-field-name-tag","~:open-symbol","~:protocol-method-arities-header-open-symbol","~:expanded-string-tag","~:protocol-more-tag","~:reference","~:meta-body-tag","~:instance-custom-printing-background","~:preview","~:fast?","~:native-reference-background","~:details","~:float-nan-tag","~:instance-type-header-tag","~:list","~:keyword","~:spacer","~:body-field-tr-tag","~:surrogate-target","~:header-field-name-tag","~:standard-li-no-margin-tag","~:list-tag","~:body-field-td1-tag","~:nil","~:render-types","~:string-postfix-limit","~:protocol-method-arities-list-header-separator","~:protocol-method-tag","~:fields-details","~:list-close-symbol","~:render-numbers","~:circular-reference","~:expandable","~:body-field-value-tag","~:empty-basis-symbol","~:list-details","~:fn-icon","~:integer-tag","~:type-basis-item-separator","~:protocols-header-tag","~:protocol-method-name-tag","~:item-tag","~:instance-value-tag","~:circular-ref-icon","~:standard-ol-tag","~:standard-body-reference","^75","~:circular-reference-body-tag","~:bool","~:native-reference-tag","~:target","~:type-basis","~:aligned-li-tag","~:render-instances","~:expandable-symbol","~:fn-multi-arity-args-indent-tag","~:expandable-tag","~:protocol-method-arities-header-tag","~:max-instance-header-fields","~:arities","~:type-ref-tag","~:max-print-level","~:multi-arity-symbol","~:render-nils","~:meta-header-tag","~:body","~:separator","~:slow-protocol-tag","~:header-field-tag","~:native-reference-wrapper-tag","~:fields-header-close-symbol","~:string-prefix-limit","~:instance-custom-printing-wrapper-tag","~:body-field-td2-tag","~:atomic","~:type-basis-tag","~:close-symbol","~:type-symbol","~:instance-header-tag","~:header-expander","~:ns-icon","~:body-line-max-print-level","~:circular-reference-tag","~:header-expander-symbol","~:cljs-land"]],"~:order~:ns-specs",["^ "],"~:ns-spec-vars",["^N",[]],"~:compiler-options",["^4D",[["^>2","~:static-fns"],true,["^>2","~:shadow-tweaks"],null,["^>2","~:source-map-inline"],null,["^>2","~:elide-asserts"],false,["^>2","~:optimize-constants"],null,["^>2","^1["],null,["^>2","~:external-config"],null,["^>2","~:tooling-config"],null,["^>2","~:emit-constants"],null,["^>2","~:load-tests"],null,["^>2","~:form-size-threshold"],null,["^>2","~:infer-externs"],true,["^>2","^21"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^>2","~:fn-invoke-direct"],null,["^>2","~:source-map"],"/dev/null"]]]