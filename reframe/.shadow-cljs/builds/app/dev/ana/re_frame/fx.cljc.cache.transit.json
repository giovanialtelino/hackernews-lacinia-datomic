["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\ngoog.require('cljs.core');\ngoog.require('re_frame.router');\ngoog.require('re_frame.db');\ngoog.require('re_frame.interceptor');\ngoog.require('re_frame.interop');\ngoog.require('re_frame.events');\ngoog.require('re_frame.registrar');\ngoog.require('re_frame.loggers');\ngoog.require('re_frame.trace');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\n/**\n * Register the given effect `handler` for the given `id`.\n * \n *   `id` is keyword, often namespaced.\n *   `handler` is a side-effecting function which takes a single argument and whose return\n *   value is ignored.\n * \n *   Example Use\n *   -----------\n * \n *   First, registration ... associate `:effect2` with a handler.\n * \n *   (reg-fx\n *   :effect2\n *   (fn [value]\n *      ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map ...\n * \n *   {...\n * :effect2  [1 2]}\n * \n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n * called with an argument of `[1 2]`.\n */\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__53279 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__53280 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__53280);\n\ntry{try{var seq__53282 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__53283 = null;\nvar count__53284 = (0);\nvar i__53285 = (0);\nwhile(true){\nif((i__53285 < count__53284)){\nvar vec__53294 = chunk__53283.cljs$core$IIndexed$_nth$arity$2(null,i__53285);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53294,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53294,(1),null);\nvar temp__5733__auto___53380 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___53380)){\nvar effect_fn_53381 = temp__5733__auto___53380;\n(effect_fn_53381.cljs$core$IFn$_invoke$arity$1 ? effect_fn_53381.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_53381.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__53383 = seq__53282;\nvar G__53384 = chunk__53283;\nvar G__53385 = count__53284;\nvar G__53386 = (i__53285 + (1));\nseq__53282 = G__53383;\nchunk__53283 = G__53384;\ncount__53284 = G__53385;\ni__53285 = G__53386;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__53282);\nif(temp__5735__auto__){\nvar seq__53282__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__53282__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__53282__$1);\nvar G__53394 = cljs.core.chunk_rest(seq__53282__$1);\nvar G__53395 = c__4556__auto__;\nvar G__53396 = cljs.core.count(c__4556__auto__);\nvar G__53397 = (0);\nseq__53282 = G__53394;\nchunk__53283 = G__53395;\ncount__53284 = G__53396;\ni__53285 = G__53397;\ncontinue;\n} else {\nvar vec__53298 = cljs.core.first(seq__53282__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53298,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53298,(1),null);\nvar temp__5733__auto___53398 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___53398)){\nvar effect_fn_53399 = temp__5733__auto___53398;\n(effect_fn_53399.cljs$core$IFn$_invoke$arity$1 ? effect_fn_53399.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_53399.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__53400 = cljs.core.next(seq__53282__$1);\nvar G__53401 = null;\nvar G__53402 = (0);\nvar G__53403 = (0);\nseq__53282 = G__53400;\nchunk__53283 = G__53401;\ncount__53284 = G__53402;\ni__53285 = G__53403;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__53009__auto___53404 = re_frame.interop.now();\nvar duration__53010__auto___53405 = (end__53009__auto___53404 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__53010__auto___53405,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__53009__auto___53404);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__53279);\n}} else {\nvar seq__53301 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__53302 = null;\nvar count__53303 = (0);\nvar i__53304 = (0);\nwhile(true){\nif((i__53304 < count__53303)){\nvar vec__53313 = chunk__53302.cljs$core$IIndexed$_nth$arity$2(null,i__53304);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53313,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53313,(1),null);\nvar temp__5733__auto___53412 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___53412)){\nvar effect_fn_53413 = temp__5733__auto___53412;\n(effect_fn_53413.cljs$core$IFn$_invoke$arity$1 ? effect_fn_53413.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_53413.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__53414 = seq__53301;\nvar G__53415 = chunk__53302;\nvar G__53416 = count__53303;\nvar G__53417 = (i__53304 + (1));\nseq__53301 = G__53414;\nchunk__53302 = G__53415;\ncount__53303 = G__53416;\ni__53304 = G__53417;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__53301);\nif(temp__5735__auto__){\nvar seq__53301__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__53301__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__53301__$1);\nvar G__53418 = cljs.core.chunk_rest(seq__53301__$1);\nvar G__53419 = c__4556__auto__;\nvar G__53420 = cljs.core.count(c__4556__auto__);\nvar G__53421 = (0);\nseq__53301 = G__53418;\nchunk__53302 = G__53419;\ncount__53303 = G__53420;\ni__53304 = G__53421;\ncontinue;\n} else {\nvar vec__53317 = cljs.core.first(seq__53301__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53317,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53317,(1),null);\nvar temp__5733__auto___53422 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___53422)){\nvar effect_fn_53423 = temp__5733__auto___53422;\n(effect_fn_53423.cljs$core$IFn$_invoke$arity$1 ? effect_fn_53423.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_53423.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__53424 = cljs.core.next(seq__53301__$1);\nvar G__53425 = null;\nvar G__53426 = (0);\nvar G__53427 = (0);\nseq__53301 = G__53424;\nchunk__53302 = G__53425;\ncount__53303 = G__53426;\ni__53304 = G__53427;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nvar seq__53321 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__53322 = null;\nvar count__53323 = (0);\nvar i__53324 = (0);\nwhile(true){\nif((i__53324 < count__53323)){\nvar map__53333 = chunk__53322.cljs$core$IIndexed$_nth$arity$2(null,i__53324);\nvar map__53333__$1 = (((((!((map__53333 == null))))?(((((map__53333.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__53333.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__53333):map__53333);\nvar effect = map__53333__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__53333__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__53333__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__53321,chunk__53322,count__53323,i__53324,map__53333,map__53333__$1,effect,ms,dispatch){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__53321,chunk__53322,count__53323,i__53324,map__53333,map__53333__$1,effect,ms,dispatch))\n,ms);\n}\n\n\nvar G__53429 = seq__53321;\nvar G__53430 = chunk__53322;\nvar G__53431 = count__53323;\nvar G__53432 = (i__53324 + (1));\nseq__53321 = G__53429;\nchunk__53322 = G__53430;\ncount__53323 = G__53431;\ni__53324 = G__53432;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__53321);\nif(temp__5735__auto__){\nvar seq__53321__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__53321__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__53321__$1);\nvar G__53434 = cljs.core.chunk_rest(seq__53321__$1);\nvar G__53435 = c__4556__auto__;\nvar G__53436 = cljs.core.count(c__4556__auto__);\nvar G__53437 = (0);\nseq__53321 = G__53434;\nchunk__53322 = G__53435;\ncount__53323 = G__53436;\ni__53324 = G__53437;\ncontinue;\n} else {\nvar map__53335 = cljs.core.first(seq__53321__$1);\nvar map__53335__$1 = (((((!((map__53335 == null))))?(((((map__53335.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__53335.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__53335):map__53335);\nvar effect = map__53335__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__53335__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__53335__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__53321,chunk__53322,count__53323,i__53324,map__53335,map__53335__$1,effect,ms,dispatch,seq__53321__$1,temp__5735__auto__){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__53321,chunk__53322,count__53323,i__53324,map__53335,map__53335__$1,effect,ms,dispatch,seq__53321__$1,temp__5735__auto__))\n,ms);\n}\n\n\nvar G__53438 = cljs.core.next(seq__53321__$1);\nvar G__53439 = null;\nvar G__53440 = (0);\nvar G__53441 = (0);\nseq__53321 = G__53438;\nchunk__53322 = G__53439;\ncount__53323 = G__53440;\ni__53324 = G__53441;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__53337 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__53338 = null;\nvar count__53339 = (0);\nvar i__53340 = (0);\nwhile(true){\nif((i__53340 < count__53339)){\nvar event = chunk__53338.cljs$core$IIndexed$_nth$arity$2(null,i__53340);\nre_frame.router.dispatch(event);\n\n\nvar G__53442 = seq__53337;\nvar G__53443 = chunk__53338;\nvar G__53444 = count__53339;\nvar G__53445 = (i__53340 + (1));\nseq__53337 = G__53442;\nchunk__53338 = G__53443;\ncount__53339 = G__53444;\ni__53340 = G__53445;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__53337);\nif(temp__5735__auto__){\nvar seq__53337__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__53337__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__53337__$1);\nvar G__53446 = cljs.core.chunk_rest(seq__53337__$1);\nvar G__53447 = c__4556__auto__;\nvar G__53448 = cljs.core.count(c__4556__auto__);\nvar G__53449 = (0);\nseq__53337 = G__53446;\nchunk__53338 = G__53447;\ncount__53339 = G__53448;\ni__53340 = G__53449;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__53337__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__53450 = cljs.core.next(seq__53337__$1);\nvar G__53451 = null;\nvar G__53452 = (0);\nvar G__53453 = (0);\nseq__53337 = G__53450;\nchunk__53338 = G__53451;\ncount__53339 = G__53452;\ni__53340 = G__53453;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__53344 = cljs.core.seq(value);\nvar chunk__53345 = null;\nvar count__53346 = (0);\nvar i__53347 = (0);\nwhile(true){\nif((i__53347 < count__53346)){\nvar event = chunk__53345.cljs$core$IIndexed$_nth$arity$2(null,i__53347);\nclear_event(event);\n\n\nvar G__53455 = seq__53344;\nvar G__53456 = chunk__53345;\nvar G__53457 = count__53346;\nvar G__53458 = (i__53347 + (1));\nseq__53344 = G__53455;\nchunk__53345 = G__53456;\ncount__53346 = G__53457;\ni__53347 = G__53458;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__53344);\nif(temp__5735__auto__){\nvar seq__53344__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__53344__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__53344__$1);\nvar G__53459 = cljs.core.chunk_rest(seq__53344__$1);\nvar G__53460 = c__4556__auto__;\nvar G__53461 = cljs.core.count(c__4556__auto__);\nvar G__53462 = (0);\nseq__53344 = G__53459;\nchunk__53345 = G__53460;\ncount__53346 = G__53461;\ni__53347 = G__53462;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__53344__$1);\nclear_event(event);\n\n\nvar G__53463 = cljs.core.next(seq__53344__$1);\nvar G__53464 = null;\nvar G__53465 = (0);\nvar G__53466 = (0);\nseq__53344 = G__53463;\nchunk__53345 = G__53464;\ncount__53346 = G__53465;\ni__53347 = G__53466;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^S","~$re-frame.interceptor","^T","~$re-frame.events","^U","~$re-frame.trace","^V","~$re-frame.registrar","^W","~$cljs.core","^X","~$goog","^Y","~$router","~$re-frame.router","^[","^[","~$trace","^V","~$events","^U","~$re-frame.loggers","^12","~$re-frame.db","^13"],"~:seen",["^L",["~:require"]],"~:uses",["^ ","~$app-db","^13","~$->interceptor","^T","~$set-timeout!","^S","~$get-handler","^W","~$clear-handlers","^W","~$register-handler","^W","~$console","^12"],"~:require-macros",["^ ","^V","^V","^10","^V","^X","^X"],"~:form",["~#list",["~$ns","^N",["^1@",["^15",["^[","~:as","^Z"],["^13","~:refer",["^17"]],["^T","^1C",["^18"]],["^S","^1C",["^19"]],["^U","^1B","^11"],["^W","^1C",["^1:","^1;","^1<"]],["^12","^1C",["^1="]],["^V","^1B","^10","~:include-macros",true]]]]],"~:flags",["^ ","^15",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^X","^[","^13","^T","^S","^U","^W","^12","^V"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1598576894101,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (doseq [[effect-key effect-value] (:effects context)]\n                 (if-let [effect-fn (get-handler kind effect-key false)]\n                   (effect-fn effect-value)\n                   (console :error \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\")))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} (remove nil? value)]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__53279","re-frame.trace/*current-trace*","*current-trace*-temp-val__53280","re-frame.trace/start-trace","end__53009__auto__","re-frame.interop/now","duration__53010__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","seq__53282","cljs.core/seq","chunk__53283","count__53284","i__53285","vec__53294","cljs.core.nth","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__53298","cljs.core/first","cljs.core/next","seq__53301","chunk__53302","count__53303","i__53304","vec__53313","vec__53317","effect-key","effect-value","temp__5733__auto__","effect-fn","re_frame.registrar.get_handler","re_frame.loggers.console","value","seq__53321","chunk__53322","count__53323","i__53324","map__53333","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","map__53335","ms","dispatch","effect","cljs.core.remove","cljs.core/nil?","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__53337","chunk__53338","count__53339","i__53340","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__53344","chunk__53345","count__53346","i__53347","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^L",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.registrar/kinds","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1598571556000,1598571556000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1I","reagent/impl/batching.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","~$reagent.debug","~$reagent.impl.util"]]],["^1I","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","~$goog.dom.HtmlElement"]]],["^1I","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","~$goog.labs.userAgent.util","~$goog.string"]]],["^1I","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","~$goog.array","~$goog.asserts"]]],["^1I","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^1I","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2U","^2S","~$goog.object","~$goog.string.internal"]]],["^1I","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2V","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2X"]]],["^1I","re_frame/loggers.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","~$clojure.set"]]],["^1I","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2V"]]],["^2H","node_modules/prop-types/checkPropTypes.js"],[1598571556000,1598571556000,1549836454000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1I","reagent/impl/util.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","~$clojure.string"]]],["^1I","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2S","~$goog.reflect","^2T"]]],["^1I","re_frame/router.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^U","^S","^12","^V"]]],["^1I","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^1I","re_frame/registrar.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^S","^12"]]],["^1I","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^2H","node_modules/scheduler/cjs/scheduler.development.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M"]]],["^1I","reagent/ratom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^2Q","^2P","~$reagent.impl.batching","^33","^2W"]]],["^2H","node_modules/scheduler/cjs/scheduler.production.min.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M"]]],["^1I","re_frame/interop.cljs"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","~$goog.async.nextTick","~$reagent.core","~$reagent.ratom"]]],["^1I","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^2H","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M"]]],["^2H","node_modules/react/index.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1I","shadow/js.js"],["a9b6248f5bcd9480b4be9de7fccb49898ed962b8","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^1I","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^1I","reagent/impl/template.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^?","^35","~$clojure.walk","^2Q","~$reagent.impl.component","^3:","^3=","^2P","^2W"]]],["^1I","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2V"]]],["^2H","node_modules/react-dom/cjs/react-dom.production.min.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M","^?","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1598571556000,1598571556000,1598571537000],["^2H","node_modules/react/cjs/react.development.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M","^3B","~$module$node_modules$prop_types$checkPropTypes"]]],["^1I","re_frame/events.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^13","~$re-frame.utils","^S","^W","^12","^T","^V"]]],["^1I","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2V","^39"]]],["^1I","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2V","~$goog.html.trustedtypes","^2[","^30","^31","^32"]]],["^1I","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^2H","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M"]]],["^1I","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^1I","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2U","^2V","~$goog.html.SafeUrl","^31","^32","^2X"]]],["^1I","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2V","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3H","^2Z","~$goog.html.uncheckedconversions","^31","^2X"]]],["^1I","reagent/impl/component.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^2W","^?","^2Q","^3:","^3=","^2P"]]],["^1I","clojure/walk.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X"]]],["^1I","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1I","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2U","^2V","~$goog.dom.TagName","~$goog.dom.tags","^3L","^3M","~$goog.html.SafeStyleSheet","^3H","^2Z","^3G","^2[","^30","^36","^2W","^31","^32","^2X"]]],["^1I","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2W"]]],["^1I","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^2H","node_modules/scheduler/index.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1I","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2U","^2S","^2T"]]],["^1I","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2U","^2V","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3Q","~$goog.dom.safe","^3K","^3N","~$goog.math.Coordinate","~$goog.math.Size","^2W","^2T","~$goog.string.Unicode","~$goog.userAgent"]]],["^1I","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","~$goog.debug.Error","^3W"]]],["^1I","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2U","^2V","^2T","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1I","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^2H","node_modules/object-assign/index.js"],[1598571556000,1598571556000,1484580833000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M"]]],["^1I","re_frame/db.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^S"]]],["^1I","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^1I","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",[]]],["^1I","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2U","^2W"]]],["^1I","clojure/string.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^2T","~$goog.string.StringBuffer"]]],["^2H","node_modules/react/cjs/react.production.min.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M","^3B"]]],["^1I","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2V"]]],["^1I","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^3X","^3N","^31","^2X"]]],["^1I","re_frame/interceptor.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^12","^S","^V","^33"]]],["^1I","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^1I","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2X"]]],["^1I","reagent/core.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^?","~$reagent.impl.template","^3A","^2Q","^3:","^3=","^2P","~$reagent.dom"]]],["^1I","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^1I","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","~$goog.math"]]],["^1I","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2U","^2V","^3J","^4:"]]],["^1I","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","~$goog.debug.entryPointRegistry","~$goog.dom","^3Q","^3X","^3J","^3K","^2Z","^36","^37","^31"]]],["^1I","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2V","^3K","^3L","^3M","^3S","^3H","^2Z","^31","^2X"]]],["^1I","re_frame/utils.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^12"]]],["^1I","reagent/dom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^A","^2Q","^48","^3:","^3="]]],["^1I","re_frame/fx.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^[","^13","^T","^S","^U","^W","^12","^V"]]],["^2H","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1598571556000,1598571556000,1549571078000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M"]]],["^1I","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y"]]],["^1I","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","~$goog.math.Long","~$goog.math.Integer","^2T","^2W","^2U","~$goog.Uri","^47"]]],["^1I","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2V","^3G","^31","^32"]]],["^1I","reagent/debug.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X"]]],["^1I","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2U","^2V","^3M","^2W","^31","^32","^2X"]]],["^1I","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^39"]]],["^1I","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^40"]]],["^2H","node_modules/scheduler/tracing.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2H","node_modules/react-dom/cjs/react-dom.development.js"],[1598571556000,1598571556000,499162500000,"^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^2M","^?","^3B","^3C","^3E","~$module$node_modules$scheduler$tracing"]]],["^1I","clojure/set.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X"]]],["^1I","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2U","^2V","^2T"]]],["^1I","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^2V","^32"]]],["^1I","re_frame/trace.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2I",["^ ","^2J",null,"^2K",["^L",[]],"^2L",["^Y","^X","^S","^12","^3J"]]]]],"~:clj-info",["^ ","jar:file:/home/giovani/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1598571553000,"jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/interop.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596724258000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/core.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/defaults.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/trace.cljc",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1598571537000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",null,"^K",["^L",[]],"^M","^N","^Q",null,"^R",["^ ","^S","^S","^T","^T","^U","^U","^V","^V","^W","^W","^X","^X","^Y","^Y","^Z","^[","^[","^[","^10","^V","^11","^U","^12","^12","^13","^13"],"^14",["^L",["^15"]],"~:shadow/js-access-global",["^L",["Error"]],"^16",["^ ","^17","^13","^18","^T","^19","^S","^1:","^W","^1;","^W","^1<","^W","^1=","^12"],"~:defs",["^ ","~$kind",["^ ","^M","^1U","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1@",["~$quote",["^1@",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^M","^1W","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1@",[["^5B","^5C"]]],"~:protocol-impl",null,"~:arglists-meta",["^1@",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^5@",["^1@",["^5A",["^1@",[["^5B","^5C"]]]]],"^5D","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",47,"^8",6,"^9",47,"^:",11],"^M","^1Y","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",47,"^9",47,"^5<","~$cljs.core/IMap","^5D","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^1>",["^ ","^V","^V","^10","^V","^X","^X"],"~:cljs.analyzer/constants",["^ ","^14",["^L",["~:db","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^62","^5Y","^5Q","^5W","^63","^5X","^5R","^5T","^60","^5Z","^5[","^64","^61","^5V","^5S","^5U","^5P"]],"^1E",["^ ","^15",["^L",[]]],"^1F",["^ "],"^1G",["^Y","^X","^[","^13","^T","^S","^U","^W","^12","^V"]],"^P","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^2G",[["^68","~:static-fns"],true,["^68","~:shadow-tweaks"],null,["^68","~:source-map-inline"],null,["^68","~:elide-asserts"],false,["^68","~:optimize-constants"],null,["^68","^1L"],null,["^68","~:external-config"],null,["^68","~:tooling-config"],null,["^68","~:emit-constants"],null,["^68","~:load-tests"],null,["^68","~:form-size-threshold"],null,["^68","~:infer-externs"],true,["^68","^1N"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^68","~:fn-invoke-direct"],null,["^68","~:source-map"],"/dev/null"]]]