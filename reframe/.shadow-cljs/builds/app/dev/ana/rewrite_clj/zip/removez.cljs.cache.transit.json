["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.removez');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.zip.move');\ngoog.require('rewrite_clj.zip.utils');\ngoog.require('rewrite_clj.zip.whitespace');\ngoog.require('clojure.zip');\n/**\n * Remove all whitespace following a given node.\n */\nrewrite_clj.zip.removez.remove_trailing_space = (function rewrite_clj$zip$removez$remove_trailing_space(zloc,p_QMARK_){\nreturn rewrite_clj.zip.utils.remove_right_while(zloc,p_QMARK_);\n});\n/**\n * Remove all whitespace preceding a given node.\n */\nrewrite_clj.zip.removez.remove_preceding_space = (function rewrite_clj$zip$removez$remove_preceding_space(zloc,p_QMARK_){\nreturn rewrite_clj.zip.utils.remove_left_while(zloc,p_QMARK_);\n});\n/**\n * Remove value at the given zipper location. Returns the first non-whitespace\n * node that would have preceded it in a depth-first walk. Will remove whitespace\n * appropriately.\n * \n *   - `[1  2  3]   => [1  3]`\n *   - `[1 2]       => [1]`\n *   - `[1 2]       => [2]`\n *   - `[1]         => []`\n *   - `[  1  ]     => []`\n *   - `[1 [2 3] 4] => [1 [2 3]]`\n *   - `[1 [2 3] 4] => [[2 3] 4]`\n * \n * If a node is located rightmost, both preceding and trailing spaces are removed,\n * otherwise only trailing spaces are touched. This means that a following element\n * (no matter whether on the same line or not) will end up in the same position\n * (line/column) as the removed one, _unless_ a comment lies between the original\n * node and the neighbour.\n */\nrewrite_clj.zip.removez.remove = (function rewrite_clj$zip$removez$remove(zloc){\nif(cljs.core.truth_(zloc)){\n} else {\nthrow (new Error(\"Assert failed: zloc\"));\n}\n\nvar _PERCENT_ = rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.prev,clojure.zip.remove(rewrite_clj.zip.removez.remove_trailing_space(((((rewrite_clj.zip.move.rightmost_QMARK_(zloc)) || (rewrite_clj.zip.move.leftmost_QMARK_(zloc))))?rewrite_clj.zip.removez.remove_preceding_space(zloc,rewrite_clj.zip.whitespace.whitespace_QMARK_):zloc),rewrite_clj.zip.whitespace.whitespace_QMARK_)));\nif(cljs.core.truth_(_PERCENT_)){\n} else {\nthrow (new Error(\"Assert failed: %\"));\n}\n\nreturn _PERCENT_;\n});\n/**\n * Same as remove but preserves newlines\n */\nrewrite_clj.zip.removez.remove_preserve_newline = (function rewrite_clj$zip$removez$remove_preserve_newline(zloc){\nif(cljs.core.truth_(zloc)){\n} else {\nthrow (new Error(\"Assert failed: zloc\"));\n}\n\nvar _PERCENT_ = rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.prev,clojure.zip.remove(rewrite_clj.zip.removez.remove_trailing_space(((((rewrite_clj.zip.move.rightmost_QMARK_(zloc)) || (rewrite_clj.zip.move.leftmost_QMARK_(zloc))))?rewrite_clj.zip.removez.remove_preceding_space(zloc,(function (p1__50701_SHARP_){\nvar and__4115__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(p1__50701_SHARP_);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(p1__50701_SHARP_));\n} else {\nreturn and__4115__auto__;\n}\n})):zloc),(function (p1__50702_SHARP_){\nvar and__4115__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(p1__50702_SHARP_);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(p1__50702_SHARP_));\n} else {\nreturn and__4115__auto__;\n}\n}))));\nif(cljs.core.truth_(_PERCENT_)){\n} else {\nthrow (new Error(\"Assert failed: %\"));\n}\n\nreturn _PERCENT_;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/removez.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",28],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",["~$remove"]],"~:name","~$rewrite-clj.zip.removez","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.zip","^T","~$u","~$rewrite-clj.zip.utils","~$cljs.core","^V","~$ws","~$rewrite-clj.zip.whitespace","~$goog","^Y","~$m","~$rewrite-clj.zip.move","^X","^X","^Z","^Z","~$z","^T","^U","^U"],"~:seen",["^L",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^V","^V"],"~:form",["~#list",["~$ns","^O",["^14",["~:refer-clojure","~:exclude",["^M"]]],["^14",["^10",["^Z","~:as","~$m"],["^U","^18","~$u"],["^X","^18","^W"],["^T","^18","~$z"]]]]],"~:flags",["^ ","^10",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^V","^Z","^U","^X","^T"]],"^Q","^O","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/removez.cljs"],"~:compiled-at",1598576890142,"~:resource-name","rewrite_clj/zip/removez.cljs","~:warnings",[],"~:source","(ns rewrite-clj.zip.removez\n  (:refer-clojure :exclude [remove])\n  (:require [rewrite-clj.zip.move :as m]\n            [rewrite-clj.zip.utils :as u]\n            [rewrite-clj.zip.whitespace :as ws]\n            [clojure.zip :as z]))\n\n\n(defn- remove-trailing-space\n  \"Remove all whitespace following a given node.\"\n  [zloc p?]\n  (u/remove-right-while zloc p?))\n\n(defn- remove-preceding-space\n  \"Remove all whitespace preceding a given node.\"\n  [zloc p?]\n  (u/remove-left-while zloc p?))\n\n(defn remove\n  \"Remove value at the given zipper location. Returns the first non-whitespace\n   node that would have preceded it in a depth-first walk. Will remove whitespace\n   appropriately.\n\n  - `[1  2  3]   => [1  3]`\n  - `[1 2]       => [1]`\n  - `[1 2]       => [2]`\n  - `[1]         => []`\n  - `[  1  ]     => []`\n  - `[1 [2 3] 4] => [1 [2 3]]`\n  - `[1 [2 3] 4] => [[2 3] 4]`\n\n   If a node is located rightmost, both preceding and trailing spaces are removed,\n   otherwise only trailing spaces are touched. This means that a following element\n   (no matter whether on the same line or not) will end up in the same position\n   (line/column) as the removed one, _unless_ a comment lies between the original\n   node and the neighbour.\"\n  [zloc]\n  {:pre [zloc]\n   :post [%]}\n  (->> (-> (if (or (m/rightmost? zloc)\n                   (m/leftmost? zloc))\n             (remove-preceding-space zloc ws/whitespace?)\n             zloc)\n           (remove-trailing-space ws/whitespace?)\n           z/remove)\n       (ws/skip-whitespace z/prev)))\n\n(defn remove-preserve-newline\n  \"Same as remove but preserves newlines\"\n  [zloc]\n  {:pre [zloc]\n   :post [%]}\n  (->> (-> (if (or (m/rightmost? zloc)\n                   (m/leftmost? zloc))\n             (remove-preceding-space zloc #(and (ws/whitespace? %)\n                                                (not (ws/linebreak? %))))\n             zloc)\n           (remove-trailing-space #(and (ws/whitespace? %)\n                                                (not (ws/linebreak? %))))\n           z/remove)\n       (ws/skip-whitespace z/prev)))\n\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;;;AAQA;;;AAAA,AAAOA,AAEJC,AAAKC;AAFR,AAGE,AAACC,AAAqBF,AAAKC;;AAE7B;;;AAAA,AAAOE,AAEJH,AAAKC;AAFR,AAGE,AAACG,AAAoBJ,AAAKC;;AAE5B;;;;;;;;;;;;;;;;;;;AAAA,AAAMM,AAkBHP;AAlBH,AAAA,AAmBSA;AAnBT;AAAA,AAAA,AAAA,AAAAK,AAAA;;;AAAA,AAAAC,AAqBO,AAAI,AAAI,AAAI,AAACE,AAAaR,AACd,AAACS,AAAYT,AACnB,AAACG,AAAuBH,AAAKU,AAC7BV,AACF,AAACD,AAAsBW,AACvBC,AACJ,AAACC,AAAmBC;AA3B3B,AAAA,AAoBUP;AApBV;AAAA,AAAA,AAAA,AAAAD,AAAA;;;AAAAC;;AA6BA;;;AAAA,AAAMQ,AAEHd;AAFH,AAAA,AAGSA;AAHT;AAAA,AAAA,AAAA,AAAAK,AAAA;;;AAAA,AAAAC,AAKO,AAAI,AAAI,AAAI,AAACE,AAAaR,AACd,AAACS,AAAYT,AACnB,AAAA,AAAAe,AAACZ,AAAuBH,AAG1B,AAACD,AAEDY,AACJ,AAACC,AAAmBC;AANd,AAA8B,AAAAG,AAAK,AAAAD,AAACL;AAAN,AAAA,AAAAM;AACK,AAACC,AAAI,AAAAF,AAACG;;AADXF;;AAE9BhB,AACF,AAAAmB;AAAA,AAAwB,AAAAH,AAAK,AAAAG,AAACT;AAAN,AAAA,AAAAM;AACa,AAACC,AAAI,AAAAE,AAACD;;AADnBF;;;AAVnC,AAAA,AAIUV;AAJV;AAAA,AAAA,AAAA,AAAAD,AAAA;;;AAAAC","names",["rewrite-clj.zip.removez/remove-trailing-space","zloc","p?","rewrite-clj.zip.utils/remove-right-while","rewrite-clj.zip.removez/remove-preceding-space","rewrite-clj.zip.utils/remove-left-while","js/Error","%","rewrite-clj.zip.removez/remove","rewrite-clj.zip.move/rightmost?","rewrite-clj.zip.move/leftmost?","rewrite-clj.zip.whitespace/whitespace?","clojure.zip/remove","rewrite_clj.zip.whitespace.skip_whitespace","clojure.zip/prev","rewrite-clj.zip.removez/remove-preserve-newline","p1__50701#","and__4115__auto__","cljs.core/not","rewrite-clj.zip.whitespace/linebreak?","p1__50702#"]],"~:used-vars",["^L",["~$rewrite-clj.zip.removez/remove-trailing-space","~$rewrite-clj.zip.utils/remove-left-while","~$rewrite-clj.zip.removez/remove-preceding-space","~$rewrite-clj.zip.removez/remove","~$rewrite-clj.zip.utils/remove-right-while","~$js/Error","~$rewrite-clj.zip.removez/remove-preserve-newline"]]],"~:cache-keys",["~#cmap",[["^1=","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["^Y","~$goog.dom.HtmlElement"]]],["^1=","rewrite_clj/node/token.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","~$rewrite-clj.node.protocols"]]],["^1=","cljs/tools/reader/impl/utils.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","~$clojure.string","~$goog.string"]]],["^1=","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","~$goog.array","~$goog.asserts"]]],["^1=","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1Z","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1=","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1[","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^22"]]],["^1=","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1["]]],["^1=","rewrite_clj/zip/move.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^X","^T"]]],["^1=","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","cljs/tools/reader/impl/inspect.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V"]]],["^1=","cljs/tools/reader.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^1Z","^1Y","~$goog.string.StringBuffer"]]],["^1=","rewrite_clj/node/forms.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W"]]],["^1=","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","rewrite_clj/zip/utils.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^T"]]],["^1=","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1["]]],"~:SHADOW-TIMESTAMP",[1598571556000,1598571556000,1598571537000],["^1=","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1[","~$goog.reflect"]]],["^1=","rewrite_clj/node/reader_macro.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W","~$rewrite-clj.node.whitespace"]]],["^1=","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1[","~$goog.html.trustedtypes","^25","^26","^27","^28"]]],["^1=","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1Z","^1[","~$goog.html.SafeUrl","^27","^28","^22"]]],["^1=","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1[","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2B","^24","~$goog.html.uncheckedconversions","^27","^22"]]],["^1=","clojure/walk.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V"]]],["^1=","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1=","rewrite_clj/node/meta.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W","^2@"]]],["^1=","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1Z","^1[","~$goog.dom.TagName","~$goog.dom.tags","^2F","^2G","~$goog.html.SafeStyleSheet","^2B","^24","^2A","^25","^26","~$goog.labs.userAgent.browser","^21","^27","^28","^22"]]],["^1=","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^21"]]],["^1=","rewrite_clj/node/stringz.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W","~$cljs.tools.reader","^1X"]]],["^1=","rewrite_clj/node/comment.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W"]]],["^1=","rewrite_clj/node/keyword.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W"]]],["^1=","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1=","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1Z","^1[","^1Y","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1=","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","rewrite_clj/node/protocols.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1X"]]],["^1=","rewrite_clj/node/seq.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W"]]],["^1=","rewrite_clj/node/uneval.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W"]]],["^1=","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",[]]],["^1=","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1Z","^21"]]],["^1=","cljs/tools/reader/impl/errors.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^29","^1X","~$cljs.tools.reader.impl.inspect"]]],["^1=","rewrite_clj/node/whitespace.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W"]]],["^1=","rewrite_clj/node/coercer.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^1W","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2@"]]],["^1=","clojure/string.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1Y","^2="]]],["^1=","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","~$goog.dom.safe","^2H","^27","^22"]]],["^1=","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","rewrite_clj/node/fn.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W","~$clojure.walk"]]],["^1=","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^22"]]],["^1=","rewrite_clj/node.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","~$rewrite-clj.node.coercer","^1W","^2Z","^35","^2@","^36","^2X","^2Y","^32","^30","^34","^2[","^31","^33"]]],["^1=","rewrite_clj/zip/removez.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^Z","^U","^X","^T"]]],["^1=","clojure/zip.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V"]]],["^1=","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","cljs/tools/reader/reader_types.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^2:","^1Y","^2="]]],["^1=","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1Z","^1[","^2D","~$goog.math"]]],["^1=","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1[","^2E","^2F","^2G","^2M","^2B","^24","^27","^22"]]],["^1=","rewrite_clj/node/quote.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^1W"]]],["^1=","cljs/tools/reader/impl/commons.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","^2<","^29","^2:"]]],["^1=","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y"]]],["^1=","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","~$goog.math.Long","~$goog.math.Integer","^1Y","^21","^1Z","~$goog.Uri","^2="]]],["^1=","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1[","^2A","^27","^28"]]],["^1=","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1Z","^1[","^2G","^21","^27","^28","^22"]]],["^1=","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^2?"]]],["^1=","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1Z","^1[","^1Y"]]],["^1=","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^1[","^28"]]],["^1=","rewrite_clj/zip/whitespace.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^1R",["^ ","^1S",null,"^1T",["^L",[]],"^1U",["^Y","^V","~$rewrite-clj.node","^T"]]]]],"~:clj-info",["^ ","jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596724258000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/defaults.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1598571537000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/removez.cljs","^7",1,"^8",5,"^9",1,"^:",28],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",null,"^K",["^L",["^M"]],"^N","^O","^R",null,"^S",["^ ","^T","^T","~$u","^U","^V","^V","^W","^X","^Y","^Y","~$m","^Z","^X","^X","^Z","^Z","~$z","^T","^U","^U"],"^[",["^L",["^10"]],"~:shadow/js-access-global",["^L",["Error"]],"^11",null,"~:defs",["^ ","~$remove-trailing-space",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/removez.cljs","^7",9,"^8",8,"^9",9,"^:",29,"~:private",true,"~:arglists",["^14",["~$quote",["^14",[["~$zloc","~$p?"]]]]],"~:doc","Remove all whitespace following a given node."],"^43",true,"^N","^1I","^6","rewrite_clj/zip/removez.cljs","^:",29,"~:method-params",["^14",[["^46","^47"]]],"~:protocol-impl",null,"~:arglists-meta",["^14",[null,null]],"^8",1,"~:variadic?",false,"^7",9,"~:ret-tag","~$any","^9",9,"~:max-fixed-arity",2,"~:fn-var",true,"^44",["^14",["^45",["^14",[["^46","^47"]]]]],"^48","Remove all whitespace following a given node."],"~$remove-preceding-space",["^ ","^42",null,"^5",["^ ","^6","rewrite_clj/zip/removez.cljs","^7",14,"^8",8,"^9",14,"^:",30,"^43",true,"^44",["^14",["^45",["^14",[["^46","^47"]]]]],"^48","Remove all whitespace preceding a given node."],"^43",true,"^N","^1K","^6","rewrite_clj/zip/removez.cljs","^:",30,"^49",["^14",[["^46","^47"]]],"^4:",null,"^4;",["^14",[null,null]],"^8",1,"^4<",false,"^7",14,"^4=","^4>","^9",14,"^4?",2,"^4@",true,"^44",["^14",["^45",["^14",[["^46","^47"]]]]],"^48","Remove all whitespace preceding a given node."],"^M",["^ ","^42",null,"^5",["^ ","^6","rewrite_clj/zip/removez.cljs","^7",19,"^8",7,"^9",19,"^:",13,"^44",["^14",["^45",["^14",[["^46"]]]]],"^48","Remove value at the given zipper location. Returns the first non-whitespace\n   node that would have preceded it in a depth-first walk. Will remove whitespace\n   appropriately.\n\n  - `[1  2  3]   => [1  3]`\n  - `[1 2]       => [1]`\n  - `[1 2]       => [2]`\n  - `[1]         => []`\n  - `[  1  ]     => []`\n  - `[1 [2 3] 4] => [1 [2 3]]`\n  - `[1 [2 3] 4] => [[2 3] 4]`\n\n   If a node is located rightmost, both preceding and trailing spaces are removed,\n   otherwise only trailing spaces are touched. This means that a following element\n   (no matter whether on the same line or not) will end up in the same position\n   (line/column) as the removed one, _unless_ a comment lies between the original\n   node and the neighbour."],"^N","^1L","^6","rewrite_clj/zip/removez.cljs","^:",13,"^49",["^14",[["^46"]]],"^4:",null,"^4;",["^14",[null,null]],"^8",1,"^4<",false,"^7",19,"^4=",["^L",["^4>","~$clj-nil"]],"^9",19,"^4?",1,"^4@",true,"^44",["^14",["^45",["^14",[["^46"]]]]],"^48","Remove value at the given zipper location. Returns the first non-whitespace\n   node that would have preceded it in a depth-first walk. Will remove whitespace\n   appropriately.\n\n  - `[1  2  3]   => [1  3]`\n  - `[1 2]       => [1]`\n  - `[1 2]       => [2]`\n  - `[1]         => []`\n  - `[  1  ]     => []`\n  - `[1 [2 3] 4] => [1 [2 3]]`\n  - `[1 [2 3] 4] => [[2 3] 4]`\n\n   If a node is located rightmost, both preceding and trailing spaces are removed,\n   otherwise only trailing spaces are touched. This means that a following element\n   (no matter whether on the same line or not) will end up in the same position\n   (line/column) as the removed one, _unless_ a comment lies between the original\n   node and the neighbour."],"~$remove-preserve-newline",["^ ","^42",null,"^5",["^ ","^6","rewrite_clj/zip/removez.cljs","^7",48,"^8",7,"^9",48,"^:",30,"^44",["^14",["^45",["^14",[["^46"]]]]],"^48","Same as remove but preserves newlines"],"^N","^1O","^6","rewrite_clj/zip/removez.cljs","^:",30,"^49",["^14",[["^46"]]],"^4:",null,"^4;",["^14",[null,null]],"^8",1,"^4<",false,"^7",48,"^4=",["^L",["^4>","^4B"]],"^9",48,"^4?",1,"^4@",true,"^44",["^14",["^45",["^14",[["^46"]]]]],"^48","Same as remove but preserves newlines"]],"^12",["^ ","^V","^V"],"^19",["^ ","^10",["^L",[]]],"^1:",["^ "],"^1;",["^Y","^V","^Z","^U","^X","^T"]],"^Q","^O","~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^1Q",[["^4F","~:static-fns"],true,["^4F","~:shadow-tweaks"],null,["^4F","~:source-map-inline"],null,["^4F","~:elide-asserts"],false,["^4F","~:optimize-constants"],null,["^4F","^1@"],null,["^4F","~:external-config"],null,["^4F","~:tooling-config"],null,["^4F","~:emit-constants"],null,["^4F","~:load-tests"],null,["^4F","~:form-size-threshold"],null,["^4F","~:infer-externs"],true,["^4F","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4F","~:fn-invoke-direct"],null,["^4F","~:source-map"],"/dev/null"]]]