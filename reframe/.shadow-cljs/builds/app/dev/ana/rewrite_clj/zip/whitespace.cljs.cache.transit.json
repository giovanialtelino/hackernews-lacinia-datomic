["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.whitespace');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node');\ngoog.require('clojure.zip');\nrewrite_clj.zip.whitespace.whitespace_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_QMARK_(zloc){\nvar G__50540 = zloc;\nvar G__50540__$1 = (((G__50540 == null))?null:clojure.zip.node(G__50540));\nif((G__50540__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1(G__50540__$1) : rewrite_clj.node.whitespace_QMARK_.call(null,G__50540__$1));\n}\n});\nrewrite_clj.zip.whitespace.linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$linebreak_QMARK_(zloc){\nvar G__50542 = zloc;\nvar G__50542__$1 = (((G__50542 == null))?null:clojure.zip.node(G__50542));\nif((G__50542__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1(G__50542__$1) : rewrite_clj.node.linebreak_QMARK_.call(null,G__50542__$1));\n}\n});\nrewrite_clj.zip.whitespace.comment_QMARK_ = (function rewrite_clj$zip$whitespace$comment_QMARK_(zloc){\nvar G__50543 = zloc;\nvar G__50543__$1 = (((G__50543 == null))?null:clojure.zip.node(G__50543));\nif((G__50543__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1(G__50543__$1) : rewrite_clj.node.comment_QMARK_.call(null,G__50543__$1));\n}\n});\nrewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_not_linebreak_QMARK_(zloc){\nvar and__4115__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(zloc);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(zloc));\n} else {\nreturn and__4115__auto__;\n}\n});\nrewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_or_comment_QMARK_(zloc){\nvar G__50553 = zloc;\nvar G__50553__$1 = (((G__50553 == null))?null:clojure.zip.node(G__50553));\nif((G__50553__$1 == null)){\nreturn null;\n} else {\nreturn rewrite_clj.node.whitespace_or_comment_QMARK_(G__50553__$1);\n}\n});\n/**\n * Perform the given movement while the given predicate returns true.\n */\nrewrite_clj.zip.whitespace.skip = (function rewrite_clj$zip$whitespace$skip(f,p_QMARK_,zloc){\nreturn cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(p_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(clojure.zip.end_QMARK_),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.iterate(f,zloc)))));\n});\n/**\n * Perform the given movement (default: `z/right`) until a non-whitespace/\n * non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace = (function rewrite_clj$zip$whitespace$skip_whitespace(var_args){\nvar G__50560 = arguments.length;\nswitch (G__50560) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.right,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2 = (function (f,zloc){\nreturn rewrite_clj.zip.whitespace.skip(f,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$lang$maxFixedArity = 2);\n\n/**\n * Move left until a non-whitespace/non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace_left = (function rewrite_clj$zip$whitespace$skip_whitespace_left(zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.left,zloc);\n});\n/**\n * Prepend a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_space = (function rewrite_clj$zip$whitespace$prepend_space(var_args){\nvar G__50566 = arguments.length;\nswitch (G__50566) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * Append a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.append_space = (function rewrite_clj$zip$whitespace$append_space(var_args){\nvar G__50574 = arguments.length;\nswitch (G__50574) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * Prepend a newlines node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_newline = (function rewrite_clj$zip$whitespace$prepend_newline(var_args){\nvar G__50578 = arguments.length;\nswitch (G__50578) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$lang$maxFixedArity = 2);\n\n/**\n * Append a newline node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.append_newline = (function rewrite_clj$zip$whitespace$append_newline(var_args){\nvar G__50581 = arguments.length;\nswitch (G__50581) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^S","~$node","^S","~$clojure.zip","^U","~$z","^U","~$cljs.core","^V","~$goog","^W"],"~:seen",["^L",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^V","^V"],"~:form",["~#list",["~$ns","^N",["^11",["^Y",["^S","~:as","^T"],["^U","^13","~$z"]]]]],"~:flags",["^ ","^Y",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^S","^U"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/whitespace.cljs"],"~:compiled-at",1598576889797,"~:resource-name","rewrite_clj/zip/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.zip.whitespace\n  (:require [rewrite-clj.node :as node]\n            [clojure.zip :as z]))\n\n;; ## Predicates\n\n(defn whitespace?\n  [zloc]\n  (some-> zloc z/node node/whitespace?))\n\n(defn linebreak?\n  [zloc]\n  (some-> zloc z/node node/linebreak?))\n\n(defn comment?\n  [zloc]\n  (some-> zloc z/node node/comment?))\n\n(defn whitespace-not-linebreak?\n  [zloc]\n  (and\n   (whitespace? zloc)\n   (not (linebreak? zloc))))\n\n(defn whitespace-or-comment?\n  [zloc]\n  (some-> zloc z/node node/whitespace-or-comment?))\n\n\n;; ## Movement\n\n(defn skip\n  \"Perform the given movement while the given predicate returns true.\"\n  [f p? zloc]\n  (->> (iterate f zloc)\n       (take-while identity)\n       (take-while (complement z/end?))\n       (drop-while p?)\n       (first)))\n\n(defn skip-whitespace\n  \"Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.\"\n  ([zloc] (skip-whitespace z/right zloc))\n  ([f zloc] (skip f whitespace-or-comment? zloc)))\n\n(defn skip-whitespace-left\n  \"Move left until a non-whitespace/non-comment node is encountered.\"\n  [zloc]\n  (skip-whitespace z/left zloc))\n\n;; ## Insertion\n\n(defn prepend-space\n  \"Prepend a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (prepend-space zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/spaces n))))\n\n(defn append-space\n  \"Append a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (append-space zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/spaces n))))\n\n(defn prepend-newline\n  \"Prepend a newlines node representing the given number of newlines (default: 1).\"\n  ([zloc] (prepend-newline zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/newlines n))))\n\n(defn append-newline\n  \"Append a newline node representing the given number of newlines (default: 1).\"\n  ([zloc] (append-newline zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/newlines n))))\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["rewrite-clj.zip.whitespace/whitespace?","zloc","G__50540","clojure.zip/node","rewrite-clj.node/whitespace?","rewrite-clj.zip.whitespace/linebreak?","G__50542","rewrite-clj.node/linebreak?","rewrite-clj.zip.whitespace/comment?","G__50543","rewrite-clj.node/comment?","rewrite-clj.zip.whitespace/whitespace-not-linebreak?","and__4115__auto__","cljs.core/not","rewrite-clj.zip.whitespace/whitespace-or-comment?","G__50553","rewrite-clj.node/whitespace-or-comment?","rewrite-clj.zip.whitespace/skip","f","p?","cljs.core/iterate","cljs.core.take_while","cljs.core/identity","cljs.core/complement","clojure.zip/end?","cljs.core.drop_while","cljs.core/first","var_args","G__50560","rewrite-clj.zip.whitespace/skip-whitespace","js/Error","rewrite_clj.zip.whitespace.skip_whitespace","clojure.zip/right","rewrite-clj.zip.whitespace/skip-whitespace-left","clojure.zip/left","G__50566","rewrite-clj.zip.whitespace/prepend-space","rewrite_clj.zip.whitespace.prepend_space","n","clojure.zip/insert-left","rewrite-clj.node/spaces","G__50574","rewrite-clj.zip.whitespace/append-space","rewrite_clj.zip.whitespace.append_space","clojure.zip/insert-right","G__50578","rewrite-clj.zip.whitespace/prepend-newline","rewrite_clj.zip.whitespace.prepend_newline","rewrite-clj.node/newlines","G__50581","rewrite-clj.zip.whitespace/append-newline","rewrite_clj.zip.whitespace.append_newline"]],"~:used-vars",["^L",["~$rewrite-clj.zip.whitespace/prepend-space","~$rewrite-clj.zip.whitespace/comment?","~$rewrite-clj.zip.whitespace/whitespace-not-linebreak?","~$rewrite-clj.zip.whitespace/append-newline","~$clojure.zip/end?","~$rewrite-clj.zip.whitespace/prepend-newline","~$cljs.core/take-while","~$cljs.core/drop-while","~$rewrite-clj.zip.whitespace/append-space","~$rewrite-clj.zip.whitespace/whitespace-or-comment?","~$cljs.core/identity","~$rewrite-clj.node/comment?","~$cljs.core/iterate","~$rewrite-clj.zip.whitespace/whitespace?","~$rewrite-clj.node/spaces","~$rewrite-clj.zip.whitespace/skip-whitespace-left","~$clojure.zip/insert-right","~$rewrite-clj.zip.whitespace/skip","~$rewrite-clj.node/whitespace-or-comment?","~$rewrite-clj.node/whitespace?","~$clojure.zip/insert-left","~$rewrite-clj.node/linebreak?","~$clojure.zip/right","~$cljs.core/not","~$cljs.core/complement","~$rewrite-clj.node/newlines","~$rewrite-clj.zip.whitespace/linebreak?","~$cljs.core/first","~$js/Error","~$clojure.zip/left","~$rewrite-clj.zip.whitespace/skip-whitespace"]]],"~:cache-keys",["~#cmap",[["^18","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["^W","~$goog.dom.HtmlElement"]]],["^18","rewrite_clj/node/token.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","~$rewrite-clj.node.protocols"]]],["^18","cljs/tools/reader/impl/utils.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","~$clojure.string","~$goog.string"]]],["^18","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","~$goog.array","~$goog.asserts"]]],["^18","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2A","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^18","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2B","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2E"]]],["^18","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2B"]]],["^18","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","cljs/tools/reader/impl/inspect.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V"]]],["^18","cljs/tools/reader.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^2A","^2@","~$goog.string.StringBuffer"]]],["^18","rewrite_clj/node/forms.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>"]]],["^18","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2B"]]],"~:SHADOW-TIMESTAMP",[1598571556000,1598571556000,1598571537000],["^18","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2B","~$goog.reflect"]]],["^18","rewrite_clj/node/reader_macro.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>","~$rewrite-clj.node.whitespace"]]],["^18","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2B","~$goog.html.trustedtypes","^2H","^2I","^2J","^2K"]]],["^18","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2A","^2B","~$goog.html.SafeUrl","^2J","^2K","^2E"]]],["^18","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2B","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2U","^2G","~$goog.html.uncheckedconversions","^2J","^2E"]]],["^18","clojure/walk.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V"]]],["^18","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^18","rewrite_clj/node/meta.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>","^2S"]]],["^18","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2A","^2B","~$goog.dom.TagName","~$goog.dom.tags","^2Y","^2Z","~$goog.html.SafeStyleSheet","^2U","^2G","^2T","^2H","^2I","~$goog.labs.userAgent.browser","^2D","^2J","^2K","^2E"]]],["^18","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2D"]]],["^18","rewrite_clj/node/stringz.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>","~$cljs.tools.reader","^2?"]]],["^18","rewrite_clj/node/comment.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>"]]],["^18","rewrite_clj/node/keyword.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>"]]],["^18","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^18","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2A","^2B","^2@","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^18","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","rewrite_clj/node/protocols.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2?"]]],["^18","rewrite_clj/node/seq.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>"]]],["^18","rewrite_clj/node/uneval.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>"]]],["^18","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",[]]],["^18","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2A","^2D"]]],["^18","cljs/tools/reader/impl/errors.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2L","^2?","~$cljs.tools.reader.impl.inspect"]]],["^18","rewrite_clj/node/whitespace.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>"]]],["^18","rewrite_clj/node/coercer.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^2>","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2S"]]],["^18","clojure/string.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2@","^2P"]]],["^18","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","~$goog.dom.safe","^2[","^2J","^2E"]]],["^18","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","rewrite_clj/node/fn.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>","~$clojure.walk"]]],["^18","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2E"]]],["^18","rewrite_clj/node.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","~$rewrite-clj.node.coercer","^2>","^3A","^3H","^2S","^3I","^3?","^3@","^3E","^3C","^3G","^3B","^3D","^3F"]]],["^18","clojure/zip.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V"]]],["^18","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","cljs/tools/reader/reader_types.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2M","^2@","^2P"]]],["^18","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2A","^2B","^2W","~$goog.math"]]],["^18","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2B","^2X","^2Y","^2Z","^34","^2U","^2G","^2J","^2E"]]],["^18","rewrite_clj/node/quote.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2>"]]],["^18","cljs/tools/reader/impl/commons.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^2O","^2L","^2M"]]],["^18","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W"]]],["^18","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","~$goog.math.Long","~$goog.math.Integer","^2@","^2D","^2A","~$goog.Uri","^2P"]]],["^18","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2B","^2T","^2J","^2K"]]],["^18","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2A","^2B","^2Z","^2D","^2J","^2K","^2E"]]],["^18","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2R"]]],["^18","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2A","^2B","^2@"]]],["^18","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^2B","^2K"]]],["^18","rewrite_clj/zip/whitespace.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^29",["^ ","^2:",null,"^2;",["^L",[]],"^2<",["^W","^V","^S","^U"]]]]],"~:clj-info",["^ ","jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596724258000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/defaults.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1598571537000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",null,"^K",["^L",[]],"^M","^N","^Q",null,"^R",["^ ","^S","^S","^T","^S","^U","^U","~$z","^U","^V","^V","^W","^W"],"^X",["^L",["^Y"]],"~:shadow/js-access-global",["^L",["Error"]],"^Z",null,"~:defs",["^ ","~$whitespace?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",7,"^8",7,"^9",7,"^:",18,"~:arglists",["^11",["~$quote",["^11",[["~$zloc"]]]]]],"^M","^1Q","^6","rewrite_clj/zip/whitespace.cljs","^:",18,"~:method-params",["^11",[["^4G"]]],"~:protocol-impl",null,"~:arglists-meta",["^11",[null,null]],"^8",1,"~:variadic?",false,"^7",7,"~:ret-tag",["^L",["~$any","~$clj-nil"]],"^9",7,"~:max-fixed-arity",1,"~:fn-var",true,"^4E",["^11",["^4F",["^11",[["^4G"]]]]]],"~$linebreak?",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",11,"^8",7,"^9",11,"^:",17,"^4E",["^11",["^4F",["^11",[["^4G"]]]]]],"^M","^22","^6","rewrite_clj/zip/whitespace.cljs","^:",17,"^4H",["^11",[["^4G"]]],"^4I",null,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"^7",11,"^4L",["^L",["^4M","^4N"]],"^9",11,"^4O",1,"^4P",true,"^4E",["^11",["^4F",["^11",[["^4G"]]]]]],"~$skip",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",32,"^8",7,"^9",32,"^:",11,"^4E",["^11",["^4F",["^11",[["~$f","~$p?","^4G"]]]]],"~:doc","Perform the given movement while the given predicate returns true."],"^M","^1U","^6","rewrite_clj/zip/whitespace.cljs","^:",11,"^4H",["^11",[["~$f","^4S","^4G"]]],"^4I",null,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"^7",32,"^4L",["^L",["^4M","^4N"]],"^9",32,"^4O",3,"^4P",true,"^4E",["^11",["^4F",["^11",[["~$f","^4S","^4G"]]]]],"^4T","Perform the given movement while the given predicate returns true."],"~$prepend-space",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",54,"^8",7,"^9",54,"^:",20,"^4E",["^11",["^4F",["^11",[["^4G"],["^4G","~$n"]]]]],"^4T","Prepend a whitespace node representing the given number of spaces (default: 1).","~:top-fn",["^ ","^4K",false,"~:fixed-arity",2,"^4O",2,"^4H",[["^4G"],["^4G","~$n"]],"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4J",["^11",[null,null]]]],"^M","^1D","^6","rewrite_clj/zip/whitespace.cljs","^:",20,"^4V",["^ ","^4K",false,"^4W",2,"^4O",2,"^4H",[["^4G"],["^4G","~$n"]],"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4J",["^11",[null,null]]],"^4H",[["^4G"],["^4G","~$n"]],"^4I",null,"^4W",2,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"~:methods",[["^ ","^4W",1,"^4K",false,"~:tag","^4M"],["^ ","^4W",2,"^4K",false,"^4Y",["^L",["~$clj","~$cljs.core/MetaFn","^4N"]]]],"^7",54,"^9",54,"^4O",2,"^4P",true,"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4T","Prepend a whitespace node representing the given number of spaces (default: 1)."],"~$append-newline",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",72,"^8",7,"^9",72,"^:",21,"^4E",["^11",["^4F",["^11",[["^4G"],["^4G","~$n"]]]]],"^4T","Append a newline node representing the given number of newlines (default: 1).","^4V",["^ ","^4K",false,"^4W",2,"^4O",2,"^4H",[["^4G"],["^4G","~$n"]],"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4J",["^11",[null,null]]]],"^M","^1G","^6","rewrite_clj/zip/whitespace.cljs","^:",21,"^4V",["^ ","^4K",false,"^4W",2,"^4O",2,"^4H",[["^4G"],["^4G","~$n"]],"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4J",["^11",[null,null]]],"^4H",[["^4G"],["^4G","~$n"]],"^4I",null,"^4W",2,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"^4X",[["^ ","^4W",1,"^4K",false,"^4Y","^4M"],["^ ","^4W",2,"^4K",false,"^4Y",["^L",["^4Z","^4[","^4N"]]]],"^7",72,"^9",72,"^4O",2,"^4P",true,"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4T","Append a newline node representing the given number of newlines (default: 1)."],"~$prepend-newline",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",66,"^8",7,"^9",66,"^:",22,"^4E",["^11",["^4F",["^11",[["^4G"],["^4G","~$n"]]]]],"^4T","Prepend a newlines node representing the given number of newlines (default: 1).","^4V",["^ ","^4K",false,"^4W",2,"^4O",2,"^4H",[["^4G"],["^4G","~$n"]],"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4J",["^11",[null,null]]]],"^M","^1I","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^4V",["^ ","^4K",false,"^4W",2,"^4O",2,"^4H",[["^4G"],["^4G","~$n"]],"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4J",["^11",[null,null]]],"^4H",[["^4G"],["^4G","~$n"]],"^4I",null,"^4W",2,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"^4X",[["^ ","^4W",1,"^4K",false,"^4Y","^4M"],["^ ","^4W",2,"^4K",false,"^4Y",["^L",["^4Z","^4[","^4N"]]]],"^7",66,"^9",66,"^4O",2,"^4P",true,"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4T","Prepend a newlines node representing the given number of newlines (default: 1)."],"~$append-space",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",60,"^8",7,"^9",60,"^:",19,"^4E",["^11",["^4F",["^11",[["^4G"],["^4G","~$n"]]]]],"^4T","Append a whitespace node representing the given number of spaces (default: 1).","^4V",["^ ","^4K",false,"^4W",2,"^4O",2,"^4H",[["^4G"],["^4G","~$n"]],"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4J",["^11",[null,null]]]],"^M","^1L","^6","rewrite_clj/zip/whitespace.cljs","^:",19,"^4V",["^ ","^4K",false,"^4W",2,"^4O",2,"^4H",[["^4G"],["^4G","~$n"]],"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4J",["^11",[null,null]]],"^4H",[["^4G"],["^4G","~$n"]],"^4I",null,"^4W",2,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"^4X",[["^ ","^4W",1,"^4K",false,"^4Y","^4M"],["^ ","^4W",2,"^4K",false,"^4Y",["^L",["^4Z","^4[","^4N"]]]],"^7",60,"^9",60,"^4O",2,"^4P",true,"^4E",["^11",[["^4G"],["^4G","~$n"]]],"^4T","Append a whitespace node representing the given number of spaces (default: 1)."],"~$skip-whitespace-left",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",47,"^8",7,"^9",47,"^:",27,"^4E",["^11",["^4F",["^11",[["^4G"]]]]],"^4T","Move left until a non-whitespace/non-comment node is encountered."],"^M","^1S","^6","rewrite_clj/zip/whitespace.cljs","^:",27,"^4H",["^11",[["^4G"]]],"^4I",null,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"^7",47,"^4L",["^L",["^4M","^4N"]],"^9",47,"^4O",1,"^4P",true,"^4E",["^11",["^4F",["^11",[["^4G"]]]]],"^4T","Move left until a non-whitespace/non-comment node is encountered."],"~$skip-whitespace",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",41,"^8",7,"^9",41,"^:",22,"^4E",["^11",["^4F",["^11",[["^4G"],["~$f","^4G"]]]]],"^4T","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.","^4V",["^ ","^4K",false,"^4W",2,"^4O",2,"^4H",[["^4G"],["~$f","^4G"]],"^4E",["^11",[["^4G"],["~$f","^4G"]]],"^4J",["^11",[null,null]]]],"^M","^26","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^4V",["^ ","^4K",false,"^4W",2,"^4O",2,"^4H",[["^4G"],["~$f","^4G"]],"^4E",["^11",[["^4G"],["~$f","^4G"]]],"^4J",["^11",[null,null]]],"^4H",[["^4G"],["~$f","^4G"]],"^4I",null,"^4W",2,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"^4X",[["^ ","^4W",1,"^4K",false,"^4Y","^4M"],["^ ","^4W",2,"^4K",false,"^4Y",["^L",["^4M","^4N"]]]],"^7",41,"^9",41,"^4O",2,"^4P",true,"^4E",["^11",[["^4G"],["~$f","^4G"]]],"^4T","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered."],"~$comment?",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",15,"^8",7,"^9",15,"^:",15,"^4E",["^11",["^4F",["^11",[["^4G"]]]]]],"^M","^1E","^6","rewrite_clj/zip/whitespace.cljs","^:",15,"^4H",["^11",[["^4G"]]],"^4I",null,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"^7",15,"^4L",["^L",["^4M","^4N"]],"^9",15,"^4O",1,"^4P",true,"^4E",["^11",["^4F",["^11",[["^4G"]]]]]],"~$whitespace-not-linebreak?",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",19,"^8",7,"^9",19,"^:",32,"^4E",["^11",["^4F",["^11",[["^4G"]]]]]],"^M","^1F","^6","rewrite_clj/zip/whitespace.cljs","^:",32,"^4H",["^11",[["^4G"]]],"^4I",null,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"^7",19,"^4L",["^L",["~$boolean","^4M","^4N"]],"^9",19,"^4O",1,"^4P",true,"^4E",["^11",["^4F",["^11",[["^4G"]]]]]],"~$whitespace-or-comment?",["^ ","^4D",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",25,"^8",7,"^9",25,"^:",29,"^4E",["^11",["^4F",["^11",[["^4G"]]]]]],"^M","^1M","^6","rewrite_clj/zip/whitespace.cljs","^:",29,"^4H",["^11",[["^4G"]]],"^4I",null,"^4J",["^11",[null,null]],"^8",1,"^4K",false,"^7",25,"^4L",["^L",["^4M","^4N"]],"^9",25,"^4O",1,"^4P",true,"^4E",["^11",["^4F",["^11",[["^4G"]]]]]]],"^[",["^ ","^V","^V"],"^14",["^ ","^Y",["^L",[]]],"^15",["^ "],"^16",["^W","^V","^S","^U"]],"^P","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^28",[["^5;","~:static-fns"],true,["^5;","~:shadow-tweaks"],null,["^5;","~:source-map-inline"],null,["^5;","~:elide-asserts"],false,["^5;","~:optimize-constants"],null,["^5;","^1;"],null,["^5;","~:external-config"],null,["^5;","~:tooling-config"],null,["^5;","~:emit-constants"],null,["^5;","~:load-tests"],null,["^5;","~:form-size-threshold"],null,["^5;","~:infer-externs"],true,["^5;","^1="],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5;","~:fn-invoke-direct"],null,["^5;","~:source-map"],"/dev/null"]]]