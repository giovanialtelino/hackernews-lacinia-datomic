["^ ","~:output",["^ ","~:js","goog.provide('cljs.analyzer');\ngoog.require('cljs.core');\ngoog.require('goog.string');\ngoog.require('clojure.string');\ngoog.require('clojure.set');\ngoog.require('cljs.env');\ngoog.require('cljs.tagged_literals');\ngoog.require('cljs.tools.reader');\ngoog.require('cljs.tools.reader.reader_types');\ngoog.require('cljs.reader');\ncljs.analyzer._STAR_cljs_ns_STAR_ = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\ncljs.analyzer._STAR_cljs_file_STAR_ = null;\ncljs.analyzer._STAR_checked_arrays_STAR_ = false;\ncljs.analyzer._STAR_check_alias_dupes_STAR_ = true;\ncljs.analyzer._STAR_cljs_static_fns_STAR_ = false;\ncljs.analyzer._STAR_fn_invoke_direct_STAR_ = false;\ncljs.analyzer._STAR_cljs_macros_path_STAR_ = \"/cljs/core\";\ncljs.analyzer._STAR_cljs_macros_is_classpath_STAR_ = true;\ncljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558),cljs.core.PersistentVector.EMPTY], null));\ncljs.analyzer._STAR_analyze_deps_STAR_ = true;\ncljs.analyzer._STAR_load_tests_STAR_ = true;\ncljs.analyzer._STAR_load_macros_STAR_ = true;\ncljs.analyzer._STAR_reload_macros_STAR_ = false;\ncljs.analyzer._STAR_macro_infer_STAR_ = true;\ncljs.analyzer._STAR_passes_STAR_ = null;\ncljs.analyzer._STAR_file_defs_STAR_ = null;\ncljs.analyzer._STAR_private_var_access_nowarn_STAR_ = false;\n/**\n * The namespace of the constants table as a symbol.\n */\ncljs.analyzer.constants_ns_sym = new cljs.core.Symbol(null,\"cljs.core.constants\",\"cljs.core.constants\",2057417066,null);\ncljs.analyzer._STAR_verbose_STAR_ = false;\ncljs.analyzer._cljs_macros_loaded = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),new cljs.core.Keyword(null,\"protocol-with-overwriting-method\",\"protocol-with-overwriting-method\",319993011),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217)],[true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]);\ncljs.analyzer.unchecked_arrays_QMARK_ = (function cljs$analyzer$unchecked_arrays_QMARK_(){\nreturn cljs.core._STAR_unchecked_arrays_STAR_;\n});\ncljs.analyzer.compiler_options = (function cljs$analyzer$compiler_options(){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"options\",\"options\",99638489));\n});\ncljs.analyzer.get_externs = (function cljs$analyzer$get_externs(){\nreturn new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\n});\n/**\n * Returns false-y, :warn, or :error based on configuration and the\n * current value of *unchecked-arrays*.\n */\ncljs.analyzer.checked_arrays = (function cljs$analyzer$checked_arrays(){\nif(((cljs.core.not(new cljs.core.Keyword(null,\"advanced\",\"advanced\",-451287892).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.compiler_options()))) && ((!(cljs.core._STAR_unchecked_arrays_STAR_))))){\nreturn cljs.analyzer._STAR_checked_arrays_STAR_;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.js_reserved = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 63, [\"typeof\",null,\"float\",null,\"implements\",null,\"else\",null,\"boolean\",null,\"abstract\",null,\"int\",null,\"static\",null,\"package\",null,\"this\",null,\"await\",null,\"yield\",null,\"interface\",null,\"void\",null,\"delete\",null,\"class\",null,\"export\",null,\"var\",null,\"try\",null,\"long\",null,\"null\",null,\"return\",null,\"methods\",null,\"native\",null,\"private\",null,\"new\",null,\"for\",null,\"catch\",null,\"extends\",null,\"short\",null,\"protected\",null,\"throws\",null,\"synchronized\",null,\"transient\",null,\"super\",null,\"if\",null,\"let\",null,\"import\",null,\"char\",null,\"switch\",null,\"const\",null,\"case\",null,\"break\",null,\"volatile\",null,\"function\",null,\"continue\",null,\"final\",null,\"do\",null,\"double\",null,\"while\",null,\"public\",null,\"arguments\",null,\"debugger\",null,\"with\",null,\"instanceof\",null,\"default\",null,\"throw\",null,\"goto\",null,\"finally\",null,\"byte\",null,\"constructor\",null,\"in\",null,\"enum\",null], null), null);\ncljs.analyzer.es5_allowed = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [\"default\",null], null), null);\ncljs.analyzer.SENTINEL = ({});\ncljs.analyzer.gets = (function cljs$analyzer$gets(var_args){\nvar G__60352 = arguments.length;\nswitch (G__60352) {\ncase 3:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3 = (function (m,k0,k1){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k1);\n}\n}));\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4 = (function (m,k0,k1,k2){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$2,k2);\n}\n}\n}));\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5 = (function (m,k0,k1,k2,k3){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$3 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$2,k2,cljs.analyzer.SENTINEL);\nif((m__$3 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$3,k3);\n}\n}\n}\n}));\n\n(cljs.analyzer.gets.cljs$lang$maxFixedArity = 5);\n\ncljs.analyzer.CLJ_NIL_SYM = new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null);\ncljs.analyzer.NUMBER_SYM = new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null);\ncljs.analyzer.STRING_SYM = new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null);\ncljs.analyzer.BOOLEAN_SYM = new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null);\ncljs.analyzer.JS_STAR_SYM = new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null);\ncljs.analyzer.DOT_SYM = new cljs.core.Symbol(null,\".\",\".\",1975675962,null);\ncljs.analyzer.NEW_SYM = new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null);\ncljs.analyzer.CLJS_CORE_SYM = new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null);\ncljs.analyzer.CLJS_CORE_MACROS_SYM = new cljs.core.Symbol(null,\"cljs.core$macros\",\"cljs.core$macros\",-2057787548,null);\ncljs.analyzer.IGNORE_SYM = new cljs.core.Symbol(null,\"ignore\",\"ignore\",8989494,null);\ncljs.analyzer.ANY_SYM = new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\ncljs.analyzer.cljs_seq_QMARK_ = (function cljs$analyzer$cljs_seq_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISeq$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_map_QMARK_ = (function cljs$analyzer$cljs_map_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (1024))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_vector_QMARK_ = (function cljs$analyzer$cljs_vector_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (16384))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_set_QMARK_ = (function cljs$analyzer$cljs_set_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (4096))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.munge_path = (function cljs$analyzer$munge_path(ss){\nreturn cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ss));\n});\n/**\n * Given a namespace as a symbol return the relative path. May optionally\n *   provide the file extension, defaults to :cljs.\n */\ncljs.analyzer.ns__GT_relpath = (function cljs$analyzer$ns__GT_relpath(var_args){\nvar G__60384 = arguments.length;\nswitch (G__60384) {\ncase 1:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629));\n}));\n\n(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2 = (function (ns,ext){\nreturn [clojure.string.replace(cljs.analyzer.munge_path(ns),\".\",\"/\"),\".\",cljs.core.name(ext)].join('');\n}));\n\n(cljs.analyzer.ns__GT_relpath.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.topo_sort = (function cljs$analyzer$topo_sort(var_args){\nvar G__60400 = arguments.length;\nswitch (G__60400) {\ncase 2:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2 = (function (x,get_deps){\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(x,(0),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.sorted_map()),cljs.core.memoize(get_deps));\n}));\n\n(cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4 = (function (x,depth,state,memo_get_deps){\nvar deps = (memo_get_deps.cljs$core$IFn$_invoke$arity$1 ? memo_get_deps.cljs$core$IFn$_invoke$arity$1(x) : memo_get_deps.call(null,x));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [depth], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentHashSet.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\nvar seq__60410_61602 = cljs.core.seq(deps);\nvar chunk__60411_61603 = null;\nvar count__60412_61604 = (0);\nvar i__60413_61605 = (0);\nwhile(true){\nif((i__60413_61605 < count__60412_61604)){\nvar dep_61606 = chunk__60411_61603.cljs$core$IIndexed$_nth$arity$2(null,i__60413_61605);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_61606,(depth + (1)),state,memo_get_deps);\n\n\nvar G__61607 = seq__60410_61602;\nvar G__61608 = chunk__60411_61603;\nvar G__61609 = count__60412_61604;\nvar G__61610 = (i__60413_61605 + (1));\nseq__60410_61602 = G__61607;\nchunk__60411_61603 = G__61608;\ncount__60412_61604 = G__61609;\ni__60413_61605 = G__61610;\ncontinue;\n} else {\nvar temp__5735__auto___61611 = cljs.core.seq(seq__60410_61602);\nif(temp__5735__auto___61611){\nvar seq__60410_61612__$1 = temp__5735__auto___61611;\nif(cljs.core.chunked_seq_QMARK_(seq__60410_61612__$1)){\nvar c__4556__auto___61613 = cljs.core.chunk_first(seq__60410_61612__$1);\nvar G__61614 = cljs.core.chunk_rest(seq__60410_61612__$1);\nvar G__61615 = c__4556__auto___61613;\nvar G__61616 = cljs.core.count(c__4556__auto___61613);\nvar G__61617 = (0);\nseq__60410_61602 = G__61614;\nchunk__60411_61603 = G__61615;\ncount__60412_61604 = G__61616;\ni__60413_61605 = G__61617;\ncontinue;\n} else {\nvar dep_61618 = cljs.core.first(seq__60410_61612__$1);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_61618,(depth + (1)),state,memo_get_deps);\n\n\nvar G__61620 = cljs.core.next(seq__60410_61612__$1);\nvar G__61621 = null;\nvar G__61622 = (0);\nvar G__61623 = (0);\nseq__60410_61602 = G__61620;\nchunk__60411_61603 = G__61621;\ncount__60412_61604 = G__61622;\ni__60413_61605 = G__61623;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__60428_61625 = cljs.core.seq(cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(state),cljs.core._LT_,depth));\nvar chunk__60429_61626 = null;\nvar count__60430_61627 = (0);\nvar i__60431_61628 = (0);\nwhile(true){\nif((i__60431_61628 < count__60430_61627)){\nvar vec__60438_61629 = chunk__60429_61626.cljs$core$IIndexed$_nth$arity$2(null,i__60431_61628);\nvar _LT_depth_61630 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60438_61629,(0),null);\nvar __61631 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60438_61629,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_61630], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__61632 = seq__60428_61625;\nvar G__61633 = chunk__60429_61626;\nvar G__61634 = count__60430_61627;\nvar G__61635 = (i__60431_61628 + (1));\nseq__60428_61625 = G__61632;\nchunk__60429_61626 = G__61633;\ncount__60430_61627 = G__61634;\ni__60431_61628 = G__61635;\ncontinue;\n} else {\nvar temp__5735__auto___61636 = cljs.core.seq(seq__60428_61625);\nif(temp__5735__auto___61636){\nvar seq__60428_61637__$1 = temp__5735__auto___61636;\nif(cljs.core.chunked_seq_QMARK_(seq__60428_61637__$1)){\nvar c__4556__auto___61638 = cljs.core.chunk_first(seq__60428_61637__$1);\nvar G__61639 = cljs.core.chunk_rest(seq__60428_61637__$1);\nvar G__61640 = c__4556__auto___61638;\nvar G__61641 = cljs.core.count(c__4556__auto___61638);\nvar G__61642 = (0);\nseq__60428_61625 = G__61639;\nchunk__60429_61626 = G__61640;\ncount__60430_61627 = G__61641;\ni__60431_61628 = G__61642;\ncontinue;\n} else {\nvar vec__60441_61643 = cljs.core.first(seq__60428_61637__$1);\nvar _LT_depth_61644 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60441_61643,(0),null);\nvar __61645 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60441_61643,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_61644], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__61647 = cljs.core.next(seq__60428_61637__$1);\nvar G__61648 = null;\nvar G__61649 = (0);\nvar G__61650 = (0);\nseq__60428_61625 = G__61647;\nchunk__60429_61626 = G__61648;\ncount__60430_61627 = G__61649;\ni__60431_61628 = G__61650;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(depth,(0))){\nreturn cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.vals(cljs.core.deref(state))));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.topo_sort.cljs$lang$maxFixedArity = 4);\n\n\ncljs.analyzer.ast_QMARK_ = (function cljs$analyzer$ast_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && (cljs.core.contains_QMARK_(x,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955))));\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.error_message !== 'undefined')){\n} else {\ncljs.analyzer.error_message = (function (){var method_table__4619__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4620__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4621__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4622__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4623__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__60449 = cljs.core.get_global_hierarchy;\nreturn (fexpr__60449.cljs$core$IFn$_invoke$arity$0 ? fexpr__60449.cljs$core$IFn$_invoke$arity$0() : fexpr__60449.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"error-message\"),(function() { \nvar G__61652__delegate = function (warning_type,_){\nreturn warning_type;\n};\nvar G__61652 = function (warning_type,var_args){\nvar _ = null;\nif (arguments.length > 1) {\nvar G__61653__i = 0, G__61653__a = new Array(arguments.length -  1);\nwhile (G__61653__i < G__61653__a.length) {G__61653__a[G__61653__i] = arguments[G__61653__i + 1]; ++G__61653__i;}\n  _ = new cljs.core.IndexedSeq(G__61653__a,0,null);\n} \nreturn G__61652__delegate.call(this,warning_type,_);};\nG__61652.cljs$lang$maxFixedArity = 1;\nG__61652.cljs$lang$applyTo = (function (arglist__61654){\nvar warning_type = cljs.core.first(arglist__61654);\nvar _ = cljs.core.rest(arglist__61654);\nreturn G__61652__delegate(warning_type,_);\n});\nG__61652.cljs$core$IFn$_invoke$arity$variadic = G__61652__delegate;\nreturn G__61652;\n})()\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4623__auto__,method_table__4619__auto__,prefer_table__4620__auto__,method_cache__4621__auto__,cached_hierarchy__4622__auto__));\n})();\n}\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),(function (warning_type,info){\nreturn [\"Preamble resource file not found: \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"missing\",\"missing\",362507769).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),(function (warning_type,info){\nreturn [\"Required namespace not provided for \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),(function (warning_type,info){\nreturn [(cljs.core.truth_(new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205).cljs$core$IFn$_invoke$arity$1(info))?\"Can't take value of macro \":\"Use of undeclared Var \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),(function (warning_type,info){\nreturn [\"var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" is not public\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),(function (warning_type,p__60465){\nvar map__60473 = p__60465;\nvar map__60473__$1 = (((((!((map__60473 == null))))?(((((map__60473.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60473.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60473):map__60473);\nvar info = map__60473__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60473__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60473__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629)),\", \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583)),\", or JavaScript source providing \\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(js_provide),\"\\\"\",((clojure.string.includes_QMARK_(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1(ns_sym),\"_\"))?\" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\":null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-macros-ns\",\"undeclared-macros-ns\",-438029430),(function (warning_type,p__60486){\nvar map__60491 = p__60486;\nvar map__60491__$1 = (((((!((map__60491 == null))))?(((((map__60491.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60491.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60491):map__60491);\nvar info = map__60491__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60491__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60491__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such macros namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"clj\",\"clj\",-660495428)),\" or \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" not declared ^:dynamic\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" already refers to: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" being replaced by: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info))))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(info)),\" is being replaced\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" no longer fn, references are stale\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),(function (warning_type,info){\nreturn [\"Wrong number of args (\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519).cljs$core$IFn$_invoke$arity$1(info)),\") passed to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info);\n}\n})())].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" declared arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(info)),\" mismatch defined arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),(function (warning_type,info){\nreturn [\"Invalid :refer, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"lib\",\"lib\",191808726).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" does not exist\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),(function (warning_type,info){\nreturn [\"Can't resolve protocol symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),(function (warning_type,info){\nreturn [\"Symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is not a protocol\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),(function (warning_type,info){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"no-such-method\",\"no-such-method\",1087422840).cljs$core$IFn$_invoke$arity$1(info))){\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare method called \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n} else {\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare arity \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"invalid-arity\",\"invalid-arity\",1335461949).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),(function (warning_type,info){\nreturn [\"Duplicated methods in protocol implementation \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implemented multiple times\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" declares method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-overwriting-method\",\"protocol-with-overwriting-method\",319993011),(function (warning_type,info){\nvar overwritten_protocol = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"existing\",\"existing\",-340796094).cljs$core$IFn$_invoke$arity$1(info));\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is overwriting \",(cljs.core.truth_(overwritten_protocol)?\"method\":\"function\"),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),(cljs.core.truth_(overwritten_protocol)?[\" of protocol \",cljs.core.name(overwritten_protocol)].join(''):null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implements method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),(function (warning_type,info){\nreturn [\"Ignoring target object \\\"\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(info)], 0)),\"\\\" passed in recur to protocol method head\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have more than 1 variadic overload\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have fixed arity function with more params than variadic function\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have 2 overloads with same arity\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),(function (warning_type,info){\nreturn [\"Extending an existing JavaScript type - use a different symbol name \",\"instead of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"current-symbol\",\"current-symbol\",-932381075).cljs$core$IFn$_invoke$arity$1(info)),\" e.g \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suggested-symbol\",\"suggested-symbol\",-1329631875).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(info)),\", all arguments must be numbers, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"types\",\"types\",590030639).cljs$core$IFn$_invoke$arity$1(info)),\" instead\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),(function (warning_type,p__60659){\nvar map__60664 = p__60659;\nvar map__60664__$1 = (((((!((map__60664 == null))))?(((((map__60664.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60664.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60664):map__60664);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60664__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar types = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60664__$1,new cljs.core.Keyword(null,\"types\",\"types\",590030639));\nvar G__60667 = name;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),G__60667)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),G__60667)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),G__60667)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),G__60667)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60667)].join('')));\n\n}\n}\n}\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),(function (warning_type,info){\nreturn [\"Cannot invoke type constructor \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" as function \"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" is a single segment namespace\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),(function (warning_type,p__60712){\nvar map__60713 = p__60712;\nvar map__60713__$1 = (((((!((map__60713 == null))))?(((((map__60713.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60713.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60713):map__60713);\nvar info = map__60713__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60713__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar munged = cljs.core.munge(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60709_SHARP_){\nif(cljs.core.truth_((cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1(p1__60709_SHARP_) : cljs.analyzer.js_reserved.call(null,p1__60709_SHARP_)))){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__60709_SHARP_),\"$\"].join('');\n} else {\nreturn p1__60709_SHARP_;\n}\n}),clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name),/\\./))));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" contains a reserved JavaScript keyword,\",\" the corresponding Google Closure namespace will be munged to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),(function (warning_type,p__60722){\nvar map__60725 = p__60722;\nvar map__60725__$1 = (((((!((map__60725 == null))))?(((((map__60725.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60725.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60725):map__60725);\nvar info = map__60725__$1;\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60725__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60725__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\" clashes with var \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),(function (warning_type,p__60727){\nvar map__60728 = p__60727;\nvar map__60728__$1 = (((((!((map__60728 == null))))?(((((map__60728.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60728.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60728):map__60728);\nvar info = map__60728__$1;\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60728__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" not declared dynamic and thus is not dynamically rebindable, but its name \",\"suggests otherwise. Please either indicate ^:dynamic \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" or change the name\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),(function (warning_type,p__60730){\nvar map__60731 = p__60730;\nvar map__60731__$1 = (((((!((map__60731 == null))))?(((((map__60731.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60731.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60731):map__60731);\nvar info = map__60731__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60731__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60731__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nreturn [\"Bad extend-type method shape for protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol),\" method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(method),\", method arities must be grouped together\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),(function (warning_type,p__60733){\nvar map__60734 = p__60733;\nvar map__60734__$1 = (((((!((map__60734 == null))))?(((((map__60734.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60734.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60734):map__60734);\nvar info = map__60734__$1;\nvar module_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60734__$1,new cljs.core.Keyword(null,\"module-type\",\"module-type\",1392760304));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60734__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported JavaScript module type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(module_type),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),(function (warning_type,p__60737){\nvar map__60738 = p__60737;\nvar map__60738__$1 = (((((!((map__60738 == null))))?(((((map__60738.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60738.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60738):map__60738);\nvar preprocess = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60738__$1,new cljs.core.Keyword(null,\"preprocess\",\"preprocess\",1208285012));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60738__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported preprocess value \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(preprocess),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),(function (warning_type,p__60742){\nvar map__60743 = p__60742;\nvar map__60743__$1 = (((((!((map__60743 == null))))?(((((map__60743.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60743.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60743):map__60743);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60743__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" is shadowed by a local\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),(function (warning_type,p__60745){\nvar map__60746 = p__60745;\nvar map__60746__$1 = (((((!((map__60746 == null))))?(((((map__60746.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60746.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60746):map__60746);\nvar warn_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60746__$1,new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60746__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60746__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar property = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60746__$1,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232));\nvar G__60748 = warn_type;\nvar G__60748__$1 = (((G__60748 instanceof cljs.core.Keyword))?G__60748.fqn:null);\nswitch (G__60748__$1) {\ncase \"target\":\nreturn [\"Cannot infer target type in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form),\"\"].join('');\n\nbreak;\ncase \"property\":\nreturn [\"Cannot resolve property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" for inferred type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(type),\" in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ncase \"object\":\nreturn [\"Adding extern to Object for property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" due to \",\"ambiguous expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60748__$1)].join('')));\n\n}\n}));\ncljs.analyzer.default_warning_handler = (function cljs$analyzer$default_warning_handler(warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nvar temp__5735__auto__ = cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(warning_type,extra);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar s = temp__5735__auto__;\nvar _STAR_print_fn_STAR__orig_val__60749 = cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_fn_STAR__temp_val__60750 = cljs.core._STAR_print_err_fn_STAR_;\n(cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__60750);\n\ntry{return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var G__60751 = env;\nvar G__60752 = [\"WARNING: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join('');\nreturn (cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2(G__60751,G__60752) : cljs.analyzer.message.call(null,G__60751,G__60752));\n})()], 0));\n}finally {(cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__60749);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer._STAR_cljs_warning_handlers_STAR_ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.default_warning_handler], null);\ncljs.analyzer.repeat_char = (function cljs$analyzer$repeat_char(c,n){\nvar ret = c;\nvar n__$1 = n;\nwhile(true){\nif((n__$1 > (0))){\nvar G__61683 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret),cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join('');\nvar G__61684 = (n__$1 - (1));\nret = G__61683;\nn__$1 = G__61684;\ncontinue;\n} else {\nreturn ret;\n}\nbreak;\n}\n});\ncljs.analyzer.hex_format = (function cljs$analyzer$hex_format(s,pad){\nvar hex = s.charCodeAt((0)).toString((16));\nvar len = hex.length;\nvar hex__$1 = (((len < pad))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.repeat_char(\"0\",(pad - len))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex)].join(''):hex);\nreturn [\"_u\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex__$1),\"_\"].join('');\n});\ncljs.analyzer.gen_constant_id = (function cljs$analyzer$gen_constant_id(value){\nvar prefix = (((value instanceof cljs.core.Keyword))?\"cst$kw$\":(((value instanceof cljs.core.Symbol))?\"cst$sym$\":(function(){throw (new Error([\"constant type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(value)),\" not supported\"].join('')))})()\n));\nvar name = (((value instanceof cljs.core.Keyword))?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(value),(1)):cljs.core.str.cljs$core$IFn$_invoke$arity$1(value));\nvar name__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\".\",name))?\"_DOT_\":clojure.string.replace(clojure.string.replace(cljs.core.munge(clojure.string.replace(name,\"-\",\"_DASH_\")),\".\",\"$\"),/[^a-z0-9$_]/i,(function (p1__60753_SHARP_){\nreturn cljs.analyzer.hex_format(p1__60753_SHARP_,(4));\n})));\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([prefix,name__$1].join(''));\n});\ncljs.analyzer.register_constant_BANG_ = (function cljs$analyzer$register_constant_BANG_(var_args){\nvar G__60760 = arguments.length;\nswitch (G__60760) {\ncase 1:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (val){\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(null,val);\n}));\n\n(cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (env,val){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (cenv){\nvar G__60761 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"constant-table\",\"cljs.analyzer/constant-table\",-114131889)], null),(function (table){\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(table,val))){\nreturn table;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(table,val,cljs.analyzer.gen_constant_id(val));\n}\n}));\nif(cljs.core.truth_(env)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__60761,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(\"cljs.analyzer\",\"constants\",\"cljs.analyzer/constants\",1697083770)], null),(function (p__60766){\nvar map__60767 = p__60766;\nvar map__60767__$1 = (((((!((map__60767 == null))))?(((((map__60767.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60767.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60767):map__60767);\nvar constants = map__60767__$1;\nvar seen = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__60767__$1,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.PersistentHashSet.EMPTY);\nvar order = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__60767__$1,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.PersistentVector.EMPTY);\nvar G__60769 = constants;\nif((!(cljs.core.contains_QMARK_(seen,val)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__60769,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen,val),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(order,val)], 0));\n} else {\nreturn G__60769;\n}\n}));\n} else {\nreturn G__60761;\n}\n}));\n}));\n\n(cljs.analyzer.register_constant_BANG_.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.default_namespaces = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null)], null);\ncljs.analyzer.namespaces = (function (){\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.t_cljs$analyzer60770 !== 'undefined')){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.analyzer.t_cljs$analyzer60770 = (function (meta60771){\nthis.meta60771 = meta60771;\nthis.cljs$lang$protocol_mask$partition0$ = 425984;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(cljs.analyzer.t_cljs$analyzer60770.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_60772,meta60771__$1){\nvar self__ = this;\nvar _60772__$1 = this;\nreturn (new cljs.analyzer.t_cljs$analyzer60770(meta60771__$1));\n}));\n\n(cljs.analyzer.t_cljs$analyzer60770.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_60772){\nvar self__ = this;\nvar _60772__$1 = this;\nreturn self__.meta60771;\n}));\n\n(cljs.analyzer.t_cljs$analyzer60770.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nif((!((cljs.env._STAR_compiler_STAR_ == null)))){\nreturn new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\n} else {\nreturn cljs.analyzer.default_namespaces;\n}\n}));\n\n(cljs.analyzer.t_cljs$analyzer60770.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"meta60771\",\"meta60771\",-1863903050,null)], null);\n}));\n\n(cljs.analyzer.t_cljs$analyzer60770.cljs$lang$type = true);\n\n(cljs.analyzer.t_cljs$analyzer60770.cljs$lang$ctorStr = \"cljs.analyzer/t_cljs$analyzer60770\");\n\n(cljs.analyzer.t_cljs$analyzer60770.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"cljs.analyzer/t_cljs$analyzer60770\");\n}));\n\n/**\n * Positional factory function for cljs.analyzer/t_cljs$analyzer60770.\n */\ncljs.analyzer.__GT_t_cljs$analyzer60770 = (function cljs$analyzer$__GT_t_cljs$analyzer60770(meta60771){\nreturn (new cljs.analyzer.t_cljs$analyzer60770(meta60771));\n});\n\n}\n\nreturn (new cljs.analyzer.t_cljs$analyzer60770(cljs.core.PersistentArrayMap.EMPTY));\n})()\n;\ncljs.analyzer.get_namespace = (function cljs$analyzer$get_namespace(var_args){\nvar G__60774 = arguments.length;\nswitch (G__60774) {\ncase 1:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1 = (function (key){\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,key);\n}));\n\n(cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2 = (function (cenv,key){\nvar temp__5737__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cenv),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),key], null));\nif((temp__5737__auto__ == null)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),key)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null);\n} else {\nreturn null;\n}\n} else {\nvar ns = temp__5737__auto__;\nreturn ns;\n}\n}));\n\n(cljs.analyzer.get_namespace.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.get_line = (function cljs$analyzer$get_line(x,env){\nvar or__4126__auto__ = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\ncljs.analyzer.get_col = (function cljs$analyzer$get_col(x,env){\nvar or__4126__auto__ = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\n/**\n * Given a Clojure namespace intern all macros into the ambient ClojureScript\n * analysis environment.\n */\ncljs.analyzer.intern_macros = (function cljs$analyzer$intern_macros(var_args){\nvar G__60776 = arguments.length;\nswitch (G__60776) {\ncase 1:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(ns,false);\n}));\n\n(cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2 = (function (ns,reload){\nif(cljs.core.truth_((function (){var or__4126__auto__ = (cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)) == null);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nreturn reload;\n}\n})())){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__60777){\nvar vec__60778 = p__60777;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60778,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60778,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(function (){var vm = cljs.core.meta(v);\nvar ns__$1 = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(vm).getName();\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(vm,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)),new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404),true], 0));\n})()], null);\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__60781){\nvar vec__60782 = p__60781;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60782,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60782,(1),null);\nreturn v.isMacro();\n}),cljs.core.ns_interns_STAR_(ns)))));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.intern_macros.cljs$lang$maxFixedArity = 2);\n\n/**\n * Construct an empty analysis environment. Required to analyze forms.\n */\ncljs.analyzer.empty_env = (function cljs$analyzer$empty_env(){\nvar val__60254__auto__ = cljs.env._STAR_compiler_STAR_;\nif((val__60254__auto__ == null)){\n(cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0());\n} else {\n}\n\ntry{return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60785_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__60785_SHARP_,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),p1__60785_SHARP_,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null)],null));\n}),cljs.core.list(new cljs.core.Symbol(null,\"alert\",\"alert\",1068580947,null),new cljs.core.Symbol(null,\"window\",\"window\",-1929916235,null),new cljs.core.Symbol(null,\"document\",\"document\",311342840,null),new cljs.core.Symbol(null,\"console\",\"console\",-1426363712,null),new cljs.core.Symbol(null,\"escape\",\"escape\",648929575,null),new cljs.core.Symbol(null,\"unescape\",\"unescape\",-2037730561,null),new cljs.core.Symbol(null,\"screen\",\"screen\",-664376021,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"navigator\",\"navigator\",-604431588,null),new cljs.core.Symbol(null,\"history\",\"history\",1393136307,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"global\",\"global\",1734126574,null),new cljs.core.Symbol(null,\"process\",\"process\",-1011242831,null),new cljs.core.Symbol(null,\"require\",\"require\",1172530194,null),new cljs.core.Symbol(null,\"module\",\"module\",-1229817578,null),new cljs.core.Symbol(null,\"exports\",\"exports\",895523255,null))))], null);\n}finally {if((val__60254__auto__ == null)){\n(cljs.env._STAR_compiler_STAR_ = null);\n} else {\n}\n}});\ncljs.analyzer.source_info__GT_error_data = (function cljs$analyzer$source_info__GT_error_data(p__60786){\nvar map__60787 = p__60786;\nvar map__60787__$1 = (((((!((map__60787 == null))))?(((((map__60787.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60787.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60787):map__60787);\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60787__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60787__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60787__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"clojure.error\",\"source\",\"clojure.error/source\",-2011936397),file,new cljs.core.Keyword(\"clojure.error\",\"line\",\"clojure.error/line\",-1816287471),line,new cljs.core.Keyword(\"clojure.error\",\"column\",\"clojure.error/column\",304721553),column], null);\n});\ncljs.analyzer.source_info = (function cljs$analyzer$source_info(var_args){\nvar G__60790 = arguments.length;\nswitch (G__60790) {\ncase 1:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1 = (function (env){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(null,env);\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2 = (function (name,env){\nvar G__60791 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)))?\"cljs/core.cljs\":cljs.analyzer._STAR_cljs_file_STAR_),new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(name,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(name,env)], null);\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([G__60791,cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912)], null))], 0));\n} else {\nreturn G__60791;\n}\n}));\n\n(cljs.analyzer.source_info.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.message = (function cljs$analyzer$message(env,s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))?[\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join(''):(cljs.core.truth_(cljs.analyzer._STAR_cljs_file_STAR_)?[\" in file \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join(''):null))].join('');\n});\ncljs.analyzer.warning = (function cljs$analyzer$warning(warning_type,env,extra){\nvar seq__60792 = cljs.core.seq(cljs.analyzer._STAR_cljs_warning_handlers_STAR_);\nvar chunk__60793 = null;\nvar count__60794 = (0);\nvar i__60795 = (0);\nwhile(true){\nif((i__60795 < count__60794)){\nvar handler = chunk__60793.cljs$core$IIndexed$_nth$arity$2(null,i__60795);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__61705 = seq__60792;\nvar G__61706 = chunk__60793;\nvar G__61707 = count__60794;\nvar G__61708 = (i__60795 + (1));\nseq__60792 = G__61705;\nchunk__60793 = G__61706;\ncount__60794 = G__61707;\ni__60795 = G__61708;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__60792);\nif(temp__5735__auto__){\nvar seq__60792__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__60792__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__60792__$1);\nvar G__61710 = cljs.core.chunk_rest(seq__60792__$1);\nvar G__61711 = c__4556__auto__;\nvar G__61712 = cljs.core.count(c__4556__auto__);\nvar G__61713 = (0);\nseq__60792 = G__61710;\nchunk__60793 = G__61711;\ncount__60794 = G__61712;\ni__60795 = G__61713;\ncontinue;\n} else {\nvar handler = cljs.core.first(seq__60792__$1);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__61715 = cljs.core.next(seq__60792__$1);\nvar G__61716 = null;\nvar G__61717 = (0);\nvar G__61718 = (0);\nseq__60792 = G__61715;\nchunk__60793 = G__61716;\ncount__60794 = G__61717;\ni__60795 = G__61718;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.accumulating_warning_handler = (function cljs$analyzer$accumulating_warning_handler(warn_acc){\nreturn (function (warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(warn_acc,cljs.core.conj,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [warning_type,env,extra], null));\n} else {\nreturn null;\n}\n});\n});\ncljs.analyzer.replay_accumulated_warnings = (function cljs$analyzer$replay_accumulated_warnings(warn_acc){\nreturn cljs.core.run_BANG_((function (p1__60796_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.warning,p1__60796_SHARP_);\n}),cljs.core.deref(warn_acc));\n});\ncljs.analyzer.error_data = (function cljs$analyzer$error_data(var_args){\nvar G__60798 = arguments.length;\nswitch (G__60798) {\ncase 2:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2 = (function (env,phase){\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,phase,null);\n}));\n\n(cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3 = (function (env,phase,symbol){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.source_info__GT_error_data(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358),phase], null),(cljs.core.truth_(symbol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"symbol\",\"clojure.error/symbol\",1544821994),symbol], null):null)], 0));\n}));\n\n(cljs.analyzer.error_data.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.compile_syntax_error = (function cljs$analyzer$compile_syntax_error(env,msg,symbol){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"compile-syntax-check\",\"compile-syntax-check\",-1865080468),symbol),(new Error(msg)));\n});\ncljs.analyzer.error = (function cljs$analyzer$error(var_args){\nvar G__60800 = arguments.length;\nswitch (G__60800) {\ncase 2:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2 = (function (env,msg){\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,msg,null);\n}));\n\n(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3 = (function (env,msg,cause){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.message(env,msg),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349)),cause);\n}));\n\n(cljs.analyzer.error.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.analysis_error_QMARK_ = (function cljs$analyzer$analysis_error_QMARK_(ex){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(ex)));\n});\ncljs.analyzer.has_error_data_QMARK_ = (function cljs$analyzer$has_error_data_QMARK_(ex){\nreturn cljs.core.contains_QMARK_(cljs.core.ex_data(ex),new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358));\n});\ncljs.analyzer.implicit_nses = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),\"null\",new cljs.core.Symbol(null,\"goog.string\",\"goog.string\",-2055533048,null),\"null\",new cljs.core.Symbol(null,\"goog\",\"goog\",-70603925,null),\"null\",new cljs.core.Symbol(null,\"goog.object\",\"goog.object\",678593132,null),\"null\",new cljs.core.Symbol(null,\"Math\",\"Math\",2033287572,null),\"null\",new cljs.core.Symbol(null,\"goog.array\",\"goog.array\",-671977860,null),\"null\"], null), null);\ncljs.analyzer.implicit_import_QMARK_ = (function cljs$analyzer$implicit_import_QMARK_(env,prefix,suffix){\nreturn cljs.core.contains_QMARK_(cljs.analyzer.implicit_nses,prefix);\n});\ncljs.analyzer.confirm_var_exist_warning = (function cljs$analyzer$confirm_var_exist_warning(env,prefix,suffix){\nreturn (function (env__$1,prefix__$1,suffix__$1){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),env__$1,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),prefix__$1,new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057),suffix__$1,new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205),(!(((function (){var G__60802 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1));\nvar G__60803 = env__$1;\nreturn (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(G__60802,G__60803) : cljs.analyzer.get_expander.call(null,G__60802,G__60803));\n})() == null)))], null));\n});\n});\n/**\n * Check if a JavaScript namespace has been loaded. JavaScript vars are\n *   not currently checked.\n */\ncljs.analyzer.loaded_js_ns_QMARK_ = (function cljs$analyzer$loaded_js_ns_QMARK_(env,prefix){\nif(cljs.core.truth_(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix))){\nreturn null;\n} else {\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env);\nreturn (((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))) || ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))));\n}\n});\ncljs.analyzer.internal_js_module_exists_QMARK_ = (function cljs$analyzer$internal_js_module_exists_QMARK_(js_module_index,module){\nreturn cljs.core.contains_QMARK_(cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((function (p__60804){\nvar vec__60805 = p__60804;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60805,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60805,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(v)], null);\n})),js_module_index),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module));\n});\ncljs.analyzer.js_module_exists_QMARK__STAR_ = cljs.core.memoize(cljs.analyzer.internal_js_module_exists_QMARK_);\ncljs.analyzer.js_module_exists_QMARK_ = (function cljs$analyzer$js_module_exists_QMARK_(module){\nreturn cljs.analyzer.js_module_exists_QMARK__STAR_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931)], null)),module);\n});\ncljs.analyzer.node_module_dep_QMARK_ = (function cljs$analyzer$node_module_dep_QMARK_(module){\ntry{return ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\")) && (cljs.core.boolean$(require.resolve(cljs.core.str.cljs$core$IFn$_invoke$arity$1(module)))));\n}catch (e60808){var _ = e60808;\nreturn false;\n}});\ncljs.analyzer.dep_has_global_exports_QMARK_ = (function cljs$analyzer$dep_has_global_exports_QMARK_(module){\nvar global_exports = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module),new cljs.core.Keyword(null,\"global-exports\",\"global-exports\",-1644865592)], null));\nreturn ((cljs.core.contains_QMARK_(global_exports,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(module))) || (cljs.core.contains_QMARK_(global_exports,cljs.core.name(module))));\n});\ncljs.analyzer.confirm_var_exists = (function cljs$analyzer$confirm_var_exists(var_args){\nvar G__60810 = arguments.length;\nswitch (G__60810) {\ncase 3:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3 = (function (env,prefix,suffix){\nvar warn = cljs.analyzer.confirm_var_exist_warning(env,prefix,suffix);\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,warn);\n}));\n\n(cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4 = (function (env,prefix,suffix,missing_fn){\nvar sufstr = cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix);\nvar suffix_str = (((((!((\"..\" === sufstr)))) && (/\\./.test(sufstr))))?cljs.core.first(clojure.string.split.cljs$core$IFn$_invoke$arity$2(sufstr,/\\./)):suffix);\nvar suffix__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix_str);\nif((((!(cljs.analyzer.implicit_import_QMARK_(env,prefix,suffix__$1)))) && ((!(cljs.analyzer.loaded_js_ns_QMARK_(env,prefix)))) && ((!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),prefix)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"unquote\",\"unquote\",-1004694737,null),suffix__$1)))))) && ((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),suffix__$1) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(prefix))))){\nreturn (missing_fn.cljs$core$IFn$_invoke$arity$3 ? missing_fn.cljs$core$IFn$_invoke$arity$3(env,prefix,suffix__$1) : missing_fn.call(null,env,prefix,suffix__$1));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.confirm_var_exists.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.confirm_var_exists_throw = (function cljs$analyzer$confirm_var_exists_throw(){\nreturn (function (env,prefix,suffix){\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,(function (env__$1,prefix__$1,suffix__$1){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,[\"Unable to resolve var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1),\" in this context\"].join(''));\n}));\n});\n});\ncljs.analyzer.resolve_ns_alias = (function cljs$analyzer$resolve_ns_alias(var_args){\nvar G__60812 = arguments.length;\nswitch (G__60812) {\ncase 2:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n}));\n\n(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n}));\n\n(cljs.analyzer.resolve_ns_alias.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.resolve_macro_ns_alias = (function cljs$analyzer$resolve_macro_ns_alias(var_args){\nvar G__60814 = arguments.length;\nswitch (G__60814) {\ncase 2:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n}));\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n}));\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$lang$maxFixedArity = 3);\n\n/**\n * Given env, an analysis environment, and ns-sym, a symbol identifying a\n * namespace, confirm that the namespace exists. Warn if not found.\n */\ncljs.analyzer.confirm_ns = (function cljs$analyzer$confirm_ns(env,ns_sym){\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns_sym)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.implicit_nses,ns_sym) == null)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),ns_sym) == null)) && ((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_sym) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(ns_sym))))){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),ns_sym,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),ns_sym], null));\n} else {\nreturn null;\n}\n});\n/**\n * Is sym visible from core in the current compilation namespace?\n */\ncljs.analyzer.core_name_QMARK_ = (function cljs$analyzer$core_name_QMARK_(env,sym){\nif((function (){var or__4126__auto__ = (!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)));\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nvar temp__5737__auto__ = (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(sym,env) : cljs.analyzer.get_expander.call(null,sym,env));\nif((temp__5737__auto__ == null)){\nreturn false;\n} else {\nvar mac = temp__5737__auto__;\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(mac));\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns.getName(),new cljs.core.Symbol(null,\"cljs.core$macros\",\"cljs.core$macros\",-2057787548,null));\n}\n}\n})()){\nreturn (!(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym)));\n} else {\nreturn false;\n}\n});\n/**\n * Is sym public?\n */\ncljs.analyzer.public_name_QMARK_ = (function cljs$analyzer$public_name_QMARK_(ns,sym){\nvar var_ast = (function (){var or__4126__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(ns),\"$macros\"].join('')),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\n}\n})();\nreturn (((!((var_ast == null)))) && (cljs.core.not((function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(var_ast);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"anonymous\",\"anonymous\",447897231).cljs$core$IFn$_invoke$arity$1(var_ast);\n}\n})())));\n});\ncljs.analyzer.js_tag_QMARK_ = (function cljs$analyzer$js_tag_QMARK_(x){\nreturn (((x instanceof cljs.core.Symbol)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.namespace(x))))));\n});\ncljs.analyzer.normalize_js_tag = (function cljs$analyzer$normalize_js_tag(x){\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)))){\nreturn cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(x),/\\./))),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null))], null));\n} else {\nreturn x;\n}\n});\n/**\n * Ensures that a type tag is a set.\n */\ncljs.analyzer.__GT_type_set = (function cljs$analyzer$__GT_type_set(t){\nif(cljs.analyzer.cljs_set_QMARK_(t)){\nreturn t;\n} else {\nreturn cljs.core.PersistentHashSet.createAsIfByAssoc([t]);\n}\n});\ncljs.analyzer.canonicalize_type = (function cljs$analyzer$canonicalize_type(t){\n\nif((t instanceof cljs.core.Symbol)){\nreturn t;\n} else {\nif(cljs.core.empty_QMARK_(t)){\nreturn null;\n} else {\nif(((1) === cljs.core.count(t))){\nreturn cljs.core.first(t);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null))){\nvar res = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(t,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null));\nif(((1) === cljs.core.count(res))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nreturn res;\n}\n} else {\nreturn t;\n\n}\n}\n}\n}\n}\n});\n/**\n * Produces a union of types.\n */\ncljs.analyzer.add_types = (function cljs$analyzer$add_types(var_args){\nvar G__60821 = arguments.length;\nswitch (G__60821) {\ncase 0:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4757__auto__ = [];\nvar len__4736__auto___61764 = arguments.length;\nvar i__4737__auto___61765 = (0);\nwhile(true){\nif((i__4737__auto___61765 < len__4736__auto___61764)){\nargs_arr__4757__auto__.push((arguments[i__4737__auto___61765]));\n\nvar G__61766 = (i__4737__auto___61765 + (1));\ni__4737__auto___61765 = G__61766;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4758__auto__ = (new cljs.core.IndexedSeq(args_arr__4757__auto__.slice((2)),(0),null));\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4758__auto__);\n\n}\n});\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1 = (function (t1){\nreturn t1;\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2 = (function (t1,t2){\nif((((t1 == null)) || ((t2 == null)))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.canonicalize_type(clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.__GT_type_set(t1),cljs.analyzer.__GT_type_set(t2)));\n}\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic = (function (t1,t2,ts){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.add_types,cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(t1,t2),ts);\n}));\n\n/** @this {Function} */\n(cljs.analyzer.add_types.cljs$lang$applyTo = (function (seq60818){\nvar G__60819 = cljs.core.first(seq60818);\nvar seq60818__$1 = cljs.core.next(seq60818);\nvar G__60820 = cljs.core.first(seq60818__$1);\nvar seq60818__$2 = cljs.core.next(seq60818__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__60819,G__60820,seq60818__$2);\n}));\n\n(cljs.analyzer.add_types.cljs$lang$maxFixedArity = (2));\n\ncljs.analyzer.alias__GT_type = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"Array\",\"Array\",-423496279,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"Boolean\",\"Boolean\",1661141587,null),new cljs.core.Symbol(null,\"symbol\",\"symbol\",601958831,null),new cljs.core.Symbol(null,\"Symbol\",\"Symbol\",716452869,null)], null);\ncljs.analyzer.has_extern_QMARK__STAR_ = (function cljs$analyzer$has_extern_QMARK__STAR_(var_args){\nvar G__60823 = arguments.length;\nswitch (G__60823) {\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar pre__$1 = (function (){var temp__5737__auto__ = cljs.core.find(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null)),cljs.core.first(pre));\nif((temp__5737__auto__ == null)){\nreturn pre;\n} else {\nvar me = temp__5737__auto__;\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.first(me)));\nif((temp__5737__auto____$1 == null)){\nreturn pre;\n} else {\nvar tag = temp__5737__auto____$1;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag,new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre));\n}\n}\n})();\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(pre__$1,externs,externs);\n}));\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3 = (function (pre,externs,top){\nwhile(true){\nif(cljs.core.empty_QMARK_(pre)){\nreturn true;\n} else {\nvar x = cljs.core.first(pre);\nvar me = cljs.core.find(externs,x);\nif(cljs.core.not(me)){\nreturn false;\n} else {\nvar vec__60824 = me;\nvar x_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60824,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60824,(1),null);\nvar xmeta = cljs.core.meta(x_SINGLEQUOTE_);\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(xmeta)))?new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(xmeta):false))){\nvar or__4126__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.next(pre),externs_SINGLEQUOTE_,top);\n}\n} else {\nvar G__61799 = cljs.core.next(pre);\nvar G__61800 = externs_SINGLEQUOTE_;\nvar G__61801 = top;\npre = G__61799;\nexterns = G__61800;\ntop = G__61801;\ncontinue;\n}\n\n}\n\n}\nbreak;\n}\n}));\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.has_extern_QMARK_ = (function cljs$analyzer$has_extern_QMARK_(var_args){\nvar G__60828 = arguments.length;\nswitch (G__60828) {\ncase 1:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2(pre,cljs.analyzer.get_externs());\n}));\n\n(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar or__4126__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2(pre,externs);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(pre)))?(function (){var x = cljs.core.first(pre);\nvar or__4126__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),x));\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null)], null),x));\n}\n})():null);\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(pre)),\"cljs$\");\n}\n}\n}));\n\n(cljs.analyzer.has_extern_QMARK_.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.js_tag = (function cljs$analyzer$js_tag(var_args){\nvar G__60830 = arguments.length;\nswitch (G__60830) {\ncase 1:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2 = (function (pre,tag_type){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3(pre,tag_type,cljs.analyzer.get_externs());\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3 = (function (pre,tag_type,externs){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(pre,tag_type,externs,externs);\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4 = (function (pre,tag_type,externs,top){\nvar temp__5735__auto__ = cljs.core.find(externs,cljs.core.first(pre));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar vec__60831 = temp__5735__auto__;\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60831,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60831,(1),null);\nvar me = vec__60831;\nvar tag = (function (){var G__60834 = cljs.core.meta(p);\nreturn (tag_type.cljs$core$IFn$_invoke$arity$1 ? tag_type.cljs$core$IFn$_invoke$arity$1(G__60834) : tag_type.call(null,G__60834));\n})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(pre),(1))){\nif(cljs.core.truth_(tag)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2(tag,tag) : cljs.analyzer.alias__GT_type.call(null,tag,tag))));\n} else {\nreturn null;\n}\n} else {\nvar or__4126__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.next(pre),tag_type,externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),tag_type,cljs.core.get.cljs$core$IFn$_invoke$arity$2(top,tag),top);\n}\n}\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.js_tag.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.dotted_symbol_QMARK_ = (function cljs$analyzer$dotted_symbol_QMARK_(sym){\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nreturn ((goog.string.contains(s,\".\")) && ((!(goog.string.contains(s,\"..\")))));\n});\ncljs.analyzer.munge_node_lib = (function cljs$analyzer$munge_node_lib(name){\nreturn [\"node$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\ncljs.analyzer.munge_global_export = (function cljs$analyzer$munge_global_export(name){\nreturn [\"global$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\n/**\n * Takes a namespace and an unqualified symbol and potentially returns a new\n *   symbol to be used in lieu of the original.\n */\ncljs.analyzer.resolve_alias = (function cljs$analyzer$resolve_alias(ns,sym){\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns))?(function (){var and__4115__auto__ = (function (){var fexpr__60838 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),\"null\",new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),\"null\"], null), null);\nreturn (fexpr__60838.cljs$core$IFn$_invoke$arity$1 ? fexpr__60838.cljs$core$IFn$_invoke$arity$1(sym) : fexpr__60838.call(null,sym));\n})();\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.analyzer.checked_arrays();\n} else {\nreturn and__4115__auto__;\n}\n})():false))){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget\",\"checked-aget\",950823006,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset\",\"checked-aset\",1556136760,null)], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget'\",\"checked-aget'\",212330530,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset'\",\"checked-aset'\",-510930777,null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.checked_arrays(),sym], null));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.ns__GT_module_type = (function cljs$analyzer$ns__GT_module_type(ns){\nif(cljs.core.truth_(cljs.analyzer.js_module_exists_QMARK_(ns))){\nreturn new cljs.core.Keyword(null,\"js\",\"js\",1768080579);\n} else {\nif(cljs.analyzer.node_module_dep_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"node\",\"node\",581201198);\n} else {\nif(cljs.analyzer.dep_has_global_exports_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"global\",\"global\",93595047);\n} else {\nreturn null;\n}\n}\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.resolve_STAR_ !== 'undefined')){\n} else {\ncljs.analyzer.resolve_STAR_ = (function (){var method_table__4619__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4620__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4621__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4622__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4623__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__60839 = cljs.core.get_global_hierarchy;\nreturn (fexpr__60839.cljs$core$IFn$_invoke$arity$0 ? fexpr__60839.cljs$core$IFn$_invoke$arity$0() : fexpr__60839.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"resolve*\"),(function (env,sym,full_ns,current_ns){\nreturn cljs.analyzer.ns__GT_module_type(full_ns);\n}),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4623__auto__,method_table__4619__auto__,prefer_table__4620__auto__,method_cache__4621__auto__,cached_hierarchy__4622__auto__));\n})();\n}\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),(function (env,sym,full_ns,current_ns){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null);\n}));\ncljs.analyzer.extern_pre = (function cljs$analyzer$extern_pre(sym,current_ns){\nvar pre = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null),cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./))));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n\nreturn pre;\n});\ncljs.analyzer.node_like_QMARK_ = (function cljs$analyzer$node_like_QMARK_(var_args){\nvar G__60841 = arguments.length;\nswitch (G__60841) {\ncase 0:\nreturn cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.compiler_options());\n}));\n\n(cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (opts){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"nodejs\",\"nodejs\",321212524),new cljs.core.Keyword(null,\"target\",\"target\",253001721).cljs$core$IFn$_invoke$arity$1(opts))) && (new cljs.core.Keyword(null,\"nodejs-rt\",\"nodejs-rt\",-512437071).cljs$core$IFn$_invoke$arity$1(opts) === false));\n}));\n\n(cljs.analyzer.node_like_QMARK_.cljs$lang$maxFixedArity = 1);\n\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"node\",\"node\",581201198),(function (env,sym,full_ns,current_ns){\nif(cljs.core.truth_(cljs.analyzer.node_like_QMARK_.cljs$core$IFn$_invoke$arity$0())){\nvar pre = cljs.analyzer.extern_pre(sym,current_ns);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_node_lib(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null)),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_node_lib(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n}\n}));\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"global\",\"global\",93595047),(function (env,sym,full_ns,current_ns){\nvar pre = cljs.analyzer.extern_pre(sym,current_ns);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_global_export(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null)),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n}));\n/**\n * Specially-treated symbols for which we don't trigger :private-var-access warnings.\n */\ncljs.analyzer.private_var_access_exceptions = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),\"null\"], null), null);\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (env,sym,full_ns,current_ns){\nvar sym_ast = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),full_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\nvar sym_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym));\nif(cljs.core.truth_(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns))?(function (){var and__4115__auto__ = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(sym_ast);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn ((cljs.core.not(cljs.analyzer._STAR_private_var_access_nowarn_STAR_)) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.private_var_access_exceptions,sym_name)))));\n} else {\nreturn and__4115__auto__;\n}\n})():false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_name], null));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym_ast,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym_name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null)], 0));\n}));\ncljs.analyzer.required_QMARK_ = (function cljs$analyzer$required_QMARK_(ns,env){\nreturn ((cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)))),ns)) || (cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)))),ns)));\n});\n/**\n * Returns true if ns is a required namespace and a JavaScript module that\n * might be invokeable as a function.\n */\ncljs.analyzer.invokeable_ns_QMARK_ = (function cljs$analyzer$invokeable_ns_QMARK_(ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nif(cljs.analyzer.required_QMARK_(ns__$1,env)){\nvar or__4126__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn ((cljs.analyzer.node_module_dep_QMARK_(ns__$1)) || (cljs.analyzer.dep_has_global_exports_QMARK_(ns__$1)));\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.resolve_invokeable_ns = (function cljs$analyzer$resolve_invokeable_ns(ns,current_ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nvar module_type = cljs.analyzer.ns__GT_module_type(ns__$1);\nvar G__60842 = module_type;\nvar G__60842__$1 = (((G__60842 instanceof cljs.core.Keyword))?G__60842.fqn:null);\nswitch (G__60842__$1) {\ncase \"js\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1((function (){var or__4126__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1);\n}\n})()),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null);\n\nbreak;\ncase \"node\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_node_lib(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ncase \"global\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_global_export(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60842__$1)].join('')));\n\n}\n});\ncljs.analyzer.handle_symbol_local = (function cljs$analyzer$handle_symbol_local(sym,lb){\nif((lb instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null);\n} else {\nreturn lb;\n}\n});\n/**\n * Resolve a var. Accepts a side-effecting confirm fn for producing\n * warnings about unresolved vars.\n */\ncljs.analyzer.resolve_var = (function cljs$analyzer$resolve_var(var_args){\nvar G__60845 = arguments.length;\nswitch (G__60845) {\ncase 2:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2 = (function (env,sym){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,null);\n}));\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3 = (function (env,sym,confirm){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4(env,sym,confirm,true);\n}));\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4 = (function (env,sym,confirm,default_QMARK_){\nwhile(true){\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nif((\"js\" === cljs.core.namespace(sym))){\nvar symn = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar shadowed_by_local = cljs.analyzer.handle_symbol_local(symn,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,symn));\nif((!((shadowed_by_local == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(shadowed_by_local,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nvar pre = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./)));\nif(((cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))) && (cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta((function (){var or__4126__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1(pre);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null))], null),(function (){var temp__5735__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ret_tag = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358),true,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag], null);\n} else {\nreturn null;\n}\n})()], 0));\n\n}\n} else {\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nvar lb = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,sym));\nvar current_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nif((!((lb == null)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lb,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns = cljs.core.namespace(sym);\nvar ns__$1 = (((\"clojure.core\" === ns))?\"cljs.core\":ns);\nvar full_ns = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,ns__$1,(function (){var or__4126__auto__ = (function (){var and__4115__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\n} else {\nreturn and__4115__auto__;\n}\n})();\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(ns__$1);\n}\n})());\nif((!((confirm == null)))){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns)){\ncljs.analyzer.confirm_ns(env,full_ns);\n} else {\n}\n\nvar G__60846_61883 = env;\nvar G__60847_61884 = full_ns;\nvar G__60848_61885 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__60846_61883,G__60847_61884,G__60848_61885) : confirm.call(null,G__60846_61883,G__60847_61884,G__60848_61885));\n} else {\n}\n\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns);\n} else {\nif(cljs.analyzer.dotted_symbol_QMARK_(sym)){\nvar idx = s.indexOf(\".\");\nvar prefix = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx));\nvar suffix = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1)));\nvar temp__5733__auto__ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$4(env,prefix,null,false);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar resolved = temp__5733__auto__;\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(resolved,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),((function (env,sym,confirm,default_QMARK_,resolved,temp__5733__auto__,idx,prefix,suffix,s,lb,current_ns,locals){\nreturn (function (p1__60843_SHARP_){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__60843_SHARP_),\".\",suffix].join(''));\n});})(env,sym,confirm,default_QMARK_,resolved,temp__5733__auto__,idx,prefix,suffix,s,lb,current_ns,locals))\n);\n} else {\nvar idx__$1 = s.lastIndexOf(\".\");\nvar pre = cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx__$1);\nvar suf = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx__$1 + (1)));\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(pre,suf),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(pre)], null);\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym) == null)))){\nvar full_ns = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym);\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns);\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym);\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym__$1,full_ns,current_ns);\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym) == null)))){\nvar G__61907 = env;\nvar G__61908 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym);\nvar G__61909 = confirm;\nvar G__61910 = default_QMARK_;\nenv = G__61907;\nsym = G__61908;\nconfirm = G__61909;\ndefault_QMARK_ = G__61910;\ncontinue;\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)))){\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n} else {\nif(cljs.analyzer.core_name_QMARK_(env,sym)){\nif((!((confirm == null)))){\nvar G__60849_61920 = env;\nvar G__60850_61921 = new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null);\nvar G__60851_61922 = sym;\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__60849_61920,G__60850_61921,G__60851_61922) : confirm.call(null,G__60849_61920,G__60850_61921,G__60851_61922));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null)], 0));\n} else {\nif(cljs.core.truth_(cljs.analyzer.invokeable_ns_QMARK_(s,env))){\nreturn cljs.analyzer.resolve_invokeable_ns(s,current_ns,env);\n} else {\nif(cljs.core.truth_(default_QMARK_)){\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n} else {\nreturn null;\n}\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(cljs.analyzer.resolve_var.cljs$lang$maxFixedArity = 4);\n\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n * Emits a warning if no such var exists.\n */\ncljs.analyzer.resolve_existing_var = (function cljs$analyzer$resolve_existing_var(env,sym){\nif(cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,cljs.analyzer.confirm_var_exists);\n} else {\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,sym);\n}\n});\n/**\n * Given env, an analysis environment env, and names, a list of symbols, confirm\n * that all correspond to declared dynamic vars.\n */\ncljs.analyzer.confirm_bindings = (function cljs$analyzer$confirm_bindings(env,names){\nvar seq__60852 = cljs.core.seq(names);\nvar chunk__60853 = null;\nvar count__60854 = (0);\nvar i__60855 = (0);\nwhile(true){\nif((i__60855 < count__60854)){\nvar name = chunk__60853.cljs$core$IIndexed$_nth$arity$2(null,i__60855);\nvar env_61931__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_61932 = cljs.analyzer.resolve_existing_var(env_61931__$1,name);\nif(cljs.core.truth_((function (){var and__4115__auto__ = ev_61932;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_61932));\n} else {\nreturn and__4115__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_61931__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_61932,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_61932)], null));\n} else {\n}\n\n\nvar G__61934 = seq__60852;\nvar G__61935 = chunk__60853;\nvar G__61936 = count__60854;\nvar G__61937 = (i__60855 + (1));\nseq__60852 = G__61934;\nchunk__60853 = G__61935;\ncount__60854 = G__61936;\ni__60855 = G__61937;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__60852);\nif(temp__5735__auto__){\nvar seq__60852__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__60852__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__60852__$1);\nvar G__61938 = cljs.core.chunk_rest(seq__60852__$1);\nvar G__61939 = c__4556__auto__;\nvar G__61940 = cljs.core.count(c__4556__auto__);\nvar G__61941 = (0);\nseq__60852 = G__61938;\nchunk__60853 = G__61939;\ncount__60854 = G__61940;\ni__60855 = G__61941;\ncontinue;\n} else {\nvar name = cljs.core.first(seq__60852__$1);\nvar env_61943__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_61944 = cljs.analyzer.resolve_existing_var(env_61943__$1,name);\nif(cljs.core.truth_((function (){var and__4115__auto__ = ev_61944;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_61944));\n} else {\nreturn and__4115__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_61943__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_61944,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_61944)], null));\n} else {\n}\n\n\nvar G__61945 = cljs.core.next(seq__60852__$1);\nvar G__61946 = null;\nvar G__61947 = (0);\nvar G__61948 = (0);\nseq__60852 = G__61945;\nchunk__60853 = G__61946;\ncount__60854 = G__61947;\ni__60855 = G__61948;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve a macro.\n */\ncljs.analyzer.resolve_macro_var = (function cljs$analyzer$resolve_macro_var(env,sym){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar namespaces = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927));\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns__$1 = cljs.core.namespace(sym);\nvar ns__$2 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure.core\",ns__$1))?\"cljs.core\":ns__$1);\nvar full_ns = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$2);\nvar full_ns__$1 = (((!(clojure.string.ends_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"].join('')):full_ns);\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null)) == null)))){\nvar full_ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null)) == null)))){\nvar qualified_symbol = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null));\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym__$1], null));\n} else {\nvar ns__$1 = (((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null)) == null))))?ns:((cljs.analyzer.core_name_QMARK_(env,sym))?cljs.analyzer.CLJS_CORE_MACROS_SYM:null));\nif((!((ns__$1 == null)))){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null));\n} else {\nreturn null;\n}\n\n}\n}\n}\n});\n\n\ncljs.analyzer.specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\",new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),\"null\",new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),\"null\",new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),\"null\",new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),\"null\",new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),\"null\",new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),\"null\",new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),\"null\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),\"null\",new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),\"null\",new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),\"null\",new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),\"null\",new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),\"null\",new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),\"null\",new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),\"null\",new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),\"null\",new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),\"null\",new cljs.core.Symbol(null,\".\",\".\",1975675962,null),\"null\",new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),\"null\",new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),\"null\",new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),\"null\",new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),\"null\"], null), null);\ncljs.analyzer._STAR_recur_frames_STAR_ = null;\ncljs.analyzer._STAR_loop_lets_STAR_ = cljs.core.List.EMPTY;\ncljs.analyzer._STAR_allow_redef_STAR_ = false;\ncljs.analyzer._STAR_allow_ns_STAR_ = true;\ncljs.analyzer.analyze_keyword = (function cljs$analyzer$analyze_keyword(env,sym){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null)], null);\n});\ncljs.analyzer.get_tag = (function cljs$analyzer$get_tag(e){\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e)));\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5737__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e));\n} else {\nvar tag = temp__5737__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.find_matching_method = (function cljs$analyzer$find_matching_method(f,params){\nvar methods$ = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(f);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(f));\n}\n})();\nvar c = cljs.core.count(params);\nreturn cljs.core.some((function (m){\nvar and__4115__auto__ = (function (){var or__4126__auto__ = (new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869).cljs$core$IFn$_invoke$arity$1(m) === c);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(m);\n}\n})();\nif(cljs.core.truth_(and__4115__auto__)){\nreturn m;\n} else {\nreturn and__4115__auto__;\n}\n}),methods$);\n});\ncljs.analyzer.type_QMARK_ = (function cljs$analyzer$type_QMARK_(env,t){\nif((((!((t == null)))) && ((t instanceof cljs.core.Symbol)))){\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,t);\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(var$));\nif((temp__5737__auto____$1 == null)){\nvar temp__5737__auto____$2 = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5737__auto____$2 == null)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"PersistentHashMap\",\"cljs.core/PersistentHashMap\",-454120575,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"List\",\"cljs.core/List\",1708954352,null),\"null\"], null), null),t);\n} else {\nvar proto = temp__5737__auto____$2;\nreturn proto;\n}\n} else {\nvar type = temp__5737__auto____$1;\nreturn type;\n}\n} else {\nvar type = temp__5737__auto__;\nreturn type;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.NOT_NATIVE = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"clj\",\"clj\",980036099,null),\"null\",new cljs.core.Symbol(null,\"not-native\",\"not-native\",-236392494,null),\"null\"], null), null);\ncljs.analyzer.BOOLEAN_OR_SEQ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null),\"null\",new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),\"null\"], null), null);\ncljs.analyzer.unwrap_quote = (function cljs$analyzer$unwrap_quote(p__60856){\nvar map__60857 = p__60856;\nvar map__60857__$1 = (((((!((map__60857 == null))))?(((((map__60857.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60857.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60857):map__60857);\nvar expr = map__60857__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60857__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif(cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245))){\nreturn new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(expr);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_if = (function cljs$analyzer$infer_if(env,e){\nvar map__60859 = cljs.analyzer.unwrap_quote(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(e));\nvar map__60859__$1 = (((((!((map__60859 == null))))?(((((map__60859.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60859.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60859):map__60859);\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60859__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60859__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar then_tag = (function (){var G__60861 = env;\nvar G__60862 = new cljs.core.Keyword(null,\"then\",\"then\",460598070).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60861,G__60862) : cljs.analyzer.infer_tag.call(null,G__60861,G__60862));\n})();\nif(((cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"const\",\"const\",1709929842))) && ((!((form == null)))) && ((!(form === false))))){\nreturn then_tag;\n} else {\nvar else_tag = (function (){var G__60863 = env;\nvar G__60864 = new cljs.core.Keyword(null,\"else\",\"else\",-1508377146).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60863,G__60864) : cljs.analyzer.infer_tag.call(null,G__60863,G__60864));\n})();\nif(((cljs.core.symbol_identical_QMARK_(then_tag,else_tag)) || (cljs.core.symbol_identical_QMARK_(else_tag,cljs.analyzer.IGNORE_SYM)))){\nreturn then_tag;\n} else {\nif(cljs.core.symbol_identical_QMARK_(then_tag,cljs.analyzer.IGNORE_SYM)){\nreturn else_tag;\n} else {\nif((((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE,then_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,then_tag)))) && ((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE,else_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,else_tag)))))){\nreturn new cljs.core.Symbol(null,\"clj\",\"clj\",980036099,null);\n} else {\nif((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ,then_tag) == null)))) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ,else_tag) == null)))))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nvar then_tag__$1 = ((cljs.analyzer.cljs_set_QMARK_(then_tag))?then_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([then_tag]));\nvar else_tag__$1 = ((cljs.analyzer.cljs_set_QMARK_(else_tag))?else_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([else_tag]));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(then_tag__$1,else_tag__$1);\n}\n\n}\n}\n}\n}\n});\ncljs.analyzer.infer_invoke = (function cljs$analyzer$infer_invoke(env,p__60865){\nvar map__60866 = p__60865;\nvar map__60866__$1 = (((((!((map__60866 == null))))?(((((map__60866.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60866.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60866):map__60866);\nvar e = map__60866__$1;\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60866__$1,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60866__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar me = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.find_matching_method(f,args),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839));\nvar temp__5737__auto__ = (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,me) : cljs.analyzer.infer_tag.call(null,env,me));\nif((temp__5737__auto__ == null)){\nvar map__60868 = f;\nvar map__60868__$1 = (((((!((map__60868 == null))))?(((((map__60868.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60868.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60868):map__60868);\nvar info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60868__$1,new cljs.core.Keyword(null,\"info\",\"info\",-317069002));\nvar temp__5737__auto____$1 = ((((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(info) === true) || (new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(info) === true)))?new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(info):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)))?new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null):null));\nif((temp__5737__auto____$1 == null)){\nreturn cljs.analyzer.ANY_SYM;\n} else {\nvar ret_tag = temp__5737__auto____$1;\nreturn ret_tag;\n}\n} else {\nvar ret_tag = temp__5737__auto__;\nreturn ret_tag;\n}\n});\n/**\n * Given env, an analysis environment, and e, an AST node, return the inferred\n * type of the node\n */\ncljs.analyzer.infer_tag = (function cljs$analyzer$infer_tag(env,e){\nvar temp__5737__auto__ = cljs.analyzer.get_tag(e);\nif((temp__5737__auto__ == null)){\nvar G__60870 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(e);\nvar G__60870__$1 = (((G__60870 instanceof cljs.core.Keyword))?G__60870.fqn:null);\nswitch (G__60870__$1) {\ncase \"recur\":\nreturn cljs.analyzer.IGNORE_SYM;\n\nbreak;\ncase \"throw\":\nreturn cljs.analyzer.IGNORE_SYM;\n\nbreak;\ncase \"let\":\nvar G__60871 = env;\nvar G__60872 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60871,G__60872) : cljs.analyzer.infer_tag.call(null,G__60871,G__60872));\n\nbreak;\ncase \"loop\":\nvar G__60873 = env;\nvar G__60874 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60873,G__60874) : cljs.analyzer.infer_tag.call(null,G__60873,G__60874));\n\nbreak;\ncase \"do\":\nvar G__60875 = env;\nvar G__60876 = new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60875,G__60876) : cljs.analyzer.infer_tag.call(null,G__60875,G__60876));\n\nbreak;\ncase \"fn-method\":\nvar G__60877 = env;\nvar G__60878 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60877,G__60878) : cljs.analyzer.infer_tag.call(null,G__60877,G__60878));\n\nbreak;\ncase \"def\":\nvar G__60879 = env;\nvar G__60880 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60879,G__60880) : cljs.analyzer.infer_tag.call(null,G__60879,G__60880));\n\nbreak;\ncase \"invoke\":\nreturn cljs.analyzer.infer_invoke(env,e);\n\nbreak;\ncase \"if\":\nreturn cljs.analyzer.infer_if(env,e);\n\nbreak;\ncase \"const\":\nvar G__60881 = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,G__60881)){\nreturn cljs.analyzer.BOOLEAN_SYM;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(false,G__60881)){\nreturn cljs.analyzer.BOOLEAN_SYM;\n} else {\nreturn cljs.analyzer.ANY_SYM;\n\n}\n}\n\nbreak;\ncase \"quote\":\nvar G__60882 = env;\nvar G__60883 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60882,G__60883) : cljs.analyzer.infer_tag.call(null,G__60882,G__60883));\n\nbreak;\ncase \"var\":\ncase \"local\":\ncase \"js-var\":\ncase \"binding\":\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5737__auto____$1 == null)){\nvar G__60884 = env;\nvar G__60885 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60884,G__60885) : cljs.analyzer.infer_tag.call(null,G__60884,G__60885));\n} else {\nvar init = temp__5737__auto____$1;\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.infer_tag.call(null,env,init));\n}\n\nbreak;\ncase \"host-field\":\ncase \"host-call\":\nreturn cljs.analyzer.ANY_SYM;\n\nbreak;\ncase \"js\":\nreturn cljs.analyzer.ANY_SYM;\n\nbreak;\ndefault:\nreturn null;\n\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.parse !== 'undefined')){\n} else {\ncljs.analyzer.parse = (function (){var method_table__4619__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4620__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4621__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4622__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4623__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__60886 = cljs.core.get_global_hierarchy;\nreturn (fexpr__60886.cljs$core$IFn$_invoke$arity$0 ? fexpr__60886.cljs$core$IFn$_invoke$arity$0() : fexpr__60886.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"parse\"),(function() { \nvar G__62010__delegate = function (op,rest){\nreturn op;\n};\nvar G__62010 = function (op,var_args){\nvar rest = null;\nif (arguments.length > 1) {\nvar G__62011__i = 0, G__62011__a = new Array(arguments.length -  1);\nwhile (G__62011__i < G__62011__a.length) {G__62011__a[G__62011__i] = arguments[G__62011__i + 1]; ++G__62011__i;}\n  rest = new cljs.core.IndexedSeq(G__62011__a,0,null);\n} \nreturn G__62010__delegate.call(this,op,rest);};\nG__62010.cljs$lang$maxFixedArity = 1;\nG__62010.cljs$lang$applyTo = (function (arglist__62014){\nvar op = cljs.core.first(arglist__62014);\nvar rest = cljs.core.rest(arglist__62014);\nreturn G__62010__delegate(op,rest);\n});\nG__62010.cljs$core$IFn$_invoke$arity$variadic = G__62010__delegate;\nreturn G__62010;\n})()\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4623__auto__,method_table__4619__auto__,prefer_table__4620__auto__,method_cache__4621__auto__,cached_hierarchy__4622__auto__));\n})();\n}\ncljs.analyzer.var_meta = (function cljs$analyzer$var_meta(var_args){\nvar G__60890 = arguments.length;\nswitch (G__60890) {\ncase 1:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1 = (function (var$){\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,null);\n}));\n\n(cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2 = (function (var$,expr_env){\nvar sym = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$);\nvar ks = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095)], null);\nvar m = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var user_meta = new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(var$);\nvar uks = cljs.core.keys(user_meta);\nreturn cljs.core.zipmap(uks,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60887_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(user_meta,p1__60887_SHARP_),null,(1),null)),(2),null));\n}),uks));\n})(),cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.zipmap(ks,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60888_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(var$,p1__60888_SHARP_),null,(1),null)),(2),null));\n}),ks)),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null))))),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"test\",\"test\",577538877),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",120293186,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-cljs$lang$test\",\".-cljs$lang$test\",718963148,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null))))),null,(1),null))], 0)))),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),(function (){var arglists = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(var$);\nvar arglists_SINGLEQUOTE_ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(arglists)))?cljs.core.second(arglists):arglists);\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta,arglists_SINGLEQUOTE_,new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)),(2),null));\n})()], 0))], 0));\nif(cljs.core.truth_(expr_env)){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,m) : cljs.analyzer.analyze.call(null,expr_env,m));\n} else {\nreturn m;\n}\n}));\n\n(cljs.analyzer.var_meta.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.var_ast = (function cljs$analyzer$var_ast(env,sym){\nvar _STAR_private_var_access_nowarn_STAR__orig_val__60891 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__60892 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__60892);\n\ntry{var env__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env__$1,sym,cljs.analyzer.confirm_var_exists_throw());\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar temp__5739__auto__ = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar var_ns = temp__5739__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym)),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),(function (){var G__60893 = expr_env;\nvar G__60894 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(var_ns),cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60893,G__60894) : cljs.analyzer.analyze.call(null,G__60893,G__60894));\n})(),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,expr_env)], null);\n}\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__60891);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),(function (op,env,p__60895,_,___$1){\nvar vec__60896 = p__60895;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60896,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60896,(1),null);\nvar form = vec__60896;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to var\");\n} else {\n}\n\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Argument to var must be symbol\");\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"the-var\",\"the-var\",1428415613),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964)], null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),cljs.analyzer.var_ast(env,sym)], 0));\n}));\ncljs.analyzer.predicate__GT_tag = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(\"cljs.core\",\"array?\",\"cljs.core/array?\",-1655912448,null),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),new cljs.core.Symbol(\"cljs.core\",\"char?\",\"cljs.core/char?\",416405281,null),new cljs.core.Symbol(\"cljs.core\",\"sequential?\",\"cljs.core/sequential?\",1777854658,null),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-symbol?\",\"cljs.core/qualified-symbol?\",1570873476,null),new cljs.core.Symbol(\"cljs.core\",\"var?\",\"cljs.core/var?\",1711182854,null),new cljs.core.Symbol(\"cljs.core\",\"map-entry?\",\"cljs.core/map-entry?\",465406728,null),new cljs.core.Symbol(\"cljs.core\",\"double?\",\"cljs.core/double?\",1757455529,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-ident?\",\"cljs.core/qualified-ident?\",-1863492566,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null),new cljs.core.Symbol(\"cljs.core\",\"inst?\",\"cljs.core/inst?\",1216133710,null),new cljs.core.Symbol(\"cljs.core\",\"float?\",\"cljs.core/float?\",-941017745,null),new cljs.core.Symbol(\"cljs.core\",\"true?\",\"cljs.core/true?\",-77973136,null),new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),new cljs.core.Symbol(\"cljs.core\",\"volatile?\",\"cljs.core/volatile?\",-1122186415,null),new cljs.core.Symbol(\"cljs.core\",\"integer?\",\"cljs.core/integer?\",1710697810,null),new cljs.core.Symbol(\"cljs.core\",\"infinite?\",\"cljs.core/infinite?\",-1069503726,null),new cljs.core.Symbol(\"cljs.core\",\"undefined?\",\"cljs.core/undefined?\",-1206515693,null),new cljs.core.Symbol(\"cljs.core\",\"uuid?\",\"cljs.core/uuid?\",-15131116,null),new cljs.core.Symbol(\"cljs.core\",\"record?\",\"cljs.core/record?\",1307655860,null),new cljs.core.Symbol(\"cljs.core\",\"reduced?\",\"cljs.core/reduced?\",-1192491371,null),new cljs.core.Symbol(\"cljs.core\",\"tagged-literal?\",\"cljs.core/tagged-literal?\",-1159666987,null),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Symbol(\"cljs.core\",\"zero?\",\"cljs.core/zero?\",-341242858,null),new cljs.core.Symbol(\"cljs.core\",\"false?\",\"cljs.core/false?\",-1660815306,null),new cljs.core.Symbol(\"cljs.core\",\"list?\",\"cljs.core/list?\",-684796618,null),new cljs.core.Symbol(\"cljs.core\",\"simple-ident?\",\"cljs.core/simple-ident?\",1674885558,null),new cljs.core.Symbol(\"cljs.core\",\"simple-keyword?\",\"cljs.core/simple-keyword?\",39474330,null),new cljs.core.Symbol(\"cljs.core\",\"seqable?\",\"cljs.core/seqable?\",-745394886,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"delay?\",\"cljs.core/delay?\",2099859324,null),new cljs.core.Symbol(\"cljs.core\",\"regexp?\",\"cljs.core/regexp?\",-348418979,null),new cljs.core.Symbol(\"cljs.core\",\"ident?\",\"cljs.core/ident?\",1567441535,null),new cljs.core.Symbol(\"cljs.core\",\"chunked-seq?\",\"cljs.core/chunked-seq?\",-712922369,null)],[new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"cljs.core\",\"ISequential\",\"cljs.core/ISequential\",-950981796,null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(\"cljs.core\",\"Var\",\"cljs.core/Var\",2071014443,null),new cljs.core.Symbol(\"cljs.core\",\"IMapEntry\",\"cljs.core/IMapEntry\",535941300,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Inst\",\"cljs.core/Inst\",959205835,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"cljs.core\",\"Volatile\",\"cljs.core/Volatile\",-1098692185,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(\"cljs.core\",\"IUUID\",\"cljs.core/IUUID\",-1606521379,null),new cljs.core.Symbol(\"cljs.core\",\"IRecord\",\"cljs.core/IRecord\",635852000,null),new cljs.core.Symbol(\"cljs.core\",\"Reduced\",\"cljs.core/Reduced\",971663396,null),new cljs.core.Symbol(\"cljs.core\",\"ITaggedLiteral\",\"cljs.core/ITaggedLiteral\",-1236965094,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(\"cljs.core\",\"ISeqable\",\"cljs.core/ISeqable\",137437203,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null),new cljs.core.Symbol(\"cljs.core\",\"Delay\",\"cljs.core/Delay\",-21574999,null),new cljs.core.Symbol(\"js\",\"RegExp\",\"js/RegExp\",1778210562,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"IChunkedSeq\",\"cljs.core/IChunkedSeq\",-892943716,null)]);\n/**\n * Look for a predicate-induced tag when the test expression is a simple\n * application of a predicate to a local, as in (string? x).\n */\ncljs.analyzer.simple_predicate_induced_tag = (function cljs$analyzer$simple_predicate_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((2) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__60899 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__60900 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__60900);\n\ntry{var G__60901 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60902 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60901,G__60902) : cljs.analyzer.analyze.call(null,G__60901,G__60902));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__60899);\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nvar temp__5735__auto__ = (function (){var G__60903 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nreturn (cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1(G__60903) : cljs.analyzer.predicate__GT_tag.call(null,G__60903));\n})();\nif(cljs.core.truth_(temp__5735__auto__)){\nvar tag = temp__5735__auto__;\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_((((cljs.core.namespace(sym) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null)):false))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Look for a type-check-induced tag when the test expression is the use of\n *   instance? on a local, as in (instance? UUID x) or implements? on a local, as\n *   in (implements? ICounted x).\n */\ncljs.analyzer.type_check_induced_tag = (function cljs$analyzer$type_check_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((3) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.specials,cljs.core.first(test))))))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__60904 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__60905 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__60905);\n\ntry{var G__60906 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60907 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60906,G__60907) : cljs.analyzer.analyze.call(null,G__60906,G__60907));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__60904);\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nif(cljs.core.truth_((function (){var G__60909 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nvar fexpr__60908 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"implements?\",\"cljs.core/implements?\",-251485149,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),\"null\"], null), null);\nreturn (fexpr__60908.cljs$core$IFn$_invoke$arity$1 ? fexpr__60908.cljs$core$IFn$_invoke$arity$1(G__60909) : fexpr__60908.call(null,G__60909));\n})())){\nvar analyzed_type = (function (){var _STAR_cljs_warnings_STAR__orig_val__60910 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__60911 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__60911);\n\ntry{var G__60912 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60913 = cljs.core.second(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60912,G__60913) : cljs.analyzer.analyze.call(null,G__60912,G__60913));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__60910);\n}})();\nvar tag = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_type);\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_type)))?(((cljs.core.namespace(sym) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null)):false):false))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Refine a tag to exclude clj-nil if the test is a local.\n */\ncljs.analyzer.truth_induced_tag = (function cljs$analyzer$truth_induced_tag(env,test){\nif(cljs.core.truth_((((test instanceof cljs.core.Symbol))?(((cljs.core.namespace(test) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),test], null)):false):false))){\nvar analyzed_symbol = (function (){var _STAR_cljs_warnings_STAR__orig_val__60914 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__60915 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__60915);\n\ntry{var G__60916 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60917 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60916,G__60917) : cljs.analyzer.analyze.call(null,G__60916,G__60917));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__60914);\n}})();\nvar temp__5735__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(analyzed_symbol);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar tag = temp__5735__auto__;\nif(((cljs.core.set_QMARK_(tag)) && (cljs.core.contains_QMARK_(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [test,cljs.analyzer.canonicalize_type(cljs.core.disj.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null)))], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Looks at the test and sets any tags which are induced by virtue\n *   of the test being truthy. For example in (if (string? x) x :bar)\n *   the local x in the then branch must be of string type.\n */\ncljs.analyzer.set_test_induced_tags = (function cljs$analyzer$set_test_induced_tags(env,test){\nvar vec__60918 = (function (){var or__4126__auto__ = cljs.analyzer.simple_predicate_induced_tag(env,test);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = cljs.analyzer.type_check_induced_tag(env,test);\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn cljs.analyzer.truth_induced_tag(env,test);\n}\n}\n})();\nvar local = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60918,(0),null);\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60918,(1),null);\nvar G__60921 = env;\nif(cljs.core.truth_(local)){\nreturn cljs.core.assoc_in(G__60921,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),local,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null),tag);\n} else {\nreturn G__60921;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),(function (op,env,p__60922,name,_){\nvar vec__60923 = p__60922;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60923,(0),null);\nvar test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60923,(1),null);\nvar then = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60923,(2),null);\nvar else$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60923,(3),null);\nvar form = vec__60923;\nif((cljs.core.count(form) < (3))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too few arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too many arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nvar test_expr = (function (){var _STAR_recur_frames_STAR__orig_val__60926 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60927 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60927);\n\ntry{var G__60928 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60929 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60928,G__60929) : cljs.analyzer.analyze.call(null,G__60928,G__60929));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60926);\n}})();\nvar then_expr = (function (){var _STAR_allow_redef_STAR__orig_val__60930 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__60931 = true;\n(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__60931);\n\ntry{var G__60932 = cljs.analyzer.set_test_induced_tags(env,test);\nvar G__60933 = then;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60932,G__60933) : cljs.analyzer.analyze.call(null,G__60932,G__60933));\n}finally {(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__60930);\n}})();\nvar else_expr = (function (){var _STAR_allow_redef_STAR__orig_val__60934 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__60935 = true;\n(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__60935);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,else$) : cljs.analyzer.analyze.call(null,env,else$));\n}finally {(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__60934);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"if\",\"if\",-458814265),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test_expr,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then_expr,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),else_expr,new cljs.core.Keyword(null,\"unchecked\",\"unchecked\",924418378),cljs.core._STAR_unchecked_if_STAR_,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.Keyword(null,\"else\",\"else\",-1508377146)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),(function (op,env,p__60938,name,_){\nvar vec__60939 = p__60938;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60939,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60939,(1),null);\nvar tests = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60939,(2),null);\nvar thens = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60939,(3),null);\nvar default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60939,(4),null);\nvar form = vec__60939;\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* must switch on symbol\",\"\\n\",\"(symbol? sym)\"].join('')));\n}\n\nif(cljs.core.every_QMARK_(cljs.core.vector_QMARK_,tests)){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* tests must be grouped in vectors\",\"\\n\",\"(every? vector? tests)\"].join('')));\n}\n\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar v = (function (){var _STAR_recur_frames_STAR__orig_val__60942 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60943 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60943);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60942);\n}})();\nvar tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__60936_SHARP_){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (t){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,t) : cljs.analyzer.analyze.call(null,expr_env,t));\n}),p1__60936_SHARP_);\n}),tests);\nvar thens__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__60937_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,p1__60937_SHARP_) : cljs.analyzer.analyze.call(null,env,p1__60937_SHARP_));\n}),thens);\nvar nodes = cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((function (tests__$2,then){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-node\",\"case-node\",1016946320),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (test){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-test\",\"case-test\",-213512472),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(test),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),expr_env,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877)], null)], null);\n}),tests__$2),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-then\",\"case-then\",2107591745),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(then),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null);\n}),tests__$1,thens__$1);\nvar default$__$1 = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,default$) : cljs.analyzer.analyze.call(null,env,default$));\nif(cljs.core.every_QMARK_((function (t){\nvar or__4126__auto__ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(t));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(t))){\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(cljs.core.number_QMARK_,cljs.core.string_QMARK_,cljs.core.char_QMARK_)(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(t));\n} else {\nreturn false;\n}\n}\n}),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,tests__$1))){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* tests must be numbers, strings, or constants\",\"\\n\",\"(every? (fn [t] (or (-> t :info :const) (and (= :const (:op t)) ((some-fn number? string? char?) (:form t))))) (apply concat tests))\"].join('')));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case\",\"case\",1143702196),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),v,new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),nodes,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),default$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),(function (op,env,p__60944,name,_){\nvar vec__60945 = p__60944;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60945,(0),null);\nvar throw_form = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60945,(1),null);\nvar form = vec__60945;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too few arguments to throw, throw expects a single Error instance\");\n} else {\nif(((2) < cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to throw, throw expects a single Error instance\");\n} else {\n}\n}\n\nvar throw_expr = (function (){var _STAR_recur_frames_STAR__orig_val__60948 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60949 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60949);\n\ntry{var G__60950 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60951 = throw_form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60950,G__60951) : cljs.analyzer.analyze.call(null,G__60950,G__60951));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60948);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"throw\",\"throw\",-1044625833),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),throw_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),(function (op,env,p__60956,name,_){\nvar vec__60957 = p__60956;\nvar seq__60958 = cljs.core.seq(vec__60957);\nvar first__60959 = cljs.core.first(seq__60958);\nvar seq__60958__$1 = cljs.core.next(seq__60958);\nvar ___$1 = first__60959;\nvar body = seq__60958__$1;\nvar form = vec__60957;\nvar catchenv = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),(function (p1__60952_SHARP_){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),p1__60952_SHARP_)){\nreturn new cljs.core.Keyword(null,\"return\",\"return\",-1891502105);\n} else {\nreturn p1__60952_SHARP_;\n}\n}));\nvar catch_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,(function (p1__60953_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__60953_SHARP_),new cljs.core.Symbol(null,\"catch\",\"catch\",-1616370245,null));\n}));\nvar default_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(catch_QMARK_,(function (p1__60954_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(p1__60954_SHARP_),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328));\n}));\nvar finally_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,(function (p1__60955_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__60955_SHARP_),new cljs.core.Symbol(null,\"finally\",\"finally\",-1065347064,null));\n}));\nvar map__60960 = (function (){var parser = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"start\",\"start\",-355208981),new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),body,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),null,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),null], null);\nwhile(true){\nif(cljs.core.seq_QMARK_(new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser))){\nvar vec__60965 = new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser);\nvar seq__60966 = cljs.core.seq(vec__60965);\nvar first__60967 = cljs.core.first(seq__60966);\nvar seq__60966__$1 = cljs.core.next(seq__60966);\nvar form__$1 = first__60967;\nvar forms_STAR_ = seq__60966__$1;\nvar parser_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),forms_STAR_);\nvar G__60968 = new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(parser);\nvar G__60968__$1 = (((G__60968 instanceof cljs.core.Keyword))?G__60968.fqn:null);\nswitch (G__60968__$1) {\ncase \"start\":\nif(cljs.core.truth_(catch_QMARK_(form__$1))){\nvar G__62138 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"catches\",\"catches\",-1478797617));\nparser = G__62138;\ncontinue;\n} else {\nif(cljs.core.truth_(finally_QMARK_(form__$1))){\nvar G__62139 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__62139;\ncontinue;\n} else {\nvar G__62141 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),cljs.core.conj,form__$1);\nparser = G__62141;\ncontinue;\n\n}\n}\n\nbreak;\ncase \"catches\":\nif(cljs.core.truth_(default_QMARK_(form__$1))){\nvar G__62145 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], 0));\nparser = G__62145;\ncontinue;\n} else {\nif(cljs.core.truth_(catch_QMARK_(form__$1))){\nvar G__62148 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138)], null),cljs.core.conj,form__$1);\nparser = G__62148;\ncontinue;\n} else {\nif(cljs.core.truth_(finally_QMARK_(form__$1))){\nvar G__62149 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__62149;\ncontinue;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid try form\");\n\n}\n}\n}\n\nbreak;\ncase \"finally\":\nvar G__62151 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"done\",\"done\",-889844188)], 0));\nparser = G__62151;\ncontinue;\n\nbreak;\ncase \"done\":\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Unexpected form after finally\");\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60968__$1)].join('')));\n\n}\n} else {\nreturn parser;\n}\nbreak;\n}\n})();\nvar map__60960__$1 = (((((!((map__60960 == null))))?(((((map__60960.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60960.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60960):map__60960);\nvar body__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60960__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar cblocks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60960__$1,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138));\nvar dblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60960__$1,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381));\nvar fblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60960__$1,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426));\nvar finally$ = ((cljs.core.seq(fblock))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var _STAR_recur_frames_STAR__orig_val__60970 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60971 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60971);\n\ntry{var G__60972 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__60973 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),cljs.core.rest(fblock))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60972,G__60973) : cljs.analyzer.analyze.call(null,G__60972,G__60973));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60970);\n}})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true):null);\nvar e = (cljs.core.truth_((function (){var or__4126__auto__ = cljs.core.seq(cblocks);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nreturn dblock;\n}\n})())?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"e\"):null);\nvar default$ = (function (){var temp__5733__auto__ = dblock;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar vec__60974 = temp__5733__auto__;\nvar seq__60975 = cljs.core.seq(vec__60974);\nvar first__60976 = cljs.core.first(seq__60975);\nvar seq__60975__$1 = cljs.core.next(seq__60975);\nvar ___$2 = first__60976;\nvar first__60976__$1 = cljs.core.first(seq__60975__$1);\nvar seq__60975__$2 = cljs.core.next(seq__60975__$1);\nvar ___$3 = first__60976__$1;\nvar first__60976__$2 = cljs.core.first(seq__60975__$2);\nvar seq__60975__$3 = cljs.core.next(seq__60975__$2);\nvar name__$1 = first__60976__$2;\nvar cb = seq__60975__$3;\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0))));\n} else {\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))));\n}\n})();\nvar cblock = ((cljs.core.seq(cblocks))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"cond\",\"cljs.core/cond\",2005388338,null),null,(1),null)),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p__60977){\nvar vec__60978 = p__60977;\nvar seq__60979 = cljs.core.seq(vec__60978);\nvar first__60980 = cljs.core.first(seq__60979);\nvar seq__60979__$1 = cljs.core.next(seq__60979);\nvar ___$2 = first__60980;\nvar first__60980__$1 = cljs.core.first(seq__60979__$1);\nvar seq__60979__$2 = cljs.core.next(seq__60979__$1);\nvar type = first__60980__$1;\nvar first__60980__$2 = cljs.core.first(seq__60979__$2);\nvar seq__60979__$3 = cljs.core.next(seq__60979__$2);\nvar name__$1 = first__60980__$2;\nvar cb = seq__60979__$3;\nif(cljs.core.truth_(name__$1)){\nif(cljs.core.not(cljs.core.namespace(name__$1))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Can't qualify symbol in catch\",\"\\n\",\"(not (namespace name))\"].join('')));\n}\n} else {\n}\n\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),null,(1),null)),(new cljs.core.List(null,type,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,e,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0)))),null,(1),null))))));\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cblocks], 0)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),null,(1),null)),(new cljs.core.List(null,default$,null,(1),null))], 0)))):default$);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(catchenv);\nvar locals__$1 = (cljs.core.truth_(e)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,e,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(e,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(e,env)], null)):locals);\nvar catch$ = (cljs.core.truth_(cblock)?(function (){var _STAR_recur_frames_STAR__orig_val__60981 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60982 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60982);\n\ntry{var G__60983 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(catchenv,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1);\nvar G__60984 = cblock;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60983,G__60984) : cljs.analyzer.analyze.call(null,G__60983,G__60984));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60981);\n}})():null);\nvar try$ = (function (){var _STAR_recur_frames_STAR__orig_val__60985 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60986 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60986);\n\ntry{var G__60987 = (cljs.core.truth_((function (){var or__4126__auto__ = e;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn finally$;\n}\n})())?catchenv:env);\nvar G__60988 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body__$1)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60987,G__60988) : cljs.analyzer.analyze.call(null,G__60987,G__60988));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60985);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"try\",\"try\",1380742522),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(try$,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705),finally$,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524),catch$,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),(cljs.core.truth_(catch$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524)], null):null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(finally$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], null):null)], 0)))], null);\n}));\ncljs.analyzer.valid_proto = (function cljs$analyzer$valid_proto(x){\nif((x instanceof cljs.core.Symbol)){\nreturn x;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.elide_env = (function cljs$analyzer$elide_env(env,ast,opts){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235));\n});\ncljs.analyzer.replace_env_pass = (function cljs$analyzer$replace_env_pass(new_env){\nreturn (function (env,ast,opts){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new_env);\n});\n});\ncljs.analyzer.ast_children = (function cljs$analyzer$ast_children(ast){\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (c){\nvar g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ast,c);\nif(cljs.core.vector_QMARK_(g)){\nreturn g;\n} else {\nif(cljs.core.truth_(g)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null);\n} else {\nreturn null;\n}\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast)], 0));\n});\ncljs.analyzer.constant_value_QMARK_ = (function cljs$analyzer$constant_value_QMARK_(p__60989){\nvar map__60990 = p__60989;\nvar map__60990__$1 = (((((!((map__60990 == null))))?(((((map__60990.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60990.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60990):map__60990);\nvar ast = map__60990__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60990__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar or__4126__auto__ = (function (){var fexpr__60993 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"const\",\"const\",1709929842),null,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),null], null), null);\nreturn (fexpr__60993.cljs$core$IFn$_invoke$arity$1 ? fexpr__60993.cljs$core$IFn$_invoke$arity$1(op) : fexpr__60993.call(null,op));\n})();\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar and__4115__auto__ = (function (){var fexpr__60996 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),null,new cljs.core.Keyword(null,\"set\",\"set\",304602554),null,new cljs.core.Keyword(null,\"map\",\"map\",1371690461),null], null), null);\nreturn (fexpr__60996.cljs$core$IFn$_invoke$arity$1 ? fexpr__60996.cljs$core$IFn$_invoke$arity$1(op) : fexpr__60996.call(null,op));\n})();\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.every_QMARK_(cljs.analyzer.constant_value_QMARK_,cljs.analyzer.ast_children(ast));\n} else {\nreturn and__4115__auto__;\n}\n}\n});\ncljs.analyzer.const_expr__GT_constant_value = (function cljs$analyzer$const_expr__GT_constant_value(p__60997){\nvar map__60998 = p__60997;\nvar map__60998__$1 = (((((!((map__60998 == null))))?(((((map__60998.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60998.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60998):map__60998);\nvar e = map__60998__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60998__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__61000 = op;\nvar G__61000__$1 = (((G__61000 instanceof cljs.core.Keyword))?G__61000.fqn:null);\nswitch (G__61000__$1) {\ncase \"quote\":\nvar G__61001 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1(G__61001) : cljs.analyzer.const_expr__GT_constant_value.call(null,G__61001));\n\nbreak;\ncase \"const\":\nreturn new cljs.core.Keyword(null,\"val\",\"val\",128701612).cljs$core$IFn$_invoke$arity$1(e);\n\nbreak;\ncase \"map\":\nreturn cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698).cljs$core$IFn$_invoke$arity$1(e)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"set\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"vector\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__61000__$1)].join('')));\n\n}\n});\ncljs.analyzer.earmuffed_QMARK_ = (function cljs$analyzer$earmuffed_QMARK_(sym){\nvar s = cljs.core.name(sym);\nreturn (((((s).length) > (2))) && (clojure.string.starts_with_QMARK_(s,\"*\")) && (clojure.string.ends_with_QMARK_(s,\"*\")));\n});\ncljs.analyzer.core_ns_QMARK_ = (function cljs$analyzer$core_ns_QMARK_(ns_sym){\nvar s = cljs.core.name(ns_sym);\nreturn ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),ns_sym)) && (((clojure.string.starts_with_QMARK_(s,\"cljs.\")) || (clojure.string.starts_with_QMARK_(s,\"clojure.\")))));\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),(function (op,env,form,_,___$1){\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n} else {\n}\n\nvar pfn = (function() {\nvar G__62193 = null;\nvar G__62193__2 = (function (___$2,sym){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null);\n});\nvar G__62193__3 = (function (___$2,sym,init){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nvar G__62193__4 = (function (___$2,sym,doc,init){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nG__62193 = function(___$2,sym,doc,init){\nswitch(arguments.length){\ncase 2:\nreturn G__62193__2.call(this,___$2,sym);\ncase 3:\nreturn G__62193__3.call(this,___$2,sym,doc);\ncase 4:\nreturn G__62193__4.call(this,___$2,sym,doc,init);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__62193.cljs$core$IFn$_invoke$arity$2 = G__62193__2;\nG__62193.cljs$core$IFn$_invoke$arity$3 = G__62193__3;\nG__62193.cljs$core$IFn$_invoke$arity$4 = G__62193__4;\nreturn G__62193;\n})()\n;\nvar args = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(pfn,form);\nvar sym = new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(args);\nvar const_QMARK_ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar sym_meta = cljs.core.meta(sym);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar protocol = cljs.analyzer.valid_proto(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)));\nvar dynamic = new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar clash_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(''));\nvar sym_ns = cljs.core.namespace(sym);\nvar sym__$1 = (cljs.core.truth_((function (){var and__4115__auto__ = sym_ns;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn (!(cljs.core.symbol_identical_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(sym_ns),ns_name)));\n} else {\nreturn and__4115__auto__;\n}\n})())?(function(){throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't def ns-qualified name in namespace \",sym_ns].join(''))})():(((!((sym_ns == null))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)):sym\n));\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns], null)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)].join('')),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1))], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't redefine a constant\");\n} else {\n}\n\nvar temp__5739__auto___62202 = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif((temp__5739__auto___62202 == null)){\n} else {\nvar doc_62204 = temp__5739__auto___62202;\nif(typeof doc_62204 === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n}\n}\n\nif(((cljs.core.not(dynamic)) && (cljs.analyzer.earmuffed_QMARK_(sym__$1)) && ((!(cljs.analyzer.core_ns_QMARK_(ns_name)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)], null));\n} else {\n}\n\nvar temp__5739__auto___62207 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5739__auto___62207 == null)){\n} else {\nvar v_62208 = temp__5739__auto___62207;\nif(cljs.core.truth_(((cljs.core.not(cljs.analyzer._STAR_allow_redef_STAR_))?((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_62208)))?((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta)))?(function (){var and__4115__auto__ = cljs.analyzer._STAR_file_defs_STAR_;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.analyzer._STAR_file_defs_STAR_),sym__$1);\n} else {\nreturn and__4115__auto__;\n}\n})():false):false):false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(v_62208)], null));\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__4115__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_62208);\nif(cljs.core.truth_(and__4115__auto__)){\nvar and__4115__auto____$1 = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_62208);\nif(cljs.core.truth_(and__4115__auto____$1)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_62208),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta));\n} else {\nreturn and__4115__auto____$1;\n}\n} else {\nreturn and__4115__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_62208)),new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null));\n} else {\n}\n}\n\nvar env__$1 = ((((((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ns_name,new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))) && (cljs.analyzer.core_name_QMARK_(env,sym__$1)))) || ((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym__$1], null)) == null))))))?(function (){var ev = cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),cljs.core.with_meta(sym__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017),true], null)));\nvar conj_to_set = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY);\nif(cljs.analyzer.public_name_QMARK_(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),sym__$1)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name], null));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym__$1], 0));\n\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,sym__$1);\n})():env);\nvar var_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1));\nvar init_expr = ((cljs.core.contains_QMARK_(args,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)))?(function (){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),sym_meta,((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1)], 0)));\n\nvar _STAR_recur_frames_STAR__orig_val__61003 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61004 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61004);\n\ntry{var _STAR_allow_ns_STAR__orig_val__61005 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__61006 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__61006);\n\ntry{var G__61007 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__61008 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nvar G__61009 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(G__61007,G__61008,G__61009) : cljs.analyzer.analyze.call(null,G__61007,G__61008,G__61009));\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__61005);\n}}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61003);\n}})()\n:null);\nvar fn_var_QMARK_ = (((!((init_expr == null)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204))));\nvar tag__$1 = ((fn_var_QMARK_)?(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(init_expr);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = tag;\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347).cljs$core$IFn$_invoke$arity$1(init_expr);\n}\n}\n})():(cljs.core.truth_(tag)?tag:(cljs.core.truth_(dynamic)?cljs.analyzer.ANY_SYM:new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr)\n)));\nvar export_as = (function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"export\",\"export\",214356590).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar export_val = temp__5735__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,export_val)){\nreturn var_name;\n} else {\nreturn export_val;\n}\n} else {\nreturn null;\n}\n})();\nvar doc = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\n}\n})();\nvar temp__5739__auto___62228 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5739__auto___62228 == null)){\n} else {\nvar v_62229 = temp__5739__auto___62228;\nif(((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1)))) && (((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(v_62229) === true) && ((!(fn_var_QMARK_))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),env__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1], null));\n} else {\n}\n}\n\nif((((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null)) == null)) || (cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta))))){\nif(cljs.core.truth_(cljs.analyzer._STAR_file_defs_STAR_)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_file_defs_STAR_,cljs.core.conj,sym__$1);\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),(function (){var G__61010 = sym_meta;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__61010,new cljs.core.Keyword(null,\"test\",\"test\",577538877),true);\n} else {\nreturn G__61010;\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(sym_meta,new cljs.core.Keyword(null,\"test\",\"test\",577538877)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878)], null),(function (f){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$1)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))){\nreturn \"cljs/core.cljs\";\n} else {\nreturn f;\n}\n}))], null),(cljs.core.truth_(doc)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc], null):null),(cljs.core.truth_(const_QMARK_)?(function (){var const_expr = (function (){var _STAR_passes_STAR__orig_val__61011 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__61012 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\n(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__61012);\n\ntry{var G__61013 = env__$1;\nvar G__61014 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61013,G__61014) : cljs.analyzer.analyze.call(null,G__61013,G__61014));\n}finally {(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__61011);\n}})();\nif(cljs.core.truth_(cljs.analyzer.constant_value_QMARK_(const_expr))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})():null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1),(cljs.core.truth_(protocol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),protocol], null):null),(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar protocol_symbol = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198),protocol_symbol,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"protocol-info\",\"protocol-info\",1471745843).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(protocol_symbol)),new cljs.core.Keyword(null,\"impls\",\"impls\",-1314014853),cljs.core.PersistentHashSet.EMPTY], null);\n} else {\nreturn null;\n}\n})(),((fn_var_QMARK_)?(function (){var params = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__61002_SHARP_){\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(p1__61002_SHARP_)));\n}),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),cljs.core.not(new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(sym_meta)),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556).cljs$core$IFn$_invoke$arity$1(init_expr)], null),(function (){var temp__5737__auto__ = new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5737__auto__ == null)){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),params,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.meta,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta)))], null);\n} else {\nvar top_fn_meta = temp__5737__auto__;\nreturn top_fn_meta;\n}\n})()], 0));\n})():null),(cljs.core.truth_((function (){var and__4115__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta);\n} else {\nreturn and__4115__auto__;\n}\n})())?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),true,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null):null),((((fn_var_QMARK_) && ((!((tag__$1 == null))))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):(cljs.core.truth_(tag__$1)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null):null))], 0)));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"def\",\"def\",-1043430536),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns_name,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__61015 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)),new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377),true);\nvar G__61016 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61015,G__61016) : cljs.analyzer.analyze.call(null,G__61015,G__61016));\n})(),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797)),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516).cljs$core$IFn$_invoke$arity$1(sym_meta)], null),(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"goog-define\",\"goog-define\",-1048305441).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar goog_type = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"goog-define\",\"goog-define\",-1048305441),goog_type], null);\n} else {\nreturn null;\n}\n})(),((new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env__$1) === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var-ast\",\"var-ast\",1200379319),cljs.analyzer.var_ast(env__$1,sym__$1)], null):null),(function (){var temp__5739__auto__ = new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar test = temp__5739__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),(function (){var G__61017 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__61018 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61017,G__61018) : cljs.analyzer.analyze.call(null,G__61017,G__61018));\n})()], null);\n}\n})(),(((!((tag__$1 == null))))?((fn_var_QMARK_)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null)):null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),(((!((export_as == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"export\",\"export\",214356590),export_as], null):null),(((!((init_expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797)], null)], null))], 0));\n}));\ncljs.analyzer.analyze_fn_method_param = (function cljs$analyzer$analyze_fn_method_param(env){\nreturn (function (p__61019,p__61020){\nvar vec__61021 = p__61019;\nvar locals = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61021,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61021,(1),null);\nvar vec__61024 = p__61020;\nvar arg_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61024,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61024,(1),null);\nif(cljs.core.truth_(cljs.core.namespace(name))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't use qualified name as parameter: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar line = cljs.analyzer.get_line(name,env);\nvar column = cljs.analyzer.get_col(name,env);\nvar nmeta = cljs.core.meta(name);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(nmeta);\nvar shadow__$1 = (((!((locals == null))))?cljs.analyzer.handle_symbol_local(name,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(name) : locals.call(null,name))):null);\nvar env__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column], null)], 0));\nvar param = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),env__$1,column,line,arg_id,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),tag,shadow__$1,new cljs.core.Keyword(null,\"arg\",\"arg\",-1747261837)]);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name,param),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(params,param)], null);\n});\n});\ncljs.analyzer.analyze_fn_method_body = (function cljs$analyzer$analyze_fn_method_body(env,form,recur_frames){\nvar _STAR_recur_frames_STAR__orig_val__61027 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61028 = recur_frames;\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61028);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze.call(null,env,form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61027);\n}});\ncljs.analyzer.analyze_fn_method = (function cljs$analyzer$analyze_fn_method(env,locals,form,type,analyze_body_QMARK_){\nvar param_names = cljs.core.first(form);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar param_names__$1 = cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar body = cljs.core.next(form);\nvar step = cljs.analyzer.analyze_fn_method_param(env);\nvar step_init = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [locals,cljs.core.PersistentVector.EMPTY], null);\nvar vec__61029 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step,step_init,cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector,param_names__$1));\nvar locals__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61029,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61029,(1),null);\nvar params_SINGLEQUOTE_ = ((variadic === true)?cljs.core.butlast(params):params);\nvar fixed_arity = cljs.core.count(params_SINGLEQUOTE_);\nvar recur_frame = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY)], null);\nvar recur_frames = cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_);\nvar body_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1], 0));\nvar body_form = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body)));\nvar expr = (cljs.core.truth_(analyze_body_QMARK_)?cljs.analyzer.analyze_fn_method_body(body_env,body_form,recur_frames):null);\nvar recurs = cljs.core.deref(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(recur_frame));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),variadic,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),fixed_arity,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"recurs\",\"recurs\",-1959309309),recurs], null),(((!((expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null)], null))], 0));\n});\ncljs.analyzer.fn_name_var = (function cljs$analyzer$fn_name_var(env,locals,name){\nif((!((name == null)))){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,name));\nvar shadow__$2 = (((shadow__$1 == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),name], null)):null);\nvar fn_scope = new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"fn-self-name\",\"fn-self-name\",1461143531),true,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),fn_scope,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$2], null)], null);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nvar ret_tag = (((!((tag == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag], null):null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([name_var,ret_tag], 0));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_fn_methods_pass2_STAR_ = (function cljs$analyzer$analyze_fn_methods_pass2_STAR_(menv,locals,type,meths){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61032_SHARP_){\nreturn cljs.analyzer.analyze_fn_method(menv,locals,p1__61032_SHARP_,type,true);\n}),meths);\n});\ncljs.analyzer.analyze_fn_methods_pass2 = (function cljs$analyzer$analyze_fn_methods_pass2(menv,locals,type,meths){\nreturn cljs.analyzer.analyze_fn_methods_pass2_STAR_(menv,locals,type,meths);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),(function (op,env,p__61034,name,_){\nvar vec__61035 = p__61034;\nvar seq__61036 = cljs.core.seq(vec__61035);\nvar first__61037 = cljs.core.first(seq__61036);\nvar seq__61036__$1 = cljs.core.next(seq__61036);\nvar ___$1 = first__61037;\nvar args = seq__61036__$1;\nvar form = vec__61035;\nvar named_fn_QMARK_ = (cljs.core.first(args) instanceof cljs.core.Symbol);\nvar vec__61038 = ((named_fn_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(args),cljs.core.next(args)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,cljs.core.seq(args)], null));\nvar name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61038,(0),null);\nvar meths = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61038,(1),null);\nvar meths__$1 = ((cljs.core.vector_QMARK_(cljs.core.first(meths)))?(new cljs.core.List(null,meths,null,(1),null)):meths);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = cljs.analyzer.fn_name_var(env,locals,name__$1);\nvar env__$1 = (((!((name__$1 == null))))?cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859)], null),cljs.core.conj,name_var):env);\nvar locals__$1 = (((((!((locals == null)))) && (named_fn_QMARK_)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name__$1,name_var):locals);\nvar form_meta = cljs.core.meta(form);\nvar type = new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_impl = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_inline = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar menv = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2((function (){var G__61041 = env__$1;\nif((cljs.core.count(meths__$1) > (1))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__61041,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\n} else {\nreturn G__61041;\n}\n})(),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),proto_impl,new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),proto_inline], null)], 0));\nvar methods$ = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__61033_SHARP_){\nvar _STAR_allow_ns_STAR__orig_val__61042 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__61043 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__61043);\n\ntry{return cljs.analyzer.analyze_fn_method(menv,locals__$1,p1__61033_SHARP_,type,(name__$1 == null));\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__61042);\n}}),meths__$1);\nvar mfa = cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869)),cljs.core.max,(0),methods$);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),methods$));\nvar locals__$2 = ((named_fn_QMARK_)?cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(locals__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1], null),cljs.core.assoc,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([variadic,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),mfa,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),methods$)], 0)):locals__$1);\nvar methods$__$1 = (((!((name__$1 == null))))?(function (){var _STAR_allow_ns_STAR__orig_val__61044 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__61045 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__61045);\n\ntry{return cljs.analyzer.analyze_fn_methods_pass2(menv,locals__$2,type,meths__$1);\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__61044);\n}})():cljs.core.vec(methods$));\nvar form__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(form,cljs.core.dissoc,new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409),new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026),new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742));\nvar js_doc = ((variadic === true)?\"@param {...*} var_args\":null);\nvar children = (((!((name_var == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null));\nvar inferred_ret_tag = (function (){var inferred_tags = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.infer_tag,env__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),methods$__$1));\nif(cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,inferred_tags))){\nreturn cljs.core.first(inferred_tags);\n} else {\nreturn null;\n}\n})();\nvar ast = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"loop-lets\",\"loop-lets\",2036794185),new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),new cljs.core.Keyword(null,\"recur-frames\",\"recur-frames\",-307205196),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516)],[children,proto_inline,name_var,cljs.analyzer._STAR_loop_lets_STAR_,inferred_ret_tag,proto_impl,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),env__$1,variadic,methods$__$1,cljs.analyzer._STAR_recur_frames_STAR_,mfa,form__$1,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246).cljs$core$IFn$_invoke$arity$1(env__$1),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_doc], null)]),(((!((name_var == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),name_var], null):null)], 0));\nvar variadic_methods_62277 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)),cljs.core.take.cljs$core$IFn$_invoke$arity$1((1))),methods$__$1);\nvar variadic_params_62278 = (((cljs.core.count(variadic_methods_62277) > (0)))?cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(variadic_methods_62277,(0)))):(0));\nvar param_counts_62279 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.count,new cljs.core.Keyword(null,\"params\",\"params\",710516235))),methods$__$1);\nif(((1) < cljs.core.count(variadic_methods_62277))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif((!((((variadic_params_62278 === (0))) || ((variadic_params_62278 === ((1) + mfa))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(param_counts_62279),param_counts_62279)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(ast) : cljs.analyzer.analyze_wrap_meta.call(null,ast));\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),(function (op,env,p__61046,name,_){\nvar vec__61047 = p__61046;\nvar seq__61048 = cljs.core.seq(vec__61047);\nvar first__61049 = cljs.core.first(seq__61048);\nvar seq__61048__$1 = cljs.core.next(seq__61048);\nvar ___$1 = first__61049;\nvar first__61049__$1 = cljs.core.first(seq__61048__$1);\nvar seq__61048__$2 = cljs.core.next(seq__61048__$1);\nvar bindings = first__61049__$1;\nvar exprs = seq__61048__$2;\nvar form = vec__61047;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"bindings must be vector of even number of elements\");\n}\n\nvar n__GT_fexpr = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.second),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings)));\nvar names = cljs.core.keys(n__GT_fexpr);\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar vec__61050 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__61056,n){\nvar vec__61057 = p__61056;\nvar map__61060 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61057,(0),null);\nvar map__61060__$1 = (((((!((map__61060 == null))))?(((((map__61060.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61060.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61060):map__61060);\nvar env__$1 = map__61060__$1;\nvar locals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61060__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61057,(1),null);\nvar ret_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(n));\nvar fexpr = (function (){var _STAR_cljs_warnings_STAR__orig_val__61062 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__61063 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__61063);\n\ntry{var G__61064 = env__$1;\nvar G__61065 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(n) : n__GT_fexpr.call(null,n));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61064,G__61065) : cljs.analyzer.analyze.call(null,G__61064,G__61065));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__61062);\n}})();\nvar be = (function (){var G__61066 = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[n,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr)),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),cljs.analyzer.get_col(n,env__$1),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),cljs.analyzer.get_line(n,env__$1),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),true,cljs.analyzer.handle_symbol_local(n,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(n) : locals.call(null,n))),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354)]);\nif(cljs.core.truth_(ret_tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__61066,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag);\n} else {\nreturn G__61066;\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),n], null),be),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env,cljs.core.PersistentVector.EMPTY], null),names);\nvar meth_env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61050,(0),null);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61050,(1),null);\nvar meth_env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar vec__61053 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__61067,p__61068){\nvar vec__61069 = p__61067;\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61069,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61069,(1),null);\nvar map__61072 = p__61068;\nvar map__61072__$1 = (((((!((map__61072 == null))))?(((((map__61072.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61072.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61072):map__61072);\nvar be = map__61072__$1;\nvar name__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61072__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar shadow__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61072__$1,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803));\nvar env__$1 = cljs.core.assoc_in(meth_env__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),shadow__$1);\nvar fexpr = (function (){var G__61074 = env__$1;\nvar G__61075 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(name__$1) : n__GT_fexpr.call(null,name__$1));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61074,G__61075) : cljs.analyzer.analyze.call(null,G__61074,G__61075));\n})();\nvar be_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(be,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),fexpr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),be_SINGLEQUOTE_),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes__$1,be_SINGLEQUOTE_)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [meth_env__$1,cljs.core.PersistentVector.EMPTY], null),bes);\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61053,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61053,(1),null);\nvar expr = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__61076 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env__$2,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__61077 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61076,G__61077) : cljs.analyzer.analyze.call(null,G__61076,G__61077));\n})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),expr,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null);\n}));\ncljs.analyzer.analyze_do_statements_STAR_ = (function cljs$analyzer$analyze_do_statements_STAR_(env,exprs){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61078_SHARP_){\nvar G__61079 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__61080 = p1__61078_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61079,G__61080) : cljs.analyzer.analyze.call(null,G__61079,G__61080));\n}),cljs.core.butlast(exprs));\n});\ncljs.analyzer.analyze_do_statements = (function cljs$analyzer$analyze_do_statements(env,exprs){\nvar _STAR_recur_frames_STAR__orig_val__61081 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61082 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61082);\n\ntry{return cljs.analyzer.analyze_do_statements_STAR_(env,exprs);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61081);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),(function (op,env,p__61083,_,___$1){\nvar vec__61084 = p__61083;\nvar seq__61085 = cljs.core.seq(vec__61084);\nvar first__61086 = cljs.core.first(seq__61085);\nvar seq__61085__$1 = cljs.core.next(seq__61085);\nvar ___$2 = first__61086;\nvar exprs = seq__61085__$1;\nvar form = vec__61084;\nvar statements = cljs.analyzer.analyze_do_statements(env,exprs);\nif((cljs.core.count(exprs) <= (1))){\nvar ret = (function (){var G__61087 = env;\nvar G__61088 = cljs.core.first(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61087,G__61088) : cljs.analyzer.analyze.call(null,G__61087,G__61088));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n} else {\nvar ret_env = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863)):cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105)));\nvar ret = (function (){var G__61089 = ret_env;\nvar G__61090 = cljs.core.last(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61089,G__61090) : cljs.analyzer.analyze.call(null,G__61089,G__61090));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\n}));\ncljs.analyzer.analyze_let_binding_init = (function cljs$analyzer$analyze_let_binding_init(env,init,loop_lets){\nvar _STAR_loop_lets_STAR__orig_val__61091 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_loop_lets_STAR__temp_val__61092 = loop_lets;\n(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__61092);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.analyze.call(null,env,init));\n}finally {(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__61091);\n}});\ncljs.analyzer.get_let_tag = (function cljs$analyzer$get_let_tag(name,init_expr){\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr);\nif((temp__5737__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(init_expr));\n} else {\nvar tag = temp__5737__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.analyze_let_bindings_STAR_ = (function cljs$analyzer$analyze_let_bindings_STAR_(encl_env,bindings,op){\nvar bes = cljs.core.PersistentVector.EMPTY;\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(encl_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar bindings__$1 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings));\nwhile(true){\nvar temp__5737__auto__ = cljs.core.first(bindings__$1);\nif((temp__5737__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bes,env], null);\n} else {\nvar vec__61097 = temp__5737__auto__;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61097,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61097,(1),null);\nif((((!((cljs.core.namespace(name) == null)))) || (goog.string.contains(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\".\")))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,[\"Invalid local name: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar init_expr = cljs.analyzer.analyze_let_binding_init(env,init,cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_));\nvar line = cljs.analyzer.get_line(name,env);\nvar col = cljs.analyzer.get_col(name,env);\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null)));\nvar be = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[init_expr,name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col], null),col,line,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),cljs.analyzer.get_let_tag(name,init_expr),shadow__$1,op]);\nvar be__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([be,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__61097,name,init,temp__5737__auto__){\nreturn (function (p1__61093_SHARP_){\nreturn cljs.core.select_keys(p1__61093_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null));\n});})(bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__61097,name,init,temp__5737__auto__))\n,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))], null)], 0)):be);\nvar G__62320 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be__$1);\nvar G__62321 = cljs.core.assoc_in(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null),be__$1);\nvar G__62322 = cljs.core.next(bindings__$1);\nbes = G__62320;\nenv = G__62321;\nbindings__$1 = G__62322;\ncontinue;\n}\nbreak;\n}\n});\ncljs.analyzer.analyze_let_bindings = (function cljs$analyzer$analyze_let_bindings(encl_env,bindings,op){\nvar _STAR_recur_frames_STAR__orig_val__61100 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61101 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61101);\n\ntry{return cljs.analyzer.analyze_let_bindings_STAR_(encl_env,bindings,op);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61100);\n}});\ncljs.analyzer.analyze_let_body_STAR_ = (function cljs$analyzer$analyze_let_body_STAR_(env,context,exprs){\nvar G__61102 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__61103 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61102,G__61103) : cljs.analyzer.analyze.call(null,G__61102,G__61103));\n});\ncljs.analyzer.analyze_let_body = (function cljs$analyzer$analyze_let_body(env,context,exprs,recur_frames,loop_lets){\nvar _STAR_recur_frames_STAR__orig_val__61104 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_loop_lets_STAR__orig_val__61105 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61106 = recur_frames;\nvar _STAR_loop_lets_STAR__temp_val__61107 = loop_lets;\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61106);\n\n(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__61107);\n\ntry{return cljs.analyzer.analyze_let_body_STAR_(env,context,exprs);\n}finally {(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__61105);\n\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61104);\n}});\ncljs.analyzer.analyze_let = (function cljs$analyzer$analyze_let(encl_env,p__61108,is_loop,widened_tags){\nwhile(true){\nvar vec__61109 = p__61108;\nvar seq__61110 = cljs.core.seq(vec__61109);\nvar first__61111 = cljs.core.first(seq__61110);\nvar seq__61110__$1 = cljs.core.next(seq__61110);\nvar _ = first__61111;\nvar first__61111__$1 = cljs.core.first(seq__61110__$1);\nvar seq__61110__$2 = cljs.core.next(seq__61110__$1);\nvar bindings = first__61111__$1;\nvar exprs = seq__61110__$2;\nvar form = vec__61109;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,\"bindings must be vector of even number of elements\");\n}\n\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(encl_env);\nvar op = ((is_loop === true)?new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849):new cljs.core.Keyword(null,\"let\",\"let\",-1282412701));\nvar bindings__$1 = (cljs.core.truth_(widened_tags)?cljs.core.vec(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (encl_env,p__61108,is_loop,widened_tags,context,op,vec__61109,seq__61110,first__61111,seq__61110__$1,_,first__61111__$1,seq__61110__$2,bindings,exprs,form){\nreturn (function (p__61115,widened_tag){\nvar vec__61116 = p__61115;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61116,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61116,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(name,cljs.core.assoc,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),widened_tag),init], null);\n});})(encl_env,p__61108,is_loop,widened_tags,context,op,vec__61109,seq__61110,first__61111,seq__61110__$1,_,first__61111__$1,seq__61110__$2,bindings,exprs,form))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings),widened_tags], 0))):bindings);\nvar vec__61112 = cljs.analyzer.analyze_let_bindings((function (){var G__61119 = encl_env;\nif(is_loop === true){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__61119,new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246),true);\n} else {\nreturn G__61119;\n}\n})(),bindings__$1,op);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61112,(0),null);\nvar env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61112,(1),null);\nvar recur_frame = ((is_loop === true)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),bes))], null):null);\nvar recur_frames = (cljs.core.truth_(recur_frame)?cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_):cljs.analyzer._STAR_recur_frames_STAR_);\nvar loop_lets = ((is_loop === true)?cljs.analyzer._STAR_loop_lets_STAR_:(((!((cljs.analyzer._STAR_loop_lets_STAR_ == null))))?cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_):null));\nvar warn_acc = (cljs.core.truth_((function (){var and__4115__auto__ = is_loop;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(widened_tags);\n} else {\nreturn and__4115__auto__;\n}\n})())?cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY):null);\nvar expr = (cljs.core.truth_(warn_acc)?(function (){var _STAR_cljs_warning_handlers_STAR__orig_val__61120 = cljs.analyzer._STAR_cljs_warning_handlers_STAR_;\nvar _STAR_cljs_warning_handlers_STAR__temp_val__61121 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.accumulating_warning_handler(warn_acc)], null);\n(cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__temp_val__61121);\n\ntry{return cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets);\n}finally {(cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__orig_val__61120);\n}})():cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets));\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null);\nvar nil__GT_any = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(cljs.core.truth_((function (){var and__4115__auto__ = is_loop;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn ((cljs.core.not(widened_tags)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(nil__GT_any,cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame))),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(nil__GT_any,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),bes))));\n} else {\nreturn and__4115__auto__;\n}\n})())){\nvar G__62336 = encl_env;\nvar G__62337 = form;\nvar G__62338 = is_loop;\nvar G__62339 = cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame));\nencl_env = G__62336;\np__61108 = G__62337;\nis_loop = G__62338;\nwidened_tags = G__62339;\ncontinue;\n} else {\nif(cljs.core.truth_(warn_acc)){\ncljs.analyzer.replay_accumulated_warnings(warn_acc);\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),op,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),encl_env,new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\nbreak;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,false,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,true,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),(function (op,env,p__61123,_,___$1){\nvar vec__61124 = p__61123;\nvar seq__61125 = cljs.core.seq(vec__61124);\nvar first__61126 = cljs.core.first(seq__61125);\nvar seq__61125__$1 = cljs.core.next(seq__61125);\nvar ___$2 = first__61126;\nvar exprs = seq__61125__$1;\nvar form = vec__61124;\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar frame = cljs.core.first(cljs.analyzer._STAR_recur_frames_STAR_);\nvar add_implicit_target_object_QMARK_ = (function (){var and__4115__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs),(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)) - (1)));\n} else {\nreturn and__4115__auto__;\n}\n})();\nvar exprs__$1 = (function (){var G__61127 = exprs;\nif(cljs.core.truth_(add_implicit_target_object_QMARK_)){\nreturn cljs.core.cons(null,G__61127);\n} else {\nreturn G__61127;\n}\n})();\nvar exprs__$2 = (function (){var _STAR_recur_frames_STAR__orig_val__61128 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61129 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61129);\n\ntry{return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__61122_SHARP_){\nvar G__61130 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__61131 = p1__61122_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61130,G__61131) : cljs.analyzer.analyze.call(null,G__61130,G__61131));\n}),exprs__$1));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61128);\n}})();\nif(cljs.core.truth_(frame)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't recur here\");\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs__$2),cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"recur argument count mismatch, expected: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame))),\" args, got: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(exprs__$2))].join(''));\n}\n\nif(cljs.core.truth_((function (){var and__4115__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(add_implicit_target_object_QMARK_);\n} else {\nreturn and__4115__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(cljs.core.first(exprs__$2))], null));\n} else {\n}\n\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(frame),true);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(frame),(function (tags){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((function (tag,expr){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724).cljs$core$IFn$_invoke$arity$1(expr))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr));\n}\n}),tags,exprs__$2);\n}));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588),frame,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094),exprs__$2,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094)], null)], 0));\n}));\ncljs.analyzer.analyze_const = (function cljs$analyzer$analyze_const(env,form){\nvar map__61132 = (function (){var G__61133 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621),true);\nvar G__61134 = form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61133,G__61134) : cljs.analyzer.analyze.call(null,G__61133,G__61134));\n})();\nvar map__61132__$1 = (((((!((map__61132 == null))))?(((((map__61132.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61132.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61132):map__61132);\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61132__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"literal?\",\"literal?\",352485871),true,new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(function (_,env,p__61136,___$1,___$2){\nvar vec__61137 = p__61136;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61137,(0),null);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61137,(1),null);\nvar form = vec__61137;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to quote\");\n} else {\n}\n\nvar expr = cljs.analyzer.analyze_const(env,x);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),(function (_,env,p__61141,___$1,___$2){\nvar vec__61142 = p__61141;\nvar seq__61143 = cljs.core.seq(vec__61142);\nvar first__61144 = cljs.core.first(seq__61143);\nvar seq__61143__$1 = cljs.core.next(seq__61143);\nvar ___$3 = first__61144;\nvar first__61144__$1 = cljs.core.first(seq__61143__$1);\nvar seq__61143__$2 = cljs.core.next(seq__61143__$1);\nvar ctor = first__61144__$1;\nvar args = seq__61143__$2;\nvar form = vec__61142;\nvar _STAR_recur_frames_STAR__orig_val__61145 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61146 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61146);\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ctorexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,ctor) : cljs.analyzer.analyze.call(null,enve,ctor));\nvar ctor_var = (cljs.core.truth_((function (){var G__61148 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ctorexpr);\nvar fexpr__61147 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),null,new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),null,new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),null], null), null);\nreturn (fexpr__61147.cljs$core$IFn$_invoke$arity$1 ? fexpr__61147.cljs$core$IFn$_invoke$arity$1(G__61148) : fexpr__61147.call(null,G__61148));\n})())?cljs.analyzer.resolve_existing_var(env,ctor):null);\nvar record_args = (cljs.core.truth_((function (){var and__4115__auto__ = new cljs.core.Keyword(null,\"record\",\"record\",-779106859).cljs$core$IFn$_invoke$arity$1(ctor_var);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)));\n} else {\nreturn and__4115__auto__;\n}\n})())?cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((3),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,null) : cljs.analyzer.analyze.call(null,enve,null))):null);\nvar argexprs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__61140_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__61140_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__61140_SHARP_));\n}),args)),record_args);\nvar known_num_fields = new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024).cljs$core$IFn$_invoke$arity$1(ctor_var);\nvar argc = cljs.core.count(args);\nif(((cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)))) && ((!((known_num_fields == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(known_num_fields,argc)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802),ctor], null));\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"new\",\"new\",-2085437848),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),ctorexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),(function (){var name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(ctorexpr));\nvar or__4126__auto__ = (function (){var fexpr__61150 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(\"js\",\"Object\",\"js/Object\",61215323,null),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(\"js\",\"String\",\"js/String\",-2070054036,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"js\",\"Array\",\"js/Array\",-423508366,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(\"js\",\"Number\",\"js/Number\",-508133572,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"js\",\"Function\",\"js/Function\",-749892063,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(\"js\",\"Boolean\",\"js/Boolean\",1661145260,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null);\nreturn (fexpr__61150.cljs$core$IFn$_invoke$arity$1 ? fexpr__61150.cljs$core$IFn$_invoke$arity$1(name) : fexpr__61150.call(null,name));\n})();\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn name;\n}\n})()], null);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61145);\n}}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),(function (_,env,p__61151,___$1,___$2){\nvar vec__61152 = p__61151;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61152,(0),null);\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61152,(1),null);\nvar val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61152,(2),null);\nvar alt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61152,(3),null);\nvar form = vec__61152;\nvar vec__61155 = (cljs.core.truth_(alt)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),null,(1),null)),(new cljs.core.List(null,target,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,val,null,(1),null))], 0)))),alt], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,val], null));\nvar target__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61155,(0),null);\nvar val__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61155,(1),null);\nvar _STAR_recur_frames_STAR__orig_val__61158 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61159 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61159);\n\ntry{var _STAR_private_var_access_nowarn_STAR__orig_val__61160 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__61161 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__61161);\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar texpr = (((target__$1 instanceof cljs.core.Symbol))?(function (){\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null))) && (((val__$1 === true) || (val__$1 === false))))){\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_cljs_warnings_STAR_,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),val__$1));\n} else {\n}\n}\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),target__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! a constant\");\n} else {\n}\n\nvar local_62376 = cljs.analyzer.handle_symbol_local(target__$1,(function (){var G__61162 = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nreturn (target__$1.cljs$core$IFn$_invoke$arity$1 ? target__$1.cljs$core$IFn$_invoke$arity$1(G__61162) : target__$1.call(null,G__61162));\n})());\nif(cljs.core.truth_((function (){var or__4126__auto__ = (local_62376 == null);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nvar and__4115__auto__ = new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(local_62376);\nif(cljs.core.truth_(and__4115__auto__)){\nvar or__4126__auto____$1 = new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(local_62376);\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nvar or__4126__auto____$2 = new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(local_62376);\nif(cljs.core.truth_(or__4126__auto____$2)){\nreturn or__4126__auto____$2;\n} else {\nreturn new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(local_62376);\n}\n}\n} else {\nreturn and__4115__auto__;\n}\n}\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! local var or non-mutable field\");\n}\n\nreturn (cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze_symbol.call(null,enve,target__$1));\n})()\n:((cljs.core.seq_QMARK_(target__$1))?(function (){var texpr = (cljs.core.truth_(new cljs.core.Keyword(null,\"extend-type\",\"extend-type\",-517175606).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(target__$1)))?(function (){var _STAR_cljs_warnings_STAR__orig_val__61163 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__61164 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_cljs_warnings_STAR_,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),false);\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__61164);\n\ntry{return (cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve,target__$1,null) : cljs.analyzer.analyze_seq.call(null,enve,target__$1,null));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__61163);\n}})():(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve,target__$1,null) : cljs.analyzer.analyze_seq.call(null,enve,target__$1,null)));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(texpr))){\nreturn texpr;\n} else {\nreturn null;\n}\n})():null)\n);\nvar vexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,val__$1) : cljs.analyzer.analyze.call(null,enve,val__$1));\nif(cljs.core.seq_QMARK_(target__$1)){\nvar sym_62377 = (function (){var G__61165 = target__$1;\nif((G__61165 == null)){\nreturn null;\n} else {\nreturn cljs.core.second(G__61165);\n}\n})();\nvar meta_62378 = cljs.core.meta(sym_62377);\nvar temp__5735__auto___62379 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(vexpr)))?new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(meta_62378):false);\nif(cljs.core.truth_(temp__5735__auto___62379)){\nvar info_62380 = temp__5735__auto___62379;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym_62377,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(info_62380,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null)),cljs.core.select_keys(cljs.core.first(new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(vexpr)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0))], 0));\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(texpr)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"set! target must be a field or a symbol naming a var\");\n}\n\nif(((cljs.core.not(new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env))) && ((!(((function (){var fexpr__61167 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null),\"null\"], null), null);\nreturn (fexpr__61167.cljs$core$IFn$_invoke$arity$1 ? fexpr__61167.cljs$core$IFn$_invoke$arity$1(target__$1) : fexpr__61167.call(null,target__$1));\n})() == null)))))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"no-op\",\"no-op\",-93046065)], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set!\",\"set!\",-1389817006),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),texpr,new cljs.core.Keyword(null,\"val\",\"val\",128701612),vexpr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"val\",\"val\",128701612)], null)], null);\n\n}\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__61160);\n}}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61158);\n}}));\ncljs.analyzer.foreign_dep_QMARK_ = (function cljs$analyzer$foreign_dep_QMARK_(dep){\nvar js_index = new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\nvar temp__5737__auto__ = cljs.core.find(js_index,cljs.core.name(dep));\nif((temp__5737__auto__ == null)){\nreturn false;\n} else {\nvar vec__61168 = temp__5737__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61168,(0),null);\nvar map__61171 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61168,(1),null);\nvar map__61171__$1 = (((((!((map__61171 == null))))?(((((map__61171.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61171.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61171):map__61171);\nvar foreign = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61171__$1,new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149));\nreturn foreign;\n}\n});\n/**\n * Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n * and opts, compiler options - analyze all of the dependencies. Required to\n * correctly analyze usage of other namespaces.\n */\ncljs.analyzer.analyze_deps = (function cljs$analyzer$analyze_deps(var_args){\nvar G__61175 = arguments.length;\nswitch (G__61175) {\ncase 3:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3 = (function (lib,deps,env){\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(lib,deps,env,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4 = (function (lib,deps,env,opts){\nvar compiler = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar _STAR_cljs_dep_set_STAR__orig_val__61176 = cljs.analyzer._STAR_cljs_dep_set_STAR_;\nvar _STAR_cljs_dep_set_STAR__temp_val__61177 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_cljs_dep_set_STAR_,lib),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558)], null),cljs.core.conj,lib);\n(cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__temp_val__61177);\n\ntry{if(cljs.core.every_QMARK_((function (p1__61173_SHARP_){\nreturn (!(cljs.core.contains_QMARK_(cljs.analyzer._STAR_cljs_dep_set_STAR_,p1__61173_SHARP_)));\n}),deps)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Circular dependency detected, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\" -> \",cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.analyzer._STAR_cljs_dep_set_STAR_)),cljs.core.some(cljs.analyzer._STAR_cljs_dep_set_STAR_,deps)))))].join(''),\"\\n\",\"(every? (fn* [p1__61173#] (not (contains? *cljs-dep-set* p1__61173#))) deps)\"].join('')));\n}\n\nvar seq__61178 = cljs.core.seq(deps);\nvar chunk__61179 = null;\nvar count__61180 = (0);\nvar i__61181 = (0);\nwhile(true){\nif((i__61181 < count__61180)){\nvar dep = chunk__61179.cljs$core$IIndexed$_nth$arity$2(null,i__61181);\nif(cljs.core.truth_((function (){var or__4126__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4126__auto____$1){\nreturn or__4126__auto____$1;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n})())){\n} else {\nif(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler),cljs.core.name(dep))){\nvar dep_name_62392 = cljs.core.name(dep);\nif(clojure.string.starts_with_QMARK_(dep_name_62392,\"goog.\")){\n} else {\n}\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep)], null)));\n}\n}\n\n\nvar G__62393 = seq__61178;\nvar G__62394 = chunk__61179;\nvar G__62395 = count__61180;\nvar G__62396 = (i__61181 + (1));\nseq__61178 = G__62393;\nchunk__61179 = G__62394;\ncount__61180 = G__62395;\ni__61181 = G__62396;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__61178);\nif(temp__5735__auto__){\nvar seq__61178__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61178__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__61178__$1);\nvar G__62397 = cljs.core.chunk_rest(seq__61178__$1);\nvar G__62398 = c__4556__auto__;\nvar G__62399 = cljs.core.count(c__4556__auto__);\nvar G__62400 = (0);\nseq__61178 = G__62397;\nchunk__61179 = G__62398;\ncount__61180 = G__62399;\ni__61181 = G__62400;\ncontinue;\n} else {\nvar dep = cljs.core.first(seq__61178__$1);\nif(cljs.core.truth_((function (){var or__4126__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4126__auto____$1){\nreturn or__4126__auto____$1;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n})())){\n} else {\nif(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler),cljs.core.name(dep))){\nvar dep_name_62401 = cljs.core.name(dep);\nif(clojure.string.starts_with_QMARK_(dep_name_62401,\"goog.\")){\n} else {\n}\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep)], null)));\n}\n}\n\n\nvar G__62402 = cljs.core.next(seq__61178__$1);\nvar G__62403 = null;\nvar G__62404 = (0);\nvar G__62405 = (0);\nseq__61178 = G__62402;\nchunk__61179 = G__62403;\ncount__61180 = G__62404;\ni__61181 = G__62405;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {(cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__orig_val__61176);\n}}));\n\n(cljs.analyzer.analyze_deps.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.missing_use_QMARK_ = (function cljs$analyzer$missing_use_QMARK_(lib,sym,cenv){\nvar js_lib = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cenv,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.name(lib)], null));\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),lib,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150)),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150))) && ((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"group\",\"group\",582596132)),new cljs.core.Keyword(null,\"goog\",\"goog\",-1711135452))))) && (cljs.core.not(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"closure-lib\",\"closure-lib\",2105917916)))) && ((!(cljs.analyzer.node_module_dep_QMARK_(lib)))) && ((!(cljs.analyzer.dep_has_global_exports_QMARK_(lib)))));\n});\ncljs.analyzer.missing_rename_QMARK_ = (function cljs$analyzer$missing_rename_QMARK_(sym,cenv){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym__$1,cenv);\n});\ncljs.analyzer.missing_use_macro_QMARK_ = (function cljs$analyzer$missing_use_macro_QMARK_(lib,sym){\nif((lib instanceof cljs.core.Symbol)){\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym) == null)));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.missing_rename_macro_QMARK_ = (function cljs$analyzer$missing_rename_macro_QMARK_(sym){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym__$1) == null)));\n});\ncljs.analyzer.missing_uses = (function cljs$analyzer$missing_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__61182){\nvar vec__61183 = p__61182;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61183,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61183,(1),null);\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym,cenv);\n}),uses));\n});\ncljs.analyzer.missing_renames = (function cljs$analyzer$missing_renames(renames,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__61186){\nvar vec__61187 = p__61186;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61187,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61187,(1),null);\nreturn cljs.analyzer.missing_rename_QMARK_(qualified_sym,cenv);\n}),renames));\n});\ncljs.analyzer.missing_use_macros = (function cljs$analyzer$missing_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__61190){\nvar vec__61191 = p__61190;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61191,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61191,(1),null);\nreturn cljs.analyzer.missing_use_macro_QMARK_(lib,sym);\n}),use_macros));\n});\ncljs.analyzer.inferred_use_macros = (function cljs$analyzer$inferred_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__61194){\nvar vec__61195 = p__61194;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61195,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61195,(1),null);\nreturn cljs.core.not(cljs.analyzer.missing_use_macro_QMARK_(lib,sym));\n}),use_macros));\n});\ncljs.analyzer.inferred_rename_macros = (function cljs$analyzer$inferred_rename_macros(rename_macros,env){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__61198){\nvar vec__61199 = p__61198;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61199,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61199,(1),null);\nreturn (!(cljs.analyzer.missing_rename_macro_QMARK_(qualified_sym)));\n}),rename_macros));\n});\ncljs.analyzer.check_uses = (function cljs$analyzer$check_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__61202 = cljs.core.seq(uses);\nvar chunk__61203 = null;\nvar count__61204 = (0);\nvar i__61205 = (0);\nwhile(true){\nif((i__61205 < count__61204)){\nvar vec__61212 = chunk__61203.cljs$core$IIndexed$_nth$arity$2(null,i__61205);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61212,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61212,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null)));\n} else {\n}\n\n\nvar G__62412 = seq__61202;\nvar G__62413 = chunk__61203;\nvar G__62414 = count__61204;\nvar G__62415 = (i__61205 + (1));\nseq__61202 = G__62412;\nchunk__61203 = G__62413;\ncount__61204 = G__62414;\ni__61205 = G__62415;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__61202);\nif(temp__5735__auto__){\nvar seq__61202__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61202__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__61202__$1);\nvar G__62416 = cljs.core.chunk_rest(seq__61202__$1);\nvar G__62417 = c__4556__auto__;\nvar G__62418 = cljs.core.count(c__4556__auto__);\nvar G__62419 = (0);\nseq__61202 = G__62416;\nchunk__61203 = G__62417;\ncount__61204 = G__62418;\ni__61205 = G__62419;\ncontinue;\n} else {\nvar vec__61215 = cljs.core.first(seq__61202__$1);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61215,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61215,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null)));\n} else {\n}\n\n\nvar G__62420 = cljs.core.next(seq__61202__$1);\nvar G__62421 = null;\nvar G__62422 = (0);\nvar G__62423 = (0);\nseq__61202 = G__62420;\nchunk__61203 = G__62421;\ncount__61204 = G__62422;\ni__61205 = G__62423;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.check_use_macros = (function cljs$analyzer$check_use_macros(var_args){\nvar G__61219 = arguments.length;\nswitch (G__61219) {\ncase 2:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2 = (function (use_macros,env){\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,null,env);\n}));\n\n(cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3 = (function (use_macros,missing_uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__61220_62425 = cljs.core.seq(use_macros);\nvar chunk__61221_62426 = null;\nvar count__61222_62427 = (0);\nvar i__61223_62428 = (0);\nwhile(true){\nif((i__61223_62428 < count__61222_62427)){\nvar vec__61230_62429 = chunk__61221_62426.cljs$core$IIndexed$_nth$arity$2(null,i__61223_62428);\nvar sym_62430 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61230_62429,(0),null);\nvar lib_62431 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61230_62429,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_62431,sym_62430))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_62431,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_62430], null)));\n} else {\n}\n\n\nvar G__62432 = seq__61220_62425;\nvar G__62433 = chunk__61221_62426;\nvar G__62434 = count__61222_62427;\nvar G__62435 = (i__61223_62428 + (1));\nseq__61220_62425 = G__62432;\nchunk__61221_62426 = G__62433;\ncount__61222_62427 = G__62434;\ni__61223_62428 = G__62435;\ncontinue;\n} else {\nvar temp__5735__auto___62436 = cljs.core.seq(seq__61220_62425);\nif(temp__5735__auto___62436){\nvar seq__61220_62437__$1 = temp__5735__auto___62436;\nif(cljs.core.chunked_seq_QMARK_(seq__61220_62437__$1)){\nvar c__4556__auto___62438 = cljs.core.chunk_first(seq__61220_62437__$1);\nvar G__62440 = cljs.core.chunk_rest(seq__61220_62437__$1);\nvar G__62441 = c__4556__auto___62438;\nvar G__62442 = cljs.core.count(c__4556__auto___62438);\nvar G__62443 = (0);\nseq__61220_62425 = G__62440;\nchunk__61221_62426 = G__62441;\ncount__61222_62427 = G__62442;\ni__61223_62428 = G__62443;\ncontinue;\n} else {\nvar vec__61233_62445 = cljs.core.first(seq__61220_62437__$1);\nvar sym_62446 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61233_62445,(0),null);\nvar lib_62447 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61233_62445,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_62447,sym_62446))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_62447,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_62446], null)));\n} else {\n}\n\n\nvar G__62448 = cljs.core.next(seq__61220_62437__$1);\nvar G__62449 = null;\nvar G__62450 = (0);\nvar G__62451 = (0);\nseq__61220_62425 = G__62448;\nchunk__61221_62426 = G__62449;\ncount__61222_62427 = G__62450;\ni__61223_62428 = G__62451;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.analyzer.check_uses(cljs.analyzer.missing_use_macros(missing_uses,env),env);\n\nreturn cljs.analyzer.inferred_use_macros(missing_uses,env);\n}));\n\n(cljs.analyzer.check_use_macros.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.check_use_macros_inferring_missing = (function cljs$analyzer$check_use_macros_inferring_missing(p__61239,env){\nvar map__61240 = p__61239;\nvar map__61240__$1 = (((((!((map__61240 == null))))?(((((map__61240.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61240.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61240):map__61240);\nvar ast = map__61240__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61240__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61240__$1,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61240__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar missing_uses = (cljs.core.truth_((function (){var and__4115__auto__ = cljs.analyzer._STAR_analyze_deps_STAR_;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.seq(uses);\n} else {\nreturn and__4115__auto__;\n}\n})())?cljs.analyzer.missing_uses(uses,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,uses,cljs.core.keys(missing_uses));\nvar remove_missing_uses = (function (p1__61236_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__61236_SHARP_,cljs.core.keys(missing_uses));\n});\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),(function (p1__61237_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__61237_SHARP_,cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,missing_uses,env)], 0)),cljs.analyzer.inferred_use_macros(maybe_macros,env)], 0));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (p1__61238_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__61238_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),cljs.core.merge,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\n}));\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.check_rename_macros_inferring_missing = (function cljs$analyzer$check_rename_macros_inferring_missing(p__61245,env){\nvar map__61246 = p__61245;\nvar map__61246__$1 = (((((!((map__61246 == null))))?(((((map__61246.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61246.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61246):map__61246);\nvar ast = map__61246__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61246__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61246__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar missing_renames = (cljs.core.truth_((function (){var and__4115__auto__ = cljs.analyzer._STAR_analyze_deps_STAR_;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.seq(renames);\n} else {\nreturn and__4115__auto__;\n}\n})())?cljs.analyzer.missing_renames(renames,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,renames,cljs.core.keys(missing_renames));\nvar missing_rename_macros = cljs.analyzer.inferred_rename_macros(missing_renames,env);\nvar remove_missing_renames = (function (p1__61242_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__61242_SHARP_,cljs.core.keys(missing_renames));\n});\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),(function (p1__61243_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__61243_SHARP_,missing_rename_macros], 0)),cljs.analyzer.inferred_rename_macros(maybe_macros,env)], 0));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (p1__61244_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__61244_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),cljs.core.merge,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\n}));\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.parse_ns_error_msg = (function cljs$analyzer$parse_ns_error_msg(spec,msg){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\"; offending spec: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([spec], 0))].join('');\n});\ncljs.analyzer.basic_validate_ns_spec = (function cljs$analyzer$basic_validate_ns_spec(env,macros_QMARK_,spec){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string') || (cljs.core.sequential_QMARK_(spec)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"));\n}\n\nif(cljs.core.sequential_QMARK_(spec)){\nif((((cljs.core.first(spec) instanceof cljs.core.Symbol)) || (typeof cljs.core.first(spec) === 'string'))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Library name must be specified as a symbol in :require / :require-macros\"));\n}\n\nif(cljs.core.odd_QMARK_(cljs.core.count(spec))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"));\n}\n\nif(cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),cljs.core.next(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as, :refer and :rename options supported in :require / :require-macros\"));\n}\n\nif((function (){var fs = cljs.core.frequencies(cljs.core.next(spec));\nreturn ((((fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"as\",\"as\",1148689641),(0)) : fs.call(null,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),(0))) <= (1))) && (((fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),(0)) : fs.call(null,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),(0))) <= (1))));\n})()){\nreturn null;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :as and :refer options may only be specified once in :require / :require-macros\"));\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.parse_ns_excludes = (function cljs$analyzer$parse_ns_excludes(env,args){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (s,p__61249){\nvar vec__61250 = p__61249;\nvar seq__61251 = cljs.core.seq(vec__61250);\nvar first__61252 = cljs.core.first(seq__61251);\nvar seq__61251__$1 = cljs.core.next(seq__61251);\nvar k = first__61252;\nvar filters = seq__61251__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440))){\nif(cljs.core.seq(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(s))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only one :refer-clojure form is allowed per namespace definition\");\n} else {\n}\n\nvar valid_kws = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null);\nvar xs = (function (){var fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null);\nvar err = (!(cljs.core.even_QMARK_(cljs.core.count(filters))));\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\");\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nif(cljs.core.truth_((valid_kws.cljs$core$IFn$_invoke$arity$1 ? valid_kws.cljs$core$IFn$_invoke$arity$1(kw) : valid_kws.call(null,kw)))){\nvar refs = cljs.core.second(fs);\nif((!(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))) && (cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,valid_kws,vec__61250,seq__61251,first__61252,seq__61251__$1,k,filters){\nreturn (function (p1__61248_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__61248_SHARP_);\n});})(fs,ret,err,refs,kw,valid_kws,vec__61250,seq__61251,first__61252,seq__61251__$1,k,filters))\n,refs)))))))){\nvar G__62459 = fs;\nvar G__62460 = ret;\nvar G__62461 = true;\nfs = G__62459;\nret = G__62460;\nerr = G__62461;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))){\nvar G__62462 = cljs.core.nnext(fs);\nvar G__62463 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),cljs.core.into,refs);\nvar G__62464 = false;\nfs = G__62462;\nret = G__62463;\nerr = G__62464;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))){\nvar G__62465 = cljs.core.nnext(fs);\nvar G__62466 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),cljs.core.merge,refs);\nvar G__62467 = false;\nfs = G__62465;\nret = G__62466;\nerr = G__62467;\ncontinue;\n} else {\nreturn null;\n}\n}\n}\n} else {\nvar G__62468 = fs;\nvar G__62469 = ret;\nvar G__62470 = true;\nfs = G__62468;\nret = G__62469;\nerr = G__62470;\ncontinue;\n}\n} else {\nreturn ret;\n\n}\n}\nbreak;\n}\n})();\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.into,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s,xs], 0));\n} else {\nreturn s;\n}\n}),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null),args);\n});\ncljs.analyzer.use__GT_require = (function cljs$analyzer$use__GT_require(env,p__61254){\nvar vec__61255 = p__61254;\nvar seq__61256 = cljs.core.seq(vec__61255);\nvar first__61257 = cljs.core.first(seq__61256);\nvar seq__61256__$1 = cljs.core.next(seq__61256);\nvar lib = first__61257;\nvar filters = seq__61256__$1;\nvar spec = vec__61255;\nif((((lib instanceof cljs.core.Symbol)) && (cljs.core.odd_QMARK_(cljs.core.count(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n}\n\nvar fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib], null);\nvar err = false;\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nvar only_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"only\",\"only\",1907811652));\nif(((only_QMARK_) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))))){\nif((!((cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw)]),ret) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :only and :rename options may only be specified once in :use / :use-macros\"));\n} else {\nvar refs = cljs.core.second(fs);\nif((!(((((only_QMARK_) && (cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,only_QMARK_,vec__61255,seq__61256,first__61257,seq__61256__$1,lib,filters,spec){\nreturn (function (p1__61253_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__61253_SHARP_);\n});})(fs,ret,err,refs,kw,only_QMARK_,vec__61255,seq__61256,first__61257,seq__61256__$1,lib,filters,spec))\n,refs)))))))){\nvar G__62473 = fs;\nvar G__62474 = ret;\nvar G__62475 = true;\nfs = G__62473;\nret = G__62474;\nerr = G__62475;\ncontinue;\n} else {\nvar G__62476 = cljs.core.nnext(fs);\nvar G__62477 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw),refs], null));\nvar G__62478 = false;\nfs = G__62476;\nret = G__62477;\nerr = G__62478;\ncontinue;\n}\n}\n} else {\nvar G__62480 = fs;\nvar G__62481 = ret;\nvar G__62482 = true;\nfs = G__62480;\nret = G__62481;\nerr = G__62482;\ncontinue;\n}\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),ret) == null)))){\nreturn ret;\n} else {\nvar G__62488 = fs;\nvar G__62489 = ret;\nvar G__62490 = true;\nfs = G__62488;\nret = G__62489;\nerr = G__62490;\ncontinue;\n}\n\n}\n}\nbreak;\n}\n});\ncljs.analyzer.parse_require_spec = (function cljs$analyzer$parse_require_spec(env,macros_QMARK_,deps,aliases,spec){\nwhile(true){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string'))){\nvar G__62493 = env;\nvar G__62494 = macros_QMARK_;\nvar G__62495 = deps;\nvar G__62496 = aliases;\nvar G__62497 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\nenv = G__62493;\nmacros_QMARK_ = G__62494;\ndeps = G__62495;\naliases = G__62496;\nspec = G__62497;\ncontinue;\n} else {\ncljs.analyzer.basic_validate_ns_spec(env,macros_QMARK_,spec);\n\nvar vec__61258 = spec;\nvar seq__61259 = cljs.core.seq(vec__61258);\nvar first__61260 = cljs.core.first(seq__61259);\nvar seq__61259__$1 = cljs.core.next(seq__61259);\nvar lib = first__61260;\nvar opts = seq__61259__$1;\nvar vec__61261 = (function (){var temp__5737__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib),new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif((temp__5737__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib,null], null);\n} else {\nvar js_module_name = temp__5737__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(js_module_name),lib], null);\n}\n})();\nvar lib__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61261,(0),null);\nvar js_module_provides = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61261,(1),null);\nvar map__61264 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts);\nvar map__61264__$1 = (((((!((map__61264 == null))))?(((((map__61264.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61264.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61264):map__61264);\nvar alias = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__61264__$1,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),((typeof lib__$1 === 'string')?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(lib__$1)):lib__$1));\nvar referred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61264__$1,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553));\nvar renamed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61264__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar referred_without_renamed = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(renamed)),referred));\nvar vec__61265 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613)], null));\nvar rk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61265,(0),null);\nvar uk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61265,(1),null);\nvar renk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61265,(2),null);\nif((((alias instanceof cljs.core.Symbol)) || ((alias == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as must be followed by a symbol in :require / :require-macros\"));\n}\n\nif((!((alias == null)))){\nvar alias_type_62499 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.Keyword(null,\"macros\",\"macros\",811339431):new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786));\nvar lib_SINGLEQUOTE__62500 = (function (){var fexpr__61269 = alias_type_62499.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(aliases));\nreturn (fexpr__61269.cljs$core$IFn$_invoke$arity$1 ? fexpr__61269.cljs$core$IFn$_invoke$arity$1(alias) : fexpr__61269.call(null,alias));\n})();\nif((((!((lib_SINGLEQUOTE__62500 == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(lib__$1,lib_SINGLEQUOTE__62500)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as alias must be unique\"));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(aliases,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias_type_62499], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias,lib__$1], null),(cljs.core.truth_(js_module_provides)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_module_provides,lib__$1], null):null)], 0));\n} else {\n}\n\nif(((((cljs.core.sequential_QMARK_(referred)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,referred)))) || ((referred == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":refer must be followed by a sequence of symbols in :require / :require-macros\"));\n}\n\nif(cljs.core.truth_(macros_QMARK_)){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,lib__$1);\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(((!((alias == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([rk,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.createAsIfByAssoc([alias,lib__$1]),cljs.core.PersistentArrayMap.createAsIfByAssoc([lib__$1,lib__$1]),(cljs.core.truth_(js_module_provides)?cljs.core.PersistentArrayMap.createAsIfByAssoc([js_module_provides,lib__$1]):null)], 0))]):null),(((!((referred_without_renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([uk,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(referred_without_renamed,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(lib__$1)))]):null),(((!((renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([renk,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (env,macros_QMARK_,deps,aliases,spec,vec__61258,seq__61259,first__61260,seq__61259__$1,lib,opts,vec__61261,lib__$1,js_module_provides,map__61264,map__61264__$1,alias,referred,renamed,referred_without_renamed,vec__61265,rk,uk,renk){\nreturn (function (m,p__61270){\nvar vec__61271 = p__61270;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61271,(0),null);\nvar renamed__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61271,(1),null);\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([original]),referred))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Renamed symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original),\" not referred\"].join(''));\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed__$1,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n});})(env,macros_QMARK_,deps,aliases,spec,vec__61258,seq__61259,first__61260,seq__61259__$1,lib,opts,vec__61261,lib__$1,js_module_provides,map__61264,map__61264__$1,alias,referred,renamed,referred_without_renamed,vec__61265,rk,uk,renk))\n,cljs.core.PersistentArrayMap.EMPTY,renamed)]):null)], 0));\n}\nbreak;\n}\n});\ncljs.analyzer.parse_import_spec = (function cljs$analyzer$parse_import_spec(env,deps,spec){\nif(((((cljs.core.sequential_QMARK_(spec)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,spec)))) || ((((spec instanceof cljs.core.Symbol)) && ((cljs.core.namespace(spec) == null)))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"));\n}\n\nvar import_map = ((cljs.core.sequential_QMARK_(spec))?cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__61274_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__61274_SHARP_,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(spec)),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__61274_SHARP_)].join(''))],null));\n}),cljs.core.rest(spec))):(((!(((-1) === cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec).indexOf(\".\")))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec),/\\./))),spec]):cljs.core.PersistentArrayMap.EMPTY\n));\nvar seq__61275_62505 = cljs.core.seq(import_map);\nvar chunk__61276_62506 = null;\nvar count__61277_62507 = (0);\nvar i__61278_62508 = (0);\nwhile(true){\nif((i__61278_62508 < count__61277_62507)){\nvar vec__61285_62509 = chunk__61276_62506.cljs$core$IIndexed$_nth$arity$2(null,i__61278_62508);\nvar __62510 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61285_62509,(0),null);\nvar spec_62511__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61285_62509,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_62511__$1);\n\n\nvar G__62512 = seq__61275_62505;\nvar G__62513 = chunk__61276_62506;\nvar G__62514 = count__61277_62507;\nvar G__62515 = (i__61278_62508 + (1));\nseq__61275_62505 = G__62512;\nchunk__61276_62506 = G__62513;\ncount__61277_62507 = G__62514;\ni__61278_62508 = G__62515;\ncontinue;\n} else {\nvar temp__5735__auto___62516 = cljs.core.seq(seq__61275_62505);\nif(temp__5735__auto___62516){\nvar seq__61275_62517__$1 = temp__5735__auto___62516;\nif(cljs.core.chunked_seq_QMARK_(seq__61275_62517__$1)){\nvar c__4556__auto___62518 = cljs.core.chunk_first(seq__61275_62517__$1);\nvar G__62519 = cljs.core.chunk_rest(seq__61275_62517__$1);\nvar G__62520 = c__4556__auto___62518;\nvar G__62521 = cljs.core.count(c__4556__auto___62518);\nvar G__62522 = (0);\nseq__61275_62505 = G__62519;\nchunk__61276_62506 = G__62520;\ncount__61277_62507 = G__62521;\ni__61278_62508 = G__62522;\ncontinue;\n} else {\nvar vec__61288_62523 = cljs.core.first(seq__61275_62517__$1);\nvar __62524 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61288_62523,(0),null);\nvar spec_62525__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61288_62523,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_62525__$1);\n\n\nvar G__62526 = cljs.core.next(seq__61275_62517__$1);\nvar G__62527 = null;\nvar G__62528 = (0);\nvar G__62529 = (0);\nseq__61275_62505 = G__62526;\nchunk__61276_62506 = G__62527;\ncount__61277_62507 = G__62528;\ni__61278_62508 = G__62529;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),import_map,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),import_map], null);\n});\n/**\n * Given a spec form check whether the spec namespace requires a macro file\n * of the same name. If so return true.\n */\ncljs.analyzer.macro_autoload_ns_QMARK_ = (function cljs$analyzer$macro_autoload_ns_QMARK_(form){\nif(cljs.core.truth_(cljs.analyzer._STAR_macro_infer_STAR_)){\nvar ns = ((cljs.core.sequential_QMARK_(form))?cljs.core.first(form):form);\nvar map__61291 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null));\nvar map__61291__$1 = (((((!((map__61291 == null))))?(((((map__61291.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61291.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61291):map__61291);\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61291__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61291__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar or__4126__auto__ = cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(use_macros));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(require_macros));\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given a symbol that starts with clojure as the first segment return the\n * same symbol with the first segment replaced with cljs\n */\ncljs.analyzer.clj_ns__GT_cljs_ns = (function cljs$analyzer$clj_ns__GT_cljs_ns(sym){\nvar segs = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure\",cljs.core.first(segs))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.cons(\"cljs\",cljs.core.next(segs))));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.canonicalize_specs = (function cljs$analyzer$canonicalize_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nvar spec = cljs.core.second(quoted_spec_or_kw);\nif(((cljs.core.vector_QMARK_(spec)) || (cljs.core.map_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\n}\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\ncljs.analyzer.canonicalize_import_specs = (function cljs$analyzer$canonicalize_import_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_import_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nreturn cljs.core.second(quoted_spec_or_kw);\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\n/**\n * Given an original set of ns specs desugar :include-macros and :refer-macros\n * usage into only primitive spec forms - :use, :require, :use-macros,\n * :require-macros. If a library includes a macro file of with the same name\n * as the namespace will also be desugared.\n */\ncljs.analyzer.desugar_ns_specs = (function cljs$analyzer$desugar_ns_specs(args){\nvar map__61294 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__61295){\nvar vec__61296 = p__61295;\nvar seq__61297 = cljs.core.seq(vec__61296);\nvar first__61298 = cljs.core.first(seq__61297);\nvar seq__61297__$1 = cljs.core.next(seq__61297);\nvar k = first__61298;\nvar specs = seq__61297__$1;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,specs)], null);\n}),args));\nvar map__61294__$1 = (((((!((map__61294 == null))))?(((((map__61294.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61294.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61294):map__61294);\nvar indexed = map__61294__$1;\nvar require = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61294__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar sugar_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953),null], null), null);\nvar remove_from_spec = (function (pred,spec){\nwhile(true){\nif(cljs.core.not(((cljs.core.sequential_QMARK_(spec))?cljs.core.some(pred,spec):false))){\nreturn spec;\n} else {\nvar vec__61300 = cljs.core.split_with(cljs.core.complement(pred),spec);\nvar l = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61300,(0),null);\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61300,(1),null);\nvar G__62533 = pred;\nvar G__62534 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(l,cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),r));\npred = G__62533;\nspec = G__62534;\ncontinue;\n}\nbreak;\n}\n});\nvar replace_refer_macros = (function (spec){\nif((!(cljs.core.sequential_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953))){\nreturn new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553);\n} else {\nreturn x;\n}\n}),spec);\n}\n});\nvar reload_spec_QMARK_ = (function (p1__61293_SHARP_){\nvar fexpr__61303 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null);\nreturn (fexpr__61303.cljs$core$IFn$_invoke$arity$1 ? fexpr__61303.cljs$core$IFn$_invoke$arity$1(p1__61293_SHARP_) : fexpr__61303.call(null,p1__61293_SHARP_));\n});\nvar to_macro_specs = (function (specs){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nreturn replace_refer_macros(remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null], null), null),x))));\n} else {\nreturn x;\n}\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (x){\nvar or__4126__auto__ = ((cljs.core.sequential_QMARK_(x))?cljs.core.some(sugar_keys,x):false);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = reload_spec_QMARK_(x);\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn cljs.analyzer.macro_autoload_ns_QMARK_(x);\n}\n}\n}),specs));\n});\nvar remove_sugar = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(remove_from_spec,sugar_keys);\nvar temp__5737__auto__ = cljs.core.seq(to_macro_specs(require));\nif((temp__5737__auto__ == null)){\nreturn args;\n} else {\nvar require_specs = temp__5737__auto__;\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nvar vec__61304 = x;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61304,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61304,(1),null);\nreturn cljs.core.cons(k,cljs.core.map.cljs$core$IFn$_invoke$arity$2(remove_sugar,v));\n} else {\nreturn x;\n}\n}),cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(indexed,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentVector.EMPTY),require_specs));\n}\n});\ncljs.analyzer.find_def_clash = (function cljs$analyzer$find_def_clash(env,ns,segments){\nvar to_check = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xs){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.butlast(xs))),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(xs))], null);\n}),cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.PersistentVector.EMPTY,segments)));\nvar seq__61307 = cljs.core.seq(to_check);\nvar chunk__61308 = null;\nvar count__61309 = (0);\nvar i__61310 = (0);\nwhile(true){\nif((i__61310 < count__61309)){\nvar vec__61317 = chunk__61308.cljs$core$IIndexed$_nth$arity$2(null,i__61310);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61317,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61317,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__62537 = seq__61307;\nvar G__62538 = chunk__61308;\nvar G__62539 = count__61309;\nvar G__62540 = (i__61310 + (1));\nseq__61307 = G__62537;\nchunk__61308 = G__62538;\ncount__61309 = G__62539;\ni__61310 = G__62540;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__61307);\nif(temp__5735__auto__){\nvar seq__61307__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61307__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__61307__$1);\nvar G__62542 = cljs.core.chunk_rest(seq__61307__$1);\nvar G__62543 = c__4556__auto__;\nvar G__62544 = cljs.core.count(c__4556__auto__);\nvar G__62545 = (0);\nseq__61307 = G__62542;\nchunk__61308 = G__62543;\ncount__61309 = G__62544;\ni__61310 = G__62545;\ncontinue;\n} else {\nvar vec__61320 = cljs.core.first(seq__61307__$1);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61320,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61320,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__62548 = cljs.core.next(seq__61307__$1);\nvar G__62549 = null;\nvar G__62550 = (0);\nvar G__62551 = (0);\nseq__61307 = G__62548;\nchunk__61308 = G__62549;\ncount__61309 = G__62550;\ni__61310 = G__62551;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.macro_ns_name = (function cljs$analyzer$macro_ns_name(name){\nvar name_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);\nif(cljs.core.not(goog.string.endsWith(name_str,\"$macros\"))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([name_str,\"$macros\"].join(''));\n} else {\nreturn name;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),(function (_,env,p__61325,___$1,opts){\nvar vec__61326 = p__61325;\nvar seq__61327 = cljs.core.seq(vec__61326);\nvar first__61328 = cljs.core.first(seq__61327);\nvar seq__61327__$1 = cljs.core.next(seq__61327);\nvar ___$2 = first__61328;\nvar first__61328__$1 = cljs.core.first(seq__61327__$1);\nvar seq__61327__$2 = cljs.core.next(seq__61327__$1);\nvar name = first__61328__$1;\nvar args = seq__61327__$2;\nvar form = vec__61326;\nif(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespace declarations must appear at the top-level.\");\n}\n\nif((name instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespaces must be named by a symbol.\");\n}\n\nvar name__$1 = (function (){var G__61329 = name;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nreturn cljs.analyzer.macro_ns_name(G__61329);\n} else {\nreturn G__61329;\n}\n})();\nvar segments_62558 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name__$1),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(segments_62558))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\nvar segment_62559 = cljs.core.some(cljs.analyzer.js_reserved,segments_62558);\nif((!((segment_62559 == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\ncljs.analyzer.find_def_clash(env,name__$1,segments_62558);\n\nvar docstring = ((typeof cljs.core.first(args) === 'string')?cljs.core.first(args):null);\nvar mdocstr = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name__$1));\nvar args__$1 = (((!((docstring == null))))?cljs.core.next(args):args);\nvar metadata = ((cljs.core.map_QMARK_(cljs.core.first(args__$1)))?cljs.core.first(args__$1):null);\nvar args__$2 = cljs.analyzer.desugar_ns_specs((((!((metadata == null))))?cljs.core.next(args__$1):args__$1));\nvar name__$2 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(name__$1,cljs.core.merge,metadata);\nvar map__61330 = cljs.analyzer.parse_ns_excludes(env,args__$2);\nvar map__61330__$1 = (((((!((map__61330 == null))))?(((((map__61330.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61330.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61330):map__61330);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61330__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61330__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__61336){\nvar vec__61337 = p__61336;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61337,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61337,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n}),cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar valid_forms = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null));\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__61331 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__61340){\nvar vec__61341 = p__61340;\nvar seq__61342 = cljs.core.seq(vec__61341);\nvar first__61343 = cljs.core.first(seq__61342);\nvar seq__61342__$1 = cljs.core.next(seq__61342);\nvar k = first__61343;\nvar libs = seq__61342__$1;\nvar libspec = vec__61341;\nif(cljs.core.truth_((function (){var fexpr__61344 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null);\nreturn (fexpr__61344.cljs$core$IFn$_invoke$arity$1 ? fexpr__61344.cljs$core$IFn$_invoke$arity$1(k) : fexpr__61344.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(libspec),\" instead.\"].join(''));\n}\n\nif(cljs.core.truth_((function (){var fexpr__61345 = cljs.core.deref(valid_forms);\nreturn (fexpr__61345.cljs$core$IFn$_invoke$arity$1 ? fexpr__61345.cljs$core$IFn$_invoke$arity$1(k) : fexpr__61345.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only one \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),\" form is allowed per namespace definition\"].join(''));\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(valid_forms,cljs.core.disj,k);\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5735__auto___62577 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__61323_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__61323_SHARP_));\n}),libs));\nif(temp__5735__auto___62577){\nvar xs_62578 = temp__5735__auto___62577;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_62578),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__61324_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__61324_SHARP_));\n}),xs_62578)));\n} else {\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__61346){\nvar vec__61347 = p__61346;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61347,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n}),args__$2));\nvar map__61331__$1 = (((((!((map__61331 == null))))?(((((map__61331.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61331.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61331):map__61331);\nvar params = map__61331__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61331__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61331__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61331__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61331__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61331__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61331__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61331__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\nvar vec__61332 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (spec_map){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2),(0),(((cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2)).length) - (7))));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__61351){\nvar vec__61352 = p__61351;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61352,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61352,(1),null);\nvar G__61355 = m;\nif((!(cljs.core.symbol_identical_QMARK_(v,ns)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__61355,k,v);\n} else {\nreturn G__61355;\n}\n}),cljs.core.PersistentArrayMap.EMPTY,spec_map);\n} else {\nreturn spec_map;\n}\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [require_macros,use_macros], null));\nvar require_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61332,(0),null);\nvar use_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61332,(1),null);\n(cljs.analyzer._STAR_cljs_ns_STAR_ = name__$2);\n\nvar ns_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros__$1,excludes,name__$2,imports,requires,uses,require_macros__$1,(function (){var or__4126__auto__ = docstring;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn mdocstr;\n}\n})()]);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name__$2], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__61356 = ns_info;\nvar G__61356__$1 = (cljs.core.truth_((function (){var fexpr__61357 = cljs.core.deref(reload);\nreturn (fexpr__61357.cljs$core$IFn$_invoke$arity$1 ? fexpr__61357.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__61357.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__61356,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__61358 = cljs.core.deref(reload);\nreturn (fexpr__61358.cljs$core$IFn$_invoke$arity$1 ? fexpr__61358.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__61358.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})(),true]));\n})):G__61356);\nif(cljs.core.truth_((function (){var fexpr__61359 = cljs.core.deref(reload);\nreturn (fexpr__61359.cljs$core$IFn$_invoke$arity$1 ? fexpr__61359.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__61359.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__61356__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__61360 = cljs.core.deref(reload);\nreturn (fexpr__61360.cljs$core$IFn$_invoke$arity$1 ? fexpr__61360.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__61360.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})(),true]));\n}));\n} else {\nreturn G__61356__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.check_duplicate_aliases = (function cljs$analyzer$check_duplicate_aliases(env,old,new$){\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(old);\nvar seq__61361 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null));\nvar chunk__61362 = null;\nvar count__61363 = (0);\nvar i__61364 = (0);\nwhile(true){\nif((i__61364 < count__61363)){\nvar k = chunk__61362.cljs$core$IIndexed$_nth$arity$2(null,i__61364);\nvar old_aliases_62585 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_62586 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5739__auto___62587 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_62586)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__61361,chunk__61362,count__61363,i__61364,old_aliases_62585,new_aliases_62586,k,ns_name){\nreturn (function (p__61373){\nvar vec__61374 = p__61373;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61374,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61374,(1),null);\nvar entry = vec__61374;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_62586,k__$1))));\n});})(seq__61361,chunk__61362,count__61363,i__61364,old_aliases_62585,new_aliases_62586,k,ns_name))\n,old_aliases_62585)));\nif((temp__5739__auto___62587 == null)){\n} else {\nvar alias_62591 = temp__5739__auto___62587;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_62591),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_62585,alias_62591))].join(''));\n}\n\n\nvar G__62595 = seq__61361;\nvar G__62596 = chunk__61362;\nvar G__62597 = count__61363;\nvar G__62598 = (i__61364 + (1));\nseq__61361 = G__62595;\nchunk__61362 = G__62596;\ncount__61363 = G__62597;\ni__61364 = G__62598;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__61361);\nif(temp__5735__auto__){\nvar seq__61361__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61361__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__61361__$1);\nvar G__62600 = cljs.core.chunk_rest(seq__61361__$1);\nvar G__62601 = c__4556__auto__;\nvar G__62602 = cljs.core.count(c__4556__auto__);\nvar G__62603 = (0);\nseq__61361 = G__62600;\nchunk__61362 = G__62601;\ncount__61363 = G__62602;\ni__61364 = G__62603;\ncontinue;\n} else {\nvar k = cljs.core.first(seq__61361__$1);\nvar old_aliases_62604 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_62605 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5739__auto___62606 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_62605)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__61361,chunk__61362,count__61363,i__61364,old_aliases_62604,new_aliases_62605,k,seq__61361__$1,temp__5735__auto__,ns_name){\nreturn (function (p__61377){\nvar vec__61378 = p__61377;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61378,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61378,(1),null);\nvar entry = vec__61378;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_62605,k__$1))));\n});})(seq__61361,chunk__61362,count__61363,i__61364,old_aliases_62604,new_aliases_62605,k,seq__61361__$1,temp__5735__auto__,ns_name))\n,old_aliases_62604)));\nif((temp__5739__auto___62606 == null)){\n} else {\nvar alias_62607 = temp__5739__auto___62606;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_62607),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_62604,alias_62607))].join(''));\n}\n\n\nvar G__62608 = cljs.core.next(seq__61361__$1);\nvar G__62609 = null;\nvar G__62610 = (0);\nvar G__62611 = (0);\nseq__61361 = G__62608;\nchunk__61362 = G__62609;\ncount__61363 = G__62610;\ni__61364 = G__62611;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),(function (_,env,p__61384,___$1,opts){\nvar vec__61385 = p__61384;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61385,(0),null);\nvar quoted_specs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61385,(1),null);\nvar form = vec__61385;\nvar temp__5735__auto___62612 = cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__61381_SHARP_){\nreturn ((cljs.core.seq_QMARK_(p1__61381_SHARP_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(p1__61381_SHARP_))));\n}),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword_QMARK_,quoted_specs)));\nif(cljs.core.truth_(temp__5735__auto___62612)){\nvar not_quoted_62613 = temp__5735__auto___62612;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Arguments to \",cljs.core.name(cljs.core.first(quoted_specs)),\" must be quoted. Offending spec: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(not_quoted_62613)].join(''));\n} else {\n}\n\nif(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Calls to `\",cljs.core.name(cljs.core.first(quoted_specs)),\"` must appear at the top-level.\"].join(''));\n}\n\nvar specs = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.first(quoted_specs)))?cljs.analyzer.canonicalize_import_specs(quoted_specs):cljs.analyzer.canonicalize_specs(quoted_specs));\nvar name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar args = cljs.analyzer.desugar_ns_specs((new cljs.core.List(null,specs,null,(1),null)));\nvar map__61388 = cljs.analyzer.parse_ns_excludes(env,args);\nvar map__61388__$1 = (((((!((map__61388 == null))))?(((((map__61388.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61388.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61388):map__61388);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61388__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61388__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__61391){\nvar vec__61392 = p__61391;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61392,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61392,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n}),cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__61389 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__61395){\nvar vec__61396 = p__61395;\nvar seq__61397 = cljs.core.seq(vec__61396);\nvar first__61398 = cljs.core.first(seq__61397);\nvar seq__61397__$1 = cljs.core.next(seq__61397);\nvar k = first__61398;\nvar libs = seq__61397__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5739__auto___62616 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__61382_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__61382_SHARP_));\n}),libs));\nif((temp__5739__auto___62616 == null)){\n} else {\nvar xs_62617 = temp__5739__auto___62616;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_62617),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__61383_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__61383_SHARP_));\n}),xs_62617)));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__61399){\nvar vec__61400 = p__61399;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61400,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n}),args));\nvar map__61389__$1 = (((((!((map__61389 == null))))?(((((map__61389.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61389.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61389):map__61389);\nvar params = map__61389__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61389__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61389__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61389__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61389__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61389__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61389__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61389__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\n(cljs.analyzer._STAR_cljs_ns_STAR_ = name);\n\nvar require_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros,excludes,name,imports,requires,uses,require_macros]);\nvar ns_info = (function (){var ns_info_SINGLEQUOTE_ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name], null));\nif((cljs.core.count(ns_info_SINGLEQUOTE_) > (0))){\nvar merge_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394)], null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info_SINGLEQUOTE_,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),excludes], null),cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(ns_info_SINGLEQUOTE_,merge_keys),cljs.core.select_keys(require_info,merge_keys)], 0))], 0));\n} else {\nreturn require_info;\n}\n})();\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns*\",\"ns*\",200417856),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__61404 = require_info;\nvar G__61404__$1 = (cljs.core.truth_((function (){var fexpr__61405 = cljs.core.deref(reload);\nreturn (fexpr__61405.cljs$core$IFn$_invoke$arity$1 ? fexpr__61405.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__61405.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__61404,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__61406 = cljs.core.deref(reload);\nreturn (fexpr__61406.cljs$core$IFn$_invoke$arity$1 ? fexpr__61406.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__61406.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})(),true]));\n})):G__61404);\nif(cljs.core.truth_((function (){var fexpr__61407 = cljs.core.deref(reload);\nreturn (fexpr__61407.cljs$core$IFn$_invoke$arity$1 ? fexpr__61407.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__61407.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__61404__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__61408 = cljs.core.deref(reload);\nreturn (fexpr__61408.cljs$core$IFn$_invoke$arity$1 ? fexpr__61408.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__61408.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})(),true]));\n}));\n} else {\nreturn G__61404__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.parse_type = (function cljs$analyzer$parse_type(op,env,p__61409){\nvar vec__61410 = p__61409;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61410,(0),null);\nvar tsym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61410,(1),null);\nvar fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61410,(2),null);\nvar pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61410,(3),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61410,(4),null);\nvar form = vec__61410;\nvar t = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),tsym));\nvar locals = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,fld){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,fld,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[fld,true,cljs.analyzer.get_col(fld,env),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),cljs.analyzer.get_line(fld,env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(fld) : m.call(null,fld)),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500)]));\n}),cljs.core.PersistentArrayMap.EMPTY,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op))?cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fields,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"__meta\",\"__meta\",-946752628,null),new cljs.core.Symbol(null,\"__extmap\",\"__extmap\",-1435580931,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"__hash\",\"__hash\",-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null)):fields));\nvar protocols = new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tsym));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),tsym], null),(function (m){\nvar m__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic((function (){var or__4126__auto__ = m;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})(),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),t,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),true,new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024),cljs.core.count(fields),new cljs.core.Keyword(null,\"record\",\"record\",-779106859),cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op)], 0));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m__$1,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(tsym),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),protocols], null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(tsym,env)], 0));\n}));\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"pmasks\",\"pmasks\",-871416698),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"t\",\"t\",-1397832519),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),pmasks,cljs.core.disj.cljs$core$IFn$_invoke$arity$2(protocols,new cljs.core.Symbol(\"cljs.core\",\"Object\",\"cljs.core/Object\",-345545431,null)),fields,op,env,t,form,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),(function (){var G__61413 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals);\nvar G__61414 = body;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61413,G__61414) : cljs.analyzer.analyze.call(null,G__61413,G__61414));\n})()]);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"deftype\",\"deftype\",340294561),env,form);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),env,form);\n}));\ncljs.analyzer.property_symbol_QMARK_ = (function cljs$analyzer$property_symbol_QMARK_(p1__61415_SHARP_){\nreturn cljs.core.boolean$((((p1__61415_SHARP_ instanceof cljs.core.Symbol))?cljs.core.re_matches(/^-.*/,cljs.core.name(p1__61415_SHARP_)):false));\n});\ncljs.analyzer.classify_dot_form = (function cljs$analyzer$classify_dot_form(p__61416){\nvar vec__61417 = p__61416;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61417,(0),null);\nvar member = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61417,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61417,(2),null);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(((target == null))?new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642):new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n),((cljs.analyzer.property_symbol_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886):(((member instanceof cljs.core.Symbol))?new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902):((cljs.core.seq_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923):new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642)\n))),(((args == null))?cljs.core.List.EMPTY:new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n)], null);\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.build_dot_form !== 'undefined')){\n} else {\ncljs.analyzer.build_dot_form = (function (){var method_table__4619__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4620__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4621__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4622__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4623__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__61421 = cljs.core.get_global_hierarchy;\nreturn (fexpr__61421.cljs$core$IFn$_invoke$arity$0 ? fexpr__61421.cljs$core$IFn$_invoke$arity$0() : fexpr__61421.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"build-dot-form\"),(function (p1__61420_SHARP_){\nreturn cljs.analyzer.classify_dot_form(p1__61420_SHARP_);\n}),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4623__auto__,method_table__4619__auto__,prefer_table__4620__auto__,method_cache__4621__auto__,cached_hierarchy__4622__auto__));\n})();\n}\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),cljs.core.List.EMPTY], null),(function (p__61422){\nvar vec__61423 = p__61422;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61423,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61423,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61423,(2),null);\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"access\",\"cljs.analyzer/access\",-1639036494),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(prop).substring((1))),cljs.core.meta(prop))], null);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923)], null),(function (p__61426){\nvar vec__61427 = p__61426;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61427,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61427,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61427,(2),null);\nthrow (new Error([\"Cannot provide arguments \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(args),\" on property access \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop)].join('')));\n}));\n/**\n * Builds the intermediate method call map used to reason about the parsed form during\n *   compilation.\n */\ncljs.analyzer.build_method_call = (function cljs$analyzer$build_method_call(target,meth,args){\nif((meth instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),meth,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),cljs.core.first(meth),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n}\n});\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)], null),(function (p__61430){\nvar vec__61431 = p__61430;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61431,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61431,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61431,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),cljs.core.List.EMPTY], null),(function (p__61434){\nvar vec__61435 = p__61434;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61435,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61435,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61435,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923),cljs.core.List.EMPTY], null),(function (p__61438){\nvar vec__61439 = p__61438;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61439,(0),null);\nvar meth_expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61439,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61439,(2),null);\nreturn cljs.analyzer.build_method_call(target,cljs.core.first(meth_expr),cljs.core.rest(meth_expr));\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (dot_form){\nthrow (new Error([\"Unknown dot form of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\".\",\".\",1975675962,null),dot_form)),\" with classification \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.classify_dot_form(dot_form))].join('')));\n}));\ncljs.analyzer.analyze_dot = (function cljs$analyzer$analyze_dot(env,target,field,member_PLUS_,form){\nvar v = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,field,member_PLUS_], null);\nvar map__61443 = cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1(v);\nvar map__61443__$1 = (((((!((map__61443 == null))))?(((((map__61443.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61443.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61443):map__61443);\nvar dot_action = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61443__$1,new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601));\nvar target__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61443__$1,new cljs.core.Keyword(null,\"target\",\"target\",253001721));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61443__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nvar field__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61443__$1,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61443__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar targetexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze.call(null,enve,target__$1));\nvar form_meta = cljs.core.meta(form);\nvar target_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(targetexpr);\nvar prop = (function (){var or__4126__auto__ = field__$1;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn method;\n}\n})();\nvar tag = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = ((cljs.analyzer.js_tag_QMARK_(target_tag))?cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.analyzer.normalize_js_tag(target_tag),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null)),prop):false);\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn null;\n}\n}\n})();\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"constructor\",\"constructor\",-313397284,null),prop)) && ((!(clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop),\"cljs$\")))) && (cljs.core.not(new cljs.core.Keyword(null,\"protocol-method\",\"protocol-method\",1794903206).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(prop)))))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),cljs.core.first(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"object\",\"object\",1474613949),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),target_tag)){\nif(cljs.core.truth_((function (){var or__4126__auto__ = (target_tag == null);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nvar fexpr__61446 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\"], null), null);\nreturn (fexpr__61446.cljs$core$IFn$_invoke$arity$1 ? fexpr__61446.cljs$core$IFn$_invoke$arity$1(target_tag) : fexpr__61446.call(null,target_tag));\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n\nvar vec__61447_62701 = cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast,cljs.core.identity)(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)));\nvar pre_SINGLEQUOTE__62702 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61447_62701,(0),null);\nvar pre_62703 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61447_62701,(1),null);\nif(cljs.core.truth_((function (){var and__4115__auto__ = cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_SINGLEQUOTE__62702);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_62703));\n} else {\nreturn and__4115__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",(function (){var G__61450 = pre_SINGLEQUOTE__62702;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null),cljs.core.last(pre_SINGLEQUOTE__62702))){\nreturn cljs.core.butlast(G__61450);\n} else {\nreturn G__61450;\n}\n})())),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n} else {\n}\n} else {\n}\n\nif(cljs.analyzer.js_tag_QMARK_(tag)){\nvar pre_62735 = new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_62735))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre_62735),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n} else {\n}\n\nvar G__61451 = dot_action;\nvar G__61451__$1 = (((G__61451 instanceof cljs.core.Keyword))?G__61451.fqn:null);\nswitch (G__61451__$1) {\ncase \"cljs.analyzer/access\":\nvar children = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4126__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn tag;\n}\n})():tag)], null);\n\nbreak;\ncase \"cljs.analyzer/call\":\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61442_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__61442_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__61442_SHARP_));\n}),args);\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null);\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-call\",\"host-call\",1059629755),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"method\",\"method\",55703592),method,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4126__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n})():tag)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__61451__$1)].join('')));\n\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(function (_,env,p__61452,___$1,___$2){\nvar vec__61453 = p__61452;\nvar seq__61454 = cljs.core.seq(vec__61453);\nvar first__61455 = cljs.core.first(seq__61454);\nvar seq__61454__$1 = cljs.core.next(seq__61454);\nvar ___$3 = first__61455;\nvar first__61455__$1 = cljs.core.first(seq__61454__$1);\nvar seq__61454__$2 = cljs.core.next(seq__61454__$1);\nvar target = first__61455__$1;\nvar vec__61456 = seq__61454__$2;\nvar seq__61457 = cljs.core.seq(vec__61456);\nvar first__61458 = cljs.core.first(seq__61457);\nvar seq__61457__$1 = cljs.core.next(seq__61457);\nvar field = first__61458;\nvar member_PLUS_ = seq__61457__$1;\nvar form = vec__61453;\nvar _STAR_recur_frames_STAR__orig_val__61459 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61460 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61460);\n\ntry{return cljs.analyzer.analyze_dot(env,target,field,member_PLUS_,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61459);\n}}));\ncljs.analyzer.get_js_tag = (function cljs$analyzer$get_js_tag(form){\nvar form_meta = cljs.core.meta(form);\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif((temp__5737__auto__ == null)){\nif(new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta) === true){\nreturn new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null);\n} else {\nreturn null;\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.js_star_interp = (function cljs$analyzer$js_star_interp(env,s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nvar inner = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var(env,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,((2) + idx),end))));\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),cljs.core.cons(inner,(function (){var G__61461 = env;\nvar G__61462 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2(G__61461,G__61462) : cljs.analyzer.js_star_interp.call(null,G__61461,G__61462));\n})()));\n}),null,null));\n}\n});\ncljs.analyzer.js_star_seg = (function cljs$analyzer$js_star_seg(s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),(function (){var G__61463 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1(G__61463) : cljs.analyzer.js_star_seg.call(null,G__61463));\n})());\n}),null,null));\n}\n});\ncljs.analyzer.NUMERIC_SET = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\",new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null),\"null\",new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null),\"null\",new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),\"null\"], null), null);\ncljs.analyzer.numeric_type_QMARK_ = (function cljs$analyzer$numeric_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif((((t instanceof cljs.core.Symbol)) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NUMERIC_SET,t) == null)))))){\nreturn true;\n} else {\nif(cljs.analyzer.cljs_set_QMARK_(t)){\nreturn ((cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null))));\n} else {\nreturn null;\n}\n}\n\n}\n}\n}\n});\ncljs.analyzer.array_types = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),\"null\",new cljs.core.Symbol(null,\"floats\",\"floats\",513591110,null),\"null\",new cljs.core.Symbol(null,\"longs\",\"longs\",-1017696020,null),\"null\",new cljs.core.Symbol(null,\"objects\",\"objects\",-554722035,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"doubles\",\"doubles\",-1517872169,null),\"null\",new cljs.core.Symbol(null,\"chars\",\"chars\",545901210,null),\"null\",new cljs.core.Symbol(null,\"ints\",\"ints\",-1761239845,null),\"null\",new cljs.core.Symbol(null,\"shorts\",\"shorts\",107738238,null),\"null\",new cljs.core.Symbol(null,\"bytes\",\"bytes\",-1478569089,null),\"null\"], null), null);\ncljs.analyzer.array_type_QMARK_ = (function cljs$analyzer$array_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),t)){\nreturn true;\n} else {\nif(cljs.core.contains_QMARK_(cljs.analyzer.array_types,t)){\nreturn true;\n} else {\nreturn cljs.core.boolean$(((cljs.analyzer.cljs_set_QMARK_(t))?(function (){var or__4126__auto__ = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null));\nif(or__4126__auto____$1){\nreturn or__4126__auto____$1;\n} else {\nreturn cljs.core.some(cljs.analyzer.array_types,t);\n}\n}\n})():null));\n\n}\n}\n}\n}\n}\n});\ncljs.analyzer.analyze_js_star_args = (function cljs$analyzer$analyze_js_star_args(js_op,env,args){\nreturn cljs.core.first(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__61464,arg){\nvar vec__61465 = p__61464;\nvar argexprs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61465,(0),null);\nvar env__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61465,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(argexprs,(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env__$1,arg) : cljs.analyzer.analyze.call(null,env__$1,arg))),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(js_op,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",-6692549,null)))?cljs.analyzer.set_test_induced_tags(env__$1,arg):env__$1)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,env], null),args));\n});\ncljs.analyzer.analyze_js_star_STAR_ = (function cljs$analyzer$analyze_js_star_STAR_(env,jsform,args,form){\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar form_meta = cljs.core.meta(form);\nvar segs = cljs.analyzer.js_star_seg(jsform);\nvar tag = cljs.analyzer.get_js_tag(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar argexprs = cljs.analyzer.analyze_js_star_args(js_op,enve,args);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar validate = (function (warning_type,valid_types_QMARK_){\nvar types = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__61468_SHARP_){\nreturn cljs.analyzer.infer_tag(env,p1__61468_SHARP_);\n}),argexprs);\nif(cljs.core.truth_((valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1(types) : valid_types_QMARK_.call(null,types)))){\nreturn null;\n} else {\nreturn cljs.analyzer.warning(warning_type,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"types\",\"types\",590030639),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,types)], null));\n}\n});\nvar op_match_QMARK_ = (function (sym){\nreturn cljs.core.symbol_identical_QMARK_(sym,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta));\n});\nif(numeric === true){\nvalidate(new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (p1__61469_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,p1__61469_SHARP_);\n}));\n} else {\n}\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),new cljs.core.Keyword(null,\"segs\",\"segs\",-1940299576),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)],[argexprs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),numeric,segs,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),env,js_op,form,tag]);\n});\ncljs.analyzer.analyze_js_star = (function cljs$analyzer$analyze_js_star(env,jsform,args,form){\nvar _STAR_recur_frames_STAR__orig_val__61470 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61471 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61471);\n\ntry{return cljs.analyzer.analyze_js_star_STAR_(env,jsform,args,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61470);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),(function (op,env,p__61472,_,___$1){\nvar vec__61473 = p__61472;\nvar seq__61474 = cljs.core.seq(vec__61473);\nvar first__61475 = cljs.core.first(seq__61474);\nvar seq__61474__$1 = cljs.core.next(seq__61474);\nvar ___$2 = first__61475;\nvar first__61475__$1 = cljs.core.first(seq__61474__$1);\nvar seq__61474__$2 = cljs.core.next(seq__61474__$1);\nvar jsform = first__61475__$1;\nvar args = seq__61474__$2;\nvar form = vec__61473;\nif(typeof jsform === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid js* form\");\n}\n\nif((!((args == null)))){\nreturn cljs.analyzer.analyze_js_star(env,jsform,args,form);\n} else {\nvar code = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.analyzer.js_star_interp(env,jsform));\nvar tag = cljs.analyzer.get_js_tag(form);\nvar form_meta = cljs.core.meta(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js\",\"js\",1768080579),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"code\",\"code\",1586293142),code,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),numeric], null);\n}\n}));\ncljs.analyzer.unsorted_map_QMARK_ = (function cljs$analyzer$unsorted_map_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && ((!(cljs.core.sorted_QMARK_(x)))));\n});\n/**\n * Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n *   warnings that will have been caught by a first compiler pass.\n */\ncljs.analyzer.analyzed = (function cljs$analyzer$analyzed(x){\nif(cljs.analyzer.unsorted_map_QMARK_(x)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n} else {\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(x,cljs.core.assoc,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n\n}\n});\n/**\n * Returns boolean if the form has already been marked as analyzed.\n */\ncljs.analyzer.analyzed_QMARK_ = (function cljs$analyzer$analyzed_QMARK_(x){\nreturn cljs.core.boolean$(((cljs.analyzer.unsorted_map_QMARK_(x))?new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(x):new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x))\n));\n});\ncljs.analyzer.all_values_QMARK_ = (function cljs$analyzer$all_values_QMARK_(exprs){\nreturn cljs.core.every_QMARK_((function (p1__61476_SHARP_){\nreturn (((p1__61476_SHARP_ == null)) || ((p1__61476_SHARP_ instanceof cljs.core.Symbol)) || (typeof p1__61476_SHARP_ === 'string') || (typeof p1__61476_SHARP_ === 'number') || (p1__61476_SHARP_ === true) || (p1__61476_SHARP_ === false));\n}),exprs);\n});\ncljs.analyzer.valid_arity_QMARK_ = (function cljs$analyzer$valid_arity_QMARK_(argc,method_params){\nreturn (((method_params == null)) || (cljs.core.boolean$(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([argc]),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count,method_params)))));\n});\ncljs.analyzer.record_tag_QMARK_ = (function cljs$analyzer$record_tag_QMARK_(tag){\nreturn cljs.core.boolean$((((tag instanceof cljs.core.Symbol))?(((!((cljs.core.namespace(tag) == null))))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(tag)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(tag)),new cljs.core.Keyword(null,\"record\",\"record\",-779106859)], null)):false):false));\n});\ncljs.analyzer.record_basis = (function cljs$analyzer$record_basis(tag){\nvar positional_factory = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\"->\",cljs.core.name(tag)].join(''));\nvar fields = cljs.core.first(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(tag)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),positional_factory,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179)], null)));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,fields);\n});\ncljs.analyzer.record_with_field_QMARK_ = (function cljs$analyzer$record_with_field_QMARK_(tag,field){\nreturn ((cljs.analyzer.record_tag_QMARK_(tag)) && (cljs.core.contains_QMARK_(cljs.analyzer.record_basis(tag),field)));\n});\ncljs.analyzer.invalid_arity_QMARK_ = (function cljs$analyzer$invalid_arity_QMARK_(argc,method_params,variadic,max_fixed_arity){\nif((!(cljs.analyzer.valid_arity_QMARK_(argc,method_params)))){\nvar or__4126__auto__ = cljs.core.not(variadic);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nvar and__4115__auto__ = variadic;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn (argc < max_fixed_arity);\n} else {\nreturn and__4115__auto__;\n}\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.parse_invoke_STAR_ = (function cljs$analyzer$parse_invoke_STAR_(env,p__61478){\nvar vec__61479 = p__61478;\nvar seq__61480 = cljs.core.seq(vec__61479);\nvar first__61481 = cljs.core.first(seq__61480);\nvar seq__61480__$1 = cljs.core.next(seq__61480);\nvar f = first__61481;\nvar args = seq__61480__$1;\nvar form = vec__61479;\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar fexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,f) : cljs.analyzer.analyze.call(null,enve,f));\nvar argc = cljs.core.count(args);\nvar fn_var_QMARK_ = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\n}\n})();\nvar kw_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar cur_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar HO_invoke_QMARK_ = ((cljs.core.boolean$(cljs.analyzer._STAR_cljs_static_fns_STAR_)) && (cljs.core.not(fn_var_QMARK_)) && ((!(cljs.analyzer.js_tag_QMARK_(f)))) && ((!(kw_QMARK_))) && ((!(cljs.analyzer.analyzed_QMARK_(f)))));\nvar bind_f_expr_QMARK_ = ((HO_invoke_QMARK_) && ((!((f instanceof cljs.core.Symbol)))));\nvar bind_args_QMARK_ = ((HO_invoke_QMARK_) && ((!(cljs.analyzer.all_values_QMARK_(args)))));\nif(fn_var_QMARK_){\nvar map__61482_62803 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr);\nvar map__61482_62804__$1 = (((((!((map__61482_62803 == null))))?(((((map__61482_62803.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61482_62803.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61482_62803):map__61482_62803);\nvar variadic_62805 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61482_62804__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity_62806 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61482_62804__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params_62807 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61482_62804__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar name_62808 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61482_62804__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar ns_62809 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61482_62804__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar macro_62810 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61482_62804__$1,new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404));\nif(cljs.core.truth_(((cljs.core.not((function (){var and__4115__auto__ = goog.string.endsWith(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cur_ns),\"$macros\");\nif(cljs.core.truth_(and__4115__auto__)){\nreturn ((cljs.core.symbol_identical_QMARK_(cur_ns,ns_62809)) && (macro_62810 === true));\n} else {\nreturn and__4115__auto__;\n}\n})()))?cljs.analyzer.invalid_arity_QMARK_(argc,method_params_62807,variadic_62805,max_fixed_arity_62806):false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_62808,new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n} else {\n}\n\nif(((kw_QMARK_) && ((!(((((1) === argc)) || (((2) === argc)))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.first(form),new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n\nvar deprecated_QMARK__62817 = new cljs.core.Keyword(null,\"deprecated\",\"deprecated\",1498275348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar no_warn_QMARK__62818 = new cljs.core.Keyword(null,\"deprecation-nowarn\",\"deprecation-nowarn\",-1762828044).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nif(((cljs.core.boolean$(deprecated_QMARK__62817)) && ((!(cljs.core.boolean$(no_warn_QMARK__62818)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif(((bind_args_QMARK_) || (bind_f_expr_QMARK_))){\nvar arg_syms = ((bind_args_QMARK_)?cljs.core.take.cljs$core$IFn$_invoke$arity$2(argc,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym)):null);\nvar f_sym = ((bind_f_expr_QMARK_)?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"fexpr__\"):null);\nvar bindings = (function (){var G__61484 = cljs.core.PersistentVector.EMPTY;\nvar G__61484__$1 = ((bind_args_QMARK_)?cljs.core.into.cljs$core$IFn$_invoke$arity$2(G__61484,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arg_syms,args)):G__61484);\nif(bind_f_expr_QMARK_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__61484__$1,f_sym,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.analyzed(f)], 0));\n} else {\nreturn G__61484__$1;\n}\n})();\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar G__61485 = env;\nvar G__61486 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(bindings)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.analyzer.analyzed(((bind_f_expr_QMARK_)?f_sym:f)),null,(1),null)),((bind_args_QMARK_)?arg_syms:args)))),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag], null)),null,(1),null))], 0))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61485,G__61486) : cljs.analyzer.analyze.call(null,G__61485,G__61486));\n} else {\nvar ana_expr = (function (p1__61477_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__61477_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__61477_SHARP_));\n});\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(ana_expr,args);\nif((((((f instanceof cljs.core.Keyword)) && ((cljs.core.namespace(f) == null)))) && (((1) === cljs.core.count(args))) && (cljs.analyzer.record_with_field_QMARK_(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.first(argexprs)),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(f)))))){\nvar field_access_form = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\".-\",cljs.core.name(f)].join('')),args);\nvar _STAR_cljs_warnings_STAR__orig_val__61487 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__61488 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__61488);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,field_access_form) : cljs.analyzer.analyze.call(null,env,field_access_form));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__61487);\n}} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),fexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null)], null);\n}\n}\n});\ncljs.analyzer.parse_invoke = (function cljs$analyzer$parse_invoke(env,form){\nvar _STAR_recur_frames_STAR__orig_val__61489 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61490 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61490);\n\ntry{return cljs.analyzer.parse_invoke_STAR_(env,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61489);\n}});\ncljs.analyzer.desugar_dotted_expr = (function cljs$analyzer$desugar_dotted_expr(p__61491){\nvar map__61492 = p__61491;\nvar map__61492__$1 = (((((!((map__61492 == null))))?(((((map__61492.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61492.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61492):map__61492);\nvar expr = map__61492__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61492__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__61494 = op;\nvar G__61494__$1 = (((G__61494 instanceof cljs.core.Keyword))?G__61494.fqn:null);\nswitch (G__61494__$1) {\ncase \"var\":\ncase \"local\":\nif(cljs.analyzer.dotted_symbol_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr))))){\nvar s = cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr));\nvar idx = s.lastIndexOf(\".\");\nvar _ = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((idx + (1)),((s).length)))?null:(function(){throw (new Error(\"Assert failed: (not= (inc idx) (count s))\"))})());\nvar prefix = cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr)),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx)),cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr)));\nvar field = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1))));\nif(cljs.core.not(new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(expr))){\n} else {\nthrow (new Error(\"Assert failed: (not (:const-expr expr))\"));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),(new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(new cljs.core.List(null,prefix,(new cljs.core.List(null,field,null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\"target\",\"target\",253001721),(function (){var G__61495 = cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(expr,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),prefix,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),prefix], 0)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)], null),prefix),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nreturn (cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1(G__61495) : cljs.analyzer.desugar_dotted_expr.call(null,G__61495));\n})(),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null)], null);\n} else {\nreturn expr;\n}\n\nbreak;\ndefault:\nreturn expr;\n\n}\n});\n/**\n * Finds the var associated with sym\n */\ncljs.analyzer.analyze_symbol = (function cljs$analyzer$analyze_symbol(env,sym){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nvar G__61496 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__61496) : cljs.analyzer.analyze_wrap_meta.call(null,G__61496));\n} else {\nvar map__61497 = cljs.core.meta(sym);\nvar map__61497__$1 = (((((!((map__61497 == null))))?(((((map__61497.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61497.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61497):map__61497);\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61497__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61497__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nvar env__$1 = (((!((line == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line):env);\nvar env__$2 = (((!((column == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column):env__$1);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$2,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym], null);\nvar lcls = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env__$2);\nvar temp__5737__auto__ = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls,sym));\nif((temp__5737__auto__ == null)){\nvar sym_meta = cljs.core.meta(sym);\nvar sym_ns = cljs.core.namespace(sym);\nvar cur_ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$2)));\nvar sym__$1 = (cljs.core.truth_((function (){var and__4115__auto__ = sym_ns;\nif(cljs.core.truth_(and__4115__auto__)){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,\"cljs.core\")){\nvar and__4115__auto____$1 = goog.string.endsWith(cur_ns,\"$macros\");\nif(cljs.core.truth_(and__4115__auto____$1)){\nreturn ((cljs.core.not(goog.string.endsWith(sym_ns,\"$macros\"))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cur_ns,(0),(((cur_ns).length) - (7))))));\n} else {\nreturn and__4115__auto____$1;\n}\n} else {\nreturn false;\n}\n} else {\nreturn and__4115__auto__;\n}\n})())?cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([sym_ns,\"$macros\"].join(''),cljs.core.name(sym)):sym);\nvar info = (((!(cljs.core.contains_QMARK_(sym_meta,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162)))))?cljs.analyzer.resolve_existing_var(env__$2,sym__$1):cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(info))){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(info)),\"\\n\",\"(:op info)\"].join('')));\n}\n\nreturn cljs.analyzer.desugar_dotted_expr((((!(new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377).cljs$core$IFn$_invoke$arity$1(env__$2) === true)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info),cljs.core.select_keys(info,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null)),(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar const_expr = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})()], 0)):(function (){var info__$1 = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info__$1], 0)),cljs.core.select_keys(info__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0));\n})()));\n} else {\nvar lb = temp__5737__auto__;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),lb], 0)),((cljs.core.map_QMARK_(lb))?cljs.core.select_keys(lb,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)):null)], 0));\n}\n}\n});\ncljs.analyzer.excluded_QMARK_ = (function cljs$analyzer$excluded_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))));\n});\ncljs.analyzer.used_QMARK_ = (function cljs$analyzer$used_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))));\n});\ncljs.analyzer.get_expander_ns = (function cljs$analyzer$get_expander_ns(env,nstr){\nvar res = (function (){var or__4126__auto__ = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\n}\n})();\nvar nstr__$1 = (((!((res == null))))?cljs.core.str.cljs$core$IFn$_invoke$arity$1(res):nstr);\nif((\"clojure.core\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM);\n} else {\nif((\"clojure.repl\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(new cljs.core.Symbol(null,\"cljs.repl\",\"cljs.repl\",1767065658,null));\n} else {\nif(cljs.core.truth_(goog.string.contains(nstr__$1,\".\"))){\nreturn cljs.core.find_macros_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1));\n} else {\nvar G__61499 = env;\nvar G__61499__$1 = (((G__61499 == null))?null:new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(G__61499));\nvar G__61499__$2 = (((G__61499__$1 == null))?null:new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(G__61499__$1));\nvar G__61499__$3 = (((G__61499__$2 == null))?null:cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__61499__$2,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1)));\nif((G__61499__$3 == null)){\nreturn null;\n} else {\nreturn cljs.core.find_macros_ns(G__61499__$3);\n}\n\n}\n}\n}\n});\ncljs.analyzer.get_expander_STAR_ = (function cljs$analyzer$get_expander_STAR_(sym,env){\nif((((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym) == null)))) || (((cljs.analyzer.excluded_QMARK_(env,sym)) && ((!(cljs.analyzer.used_QMARK_(env,sym)))))))){\nreturn null;\n} else {\nvar nstr = cljs.core.namespace(sym);\nif((!((nstr == null)))){\nvar ns = cljs.analyzer.get_expander_ns(env,nstr);\nif((!((ns == null)))){\nreturn ns.findInternedVar(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\n} else {\nreturn null;\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym);\nvar nsym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym__$1);\n} else {\nvar nsym = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym);\nif((((!((nsym == null)))) && ((nsym instanceof cljs.core.Symbol)))){\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym);\n} else {\nreturn cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM).findInternedVar(sym);\n}\n\n}\n}\n}\n});\n/**\n * Given a sym, a symbol identifying a macro, and env, an analysis environment\n * return the corresponding Clojure macroexpander.\n */\ncljs.analyzer.get_expander = (function cljs$analyzer$get_expander(sym,env){\nvar mvar = cljs.analyzer.get_expander_STAR_(sym,env);\nif((((!((mvar == null)))) && (mvar.isMacro()))){\nreturn mvar;\n} else {\nreturn null;\n}\n});\nvar cached_var_62868 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)),new cljs.core.Symbol(null,\"macroexpand-check\",\"macroexpand-check\",699092091,null));\n}),null));\ncljs.analyzer.get_macroexpand_check_var = (function cljs$analyzer$get_macroexpand_check_var(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)) == null)))){\nreturn cljs.core.deref(cached_var_62868);\n} else {\nreturn null;\n}\n});\ncljs.analyzer.var__GT_sym = (function cljs$analyzer$var__GT_sym(var$){\nreturn var$.sym;\n});\ncljs.analyzer.do_macroexpand_check = (function cljs$analyzer$do_macroexpand_check(env,form,mac_var){\nif(cljs.core.not(new cljs.core.Keyword(null,\"spec-skip-macros\",\"spec-skip-macros\",-645015958).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_))))){\nvar mchk = cljs.analyzer.get_macroexpand_check_var();\nif((!((mchk == null)))){\ntry{var G__61501 = mac_var;\nvar G__61502 = cljs.core.next(form);\nreturn (mchk.cljs$core$IFn$_invoke$arity$2 ? mchk.cljs$core$IFn$_invoke$arity$2(G__61501,G__61502) : mchk.call(null,G__61501,G__61502));\n}catch (e61500){var e = e61500;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macro-syntax-check\",\"macro-syntax-check\",2072602373),cljs.analyzer.var__GT_sym(mac_var)),e);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.check_macro_arity = (function cljs$analyzer$check_macro_arity(mac_var,form){\nvar mac_sym = mac_var.sym;\nvar temp__5735__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_sym)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_sym))], null));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar map__61504 = temp__5735__auto__;\nvar map__61504__$1 = (((((!((map__61504 == null))))?(((((map__61504.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61504.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61504):map__61504);\nvar variadic_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61504__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61504__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61504__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar argc = cljs.core.count(cljs.core.rest(form));\nvar offset = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"&form\",\"&form\",1482799337,null),cljs.core.ffirst(method_params)))?(2):(0));\nif(cljs.core.truth_(cljs.analyzer.invalid_arity_QMARK_(argc,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__61503_SHARP_){\nreturn cljs.core.nthrest(p1__61503_SHARP_,offset);\n}),method_params),variadic_QMARK_,(cljs.core.truth_(max_fixed_arity)?(max_fixed_arity - offset):null)))){\nthrow (new Error(cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),mac_sym], null))));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.macroexpand_1_STAR_ = (function cljs$analyzer$macroexpand_1_STAR_(env,form){\nvar op = cljs.core.first(form);\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),op)){\ncljs.analyzer.do_macroexpand_check(env,form,cljs.analyzer.get_expander(new cljs.core.Symbol(\"cljs.core\",\"ns-special-form\",\"cljs.core/ns-special-form\",1585185745,null),env));\n} else {\n}\n\nreturn form;\n} else {\nvar temp__5737__auto__ = (((op instanceof cljs.core.Symbol))?cljs.analyzer.get_expander(op,env):null);\nif((temp__5737__auto__ == null)){\nif((op instanceof cljs.core.Symbol)){\nvar opname = cljs.core.str.cljs$core$IFn$_invoke$arity$1(op);\nif((\".\" === opname.charAt((0)))){\nvar vec__61506 = cljs.core.next(form);\nvar seq__61507 = cljs.core.seq(vec__61506);\nvar first__61508 = cljs.core.first(seq__61507);\nvar seq__61507__$1 = cljs.core.next(seq__61507);\nvar target = first__61508;\nvar args = seq__61507__$1;\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(cljs.analyzer.DOT_SYM,target,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(opname,(1))),args),cljs.core.meta(form));\n} else {\nif((\".\" === opname.charAt((opname.length - (1))))){\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.NEW_SYM,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(opname,(0),(((opname).length) - (1)))),cljs.core.next(form)),cljs.core.meta(form));\n} else {\nreturn form;\n\n}\n}\n} else {\nreturn form;\n}\n} else {\nvar mac_var = temp__5737__auto__;\ncljs.analyzer.do_macroexpand_check(env,form,mac_var);\n\nvar form_SINGLEQUOTE_ = (function (){try{cljs.analyzer.check_macro_arity(mac_var,form);\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(mac_var),form,env,cljs.core.rest(form));\n}catch (e61509){var e = e61509;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macroexpansion\",\"macroexpansion\",706274075),cljs.analyzer.var__GT_sym(mac_var)),e);\n}})();\nif(cljs.analyzer.cljs_seq_QMARK_(form_SINGLEQUOTE_)){\nvar sym_SINGLEQUOTE_ = cljs.core.first(form_SINGLEQUOTE_);\nvar sym = cljs.core.first(form);\nif(cljs.core.symbol_identical_QMARK_(sym_SINGLEQUOTE_,cljs.analyzer.JS_STAR_SYM)){\nvar sym__$1 = (((!((cljs.core.namespace(sym) == null))))?sym:cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)));\nvar js_op = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),sym__$1], null);\nvar numeric = (function (){var mac_var_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_var.sym));\nvar mac_var_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_var.sym));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),mac_var_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),mac_var_name,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(\"cljs.analyzer\",\"numeric\",\"cljs.analyzer/numeric\",1415704188)], null));\n})();\nvar js_op__$1 = ((numeric === true)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),true):js_op);\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(form_SINGLEQUOTE_,cljs.core.merge,js_op__$1);\n} else {\nreturn form_SINGLEQUOTE_;\n}\n} else {\nreturn form_SINGLEQUOTE_;\n}\n}\n}\n});\n/**\n * Given a env, an analysis environment, and form, a ClojureScript form,\n * macroexpand the form once.\n */\ncljs.analyzer.macroexpand_1 = (function cljs$analyzer$macroexpand_1(env,form){\ntry{return cljs.analyzer.macroexpand_1_STAR_(env,form);\n}catch (e61510){var err__60306__auto__ = e61510;\nif(cljs.analyzer.has_error_data_QMARK_(err__60306__auto__)){\nthrow err__60306__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__60306__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__60306__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__60306__auto__.message,err__60306__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq_STAR_ = (function cljs$analyzer$analyze_seq_STAR_(op,env,form,name,opts){\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nreturn cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5(op,env,form,name,opts);\n} else {\nreturn cljs.analyzer.parse_invoke(env,form);\n}\n});\ncljs.analyzer.analyze_seq_STAR__wrap = (function cljs$analyzer$analyze_seq_STAR__wrap(op,env,form,name,opts){\ntry{return cljs.analyzer.analyze_seq_STAR_(op,env,form,name,opts);\n}catch (e61511){var err__60306__auto__ = e61511;\nif(cljs.analyzer.has_error_data_QMARK_(err__60306__auto__)){\nthrow err__60306__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__60306__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__60306__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__60306__auto__.message,err__60306__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq = (function cljs$analyzer$analyze_seq(var_args){\nvar G__61513 = arguments.length;\nswitch (G__61513) {\ncase 3:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\nreturn (cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze_list.call(null,env,form));\n} else {\nvar line = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar line__$1 = (((line == null))?new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env):line);\nvar col = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar col__$1 = (((col == null))?new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env):col);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col__$1], 0));\nvar op = cljs.core.first(form);\nif((op == null)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,\"Can't call nil\");\n} else {\n}\n\nvar mform = cljs.analyzer.macroexpand_1(env__$1,form);\nif((form === mform)){\nreturn cljs.analyzer.analyze_seq_STAR__wrap(op,env__$1,form,name,opts);\n} else {\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,mform,name,opts) : cljs.analyzer.analyze.call(null,env__$1,mform,name,opts));\n}\n}\n}));\n\n(cljs.analyzer.analyze_seq.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.analyze_map = (function cljs$analyzer$analyze_map(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ks = (function (){var _STAR_recur_frames_STAR__orig_val__61516 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61517 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61517);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61514_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61514_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61514_SHARP_));\n}),cljs.core.keys(form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61516);\n}})();\nvar vs = (function (){var _STAR_recur_frames_STAR__orig_val__61518 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61519 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61519);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61515_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61515_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61515_SHARP_));\n}),cljs.core.vals(form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61518);\n}})();\nvar G__61520 = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),ks,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IMap\",\"cljs.core/IMap\",1407777598,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__61520) : cljs.analyzer.analyze_wrap_meta.call(null,G__61520));\n});\ncljs.analyzer.analyze_list = (function cljs$analyzer$analyze_list(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__61522 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61523 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61523);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61521_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61521_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61521_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61522);\n}})();\nvar G__61524 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__61524) : cljs.analyzer.analyze_wrap_meta.call(null,G__61524));\n});\ncljs.analyzer.analyze_vector = (function cljs$analyzer$analyze_vector(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__61526 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61527 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61527);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61525_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61525_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61525_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61526);\n}})();\nvar G__61528 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IVector\",\"cljs.core/IVector\",1711112835,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__61528) : cljs.analyzer.analyze_wrap_meta.call(null,G__61528));\n});\ncljs.analyzer.analyze_set = (function cljs$analyzer$analyze_set(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__61530 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61531 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61531);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61529_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61529_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61529_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61530);\n}})();\nvar G__61532 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set\",\"set\",304602554),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"ISet\",\"cljs.core/ISet\",2003412810,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__61532) : cljs.analyzer.analyze_wrap_meta.call(null,G__61532));\n});\ncljs.analyzer.analyze_js_value = (function cljs$analyzer$analyze_js_value(env,form){\nvar val = form.val;\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nif(cljs.core.map_QMARK_(val)){\nvar keys = cljs.core.vec(cljs.core.keys(val));\nvar vals = (function (){var _STAR_recur_frames_STAR__orig_val__61535 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61536 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61536);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61533_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61533_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61533_SHARP_));\n}),cljs.core.vals(val));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61535);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-object\",\"js-object\",1830199158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),keys,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vals,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null)], null);\n} else {\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__61537 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61538 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61538);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61534_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61534_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61534_SHARP_));\n}),val);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61537);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-array\",\"js-array\",-1210185421),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null)], null);\n}\n});\ncljs.analyzer.record_ns_PLUS_name = (function cljs$analyzer$record_ns_PLUS_name(x){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0)),/\\//));\n});\ncljs.analyzer.analyze_record = (function cljs$analyzer$analyze_record(env,x){\nvar _items_ = (function (){var _STAR_recur_frames_STAR__orig_val__61543 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61544 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61544);\n\ntry{var G__61545 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__61546 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,x);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61545,G__61546) : cljs.analyzer.analyze.call(null,G__61545,G__61546));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61543);\n}})();\nvar vec__61540 = cljs.analyzer.record_ns_PLUS_name(x);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61540,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61540,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),x,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),x,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null);\n});\ncljs.analyzer.elide_reader_meta = (function cljs$analyzer$elide_reader_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(m,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)], 0));\n});\ncljs.analyzer.elide_analyzer_meta = (function cljs$analyzer$elide_analyzer_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162));\n});\ncljs.analyzer.elide_irrelevant_meta = (function cljs$analyzer$elide_irrelevant_meta(m){\nreturn cljs.analyzer.elide_analyzer_meta(cljs.analyzer.elide_reader_meta(m));\n});\ncljs.analyzer.analyze_wrap_meta = (function cljs$analyzer$analyze_wrap_meta(expr){\nvar form = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr);\nvar m = cljs.analyzer.elide_irrelevant_meta(cljs.core.meta(form));\nif((!((cljs.core.seq(m) == null)))){\nvar env = new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr);\nvar expr__$1 = cljs.core.assoc_in(expr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar meta_expr = cljs.analyzer.analyze_map(new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr__$1),m);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"with-meta\",\"with-meta\",-1566856820),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),meta_expr,new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_type = (function cljs$analyzer$infer_type(env,p__61548,_){\nvar map__61549 = p__61548;\nvar map__61549__$1 = (((((!((map__61549 == null))))?(((((map__61549.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61549.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61549):map__61549);\nvar ast = map__61549__$1;\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61549__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif((((tag == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),tag)))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),(function (ms){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__61547_SHARP_){\nreturn (cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3(env,p1__61547_SHARP_,_) : cljs.analyzer.infer_type.call(null,env,p1__61547_SHARP_,_));\n})),ms);\n}));\n} else {\nvar temp__5737__auto__ = cljs.analyzer.infer_tag(env,ast);\nif((temp__5737__auto__ == null)){\nreturn ast;\n} else {\nvar tag__$1 = temp__5737__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1);\n}\n}\n} else {\nreturn ast;\n}\n});\ncljs.analyzer.repl_self_require_QMARK_ = (function cljs$analyzer$repl_self_require_QMARK_(env,deps){\nvar and__4115__auto__ = new cljs.core.Keyword(null,\"repl-env\",\"repl-env\",-1976503928).cljs$core$IFn$_invoke$arity$1(env);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.analyzer._STAR_cljs_ns_STAR_]),deps);\n} else {\nreturn and__4115__auto__;\n}\n});\ncljs.analyzer.invoke_arg_type_validators = (function (){var aget_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__61551_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__61551_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.rest(p1__61551_SHARP_))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nvar aset_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__61552_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__61552_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.butlast(cljs.core.rest(p1__61552_SHARP_)))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),aset_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),aset_validator], null);\n})();\ncljs.analyzer.check_invoke_arg_types = (function cljs$analyzer$check_invoke_arg_types(env,p__61553,opts){\nvar map__61554 = p__61553;\nvar map__61554__$1 = (((((!((map__61554 == null))))?(((((map__61554.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61554.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61554):map__61554);\nvar ast = map__61554__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61554__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif((((!(cljs.analyzer.analyzed_QMARK_(ast)))) && (cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),op)))){\nvar temp__5739__auto___62941 = cljs.core.find(cljs.analyzer.invoke_arg_type_validators,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(ast))));\nif((temp__5739__auto___62941 == null)){\n} else {\nvar vec__61556_62942 = temp__5739__auto___62941;\nvar name_62943 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61556_62942,(0),null);\nvar map__61559_62944 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61556_62942,(1),null);\nvar map__61559_62945__$1 = (((((!((map__61559_62944 == null))))?(((((map__61559_62944.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61559_62944.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61559_62944):map__61559_62944);\nvar valid_QMARK__62946 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61559_62945__$1,new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379));\nvar warning_type_62947 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61559_62945__$1,new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595));\nvar types_62950 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(ast));\nif(cljs.core.truth_((valid_QMARK__62946.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK__62946.cljs$core$IFn$_invoke$arity$1(types_62950) : valid_QMARK__62946.call(null,types_62950)))){\n} else {\ncljs.analyzer.warning(warning_type_62947,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_62943,new cljs.core.Keyword(null,\"types\",\"types\",590030639),types_62950], null));\n}\n}\n} else {\n}\n\nreturn cljs.analyzer.analyzed(ast);\n});\ncljs.analyzer.analyze_form = (function cljs$analyzer$analyze_form(env,form,name,opts){\nif((form instanceof cljs.core.Symbol)){\nreturn cljs.analyzer.analyze_symbol(env,form);\n} else {\nif(((cljs.analyzer.cljs_seq_QMARK_(form)) && ((!((cljs.core.seq(form) == null)))))){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,opts);\n} else {\nif(cljs.core.record_QMARK_(form)){\nreturn cljs.analyzer.analyze_record(env,form);\n} else {\nif(cljs.analyzer.cljs_map_QMARK_(form)){\nreturn cljs.analyzer.analyze_map(env,form);\n} else {\nif(cljs.analyzer.cljs_vector_QMARK_(form)){\nreturn cljs.analyzer.analyze_vector(env,form);\n} else {\nif(cljs.analyzer.cljs_set_QMARK_(form)){\nreturn cljs.analyzer.analyze_set(env,form);\n} else {\nif((form instanceof cljs.core.Keyword)){\nreturn cljs.analyzer.analyze_keyword(env,form);\n} else {\nif((form instanceof cljs.tagged_literals.JSValue)){\nreturn cljs.analyzer.analyze_js_value(env,form);\n} else {\nvar tag = (((form == null))?cljs.analyzer.CLJ_NIL_SYM:((typeof form === 'number')?cljs.analyzer.NUMBER_SYM:((typeof form === 'string')?cljs.analyzer.STRING_SYM:((form === true)?cljs.analyzer.BOOLEAN_SYM:((form === false)?cljs.analyzer.BOOLEAN_SYM:((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY,form))?new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null):null))))));\nvar G__61561 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\nif(cljs.core.truth_(tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__61561,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag);\n} else {\nreturn G__61561;\n}\n\n}\n}\n}\n}\n}\n}\n}\n}\n});\ncljs.analyzer.default_passes = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.infer_type,cljs.analyzer.check_invoke_arg_types], null);\ncljs.analyzer.analyze_STAR_ = (function cljs$analyzer$analyze_STAR_(env,form,name,opts){\nvar passes = cljs.analyzer._STAR_passes_STAR_;\nvar passes__$1 = (((passes == null))?cljs.analyzer.default_passes:passes);\nvar form__$1 = (((form instanceof cljs.core.LazySeq))?((cljs.core.seq(form))?form:cljs.core.List.EMPTY):form);\nvar ast = cljs.analyzer.analyze_form(env,form__$1,name,opts);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ast__$1,pass){\nreturn (pass.cljs$core$IFn$_invoke$arity$3 ? pass.cljs$core$IFn$_invoke$arity$3(env,ast__$1,opts) : pass.call(null,env,ast__$1,opts));\n}),ast,passes__$1);\n});\n/**\n * Given an environment, a map containing {:locals (mapping of names to bindings), :context\n *   (one of :statement, :expr, :return), :ns (a symbol naming the\n *   compilation ns)}, and form, returns an expression object (a map\n *   containing at least :form, :op and :env keys). If expr has any (immediately)\n *   nested exprs, must have a :children entry. This must be a vector of keywords naming\n *   the immediately nested fields mapped to an expr or vector of exprs. This will\n *   facilitate code walking without knowing the details of the op set.\n */\ncljs.analyzer.analyze = (function cljs$analyzer$analyze(var_args){\nvar G__61563 = arguments.length;\nswitch (G__61563) {\ncase 2:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 = (function (env,form){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(env,form,null);\n}));\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\ntry{if(cljs.analyzer.analyzed_QMARK_(form)){\nvar _STAR_cljs_warnings_STAR__orig_val__61565 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__61566 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__61566);\n\ntry{return cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__61565);\n}} else {\nreturn cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}\n}catch (e61564){var err__60306__auto__ = e61564;\nif(cljs.analyzer.has_error_data_QMARK_(err__60306__auto__)){\nthrow err__60306__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__60306__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__60306__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__60306__auto__.message,err__60306__auto__));\n\n}\n}\n}}));\n\n(cljs.analyzer.analyze.cljs$lang$maxFixedArity = 4);\n\n/**\n * Given a compiler state and a map from fully qualified symbols to constant\n *   EDN values, update the compiler state marking these vars as const to support\n *   direct substitution of these vars in source.\n */\ncljs.analyzer.add_consts = (function cljs$analyzer$add_consts(compiler_state,constants_map){\nreturn cljs.core.reduce_kv((function (compiler_state__$1,sym,value){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(compiler_state__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null),cljs.core.merge,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),(function (){var _STAR_passes_STAR__orig_val__61567 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__61568 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\n(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__61568);\n\ntry{return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.empty_env(),value);\n}finally {(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__61567);\n}})()], null));\n}),compiler_state,constants_map);\n});\ncljs.analyzer.resolve_symbol = (function cljs$analyzer$resolve_symbol(sym){\nif(((cljs.core.not(cljs.core.namespace(sym))) && (cljs.analyzer.dotted_symbol_QMARK_(sym)))){\nreturn sym;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1((function (){var _STAR_private_var_access_nowarn_STAR__orig_val__61569 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__61570 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__61570);\n\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_)),sym);\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__61569);\n}})());\n}\n});\nvar registry_ref_62964 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"registry-ref\",\"registry-ref\",1975823941,null));\n}),null));\nvar speced_vars_62965 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"-speced-vars\",\"-speced-vars\",1758723085,null));\n}),null));\ncljs.analyzer.get_spec_vars = (function cljs$analyzer$get_spec_vars(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)) == null)))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414),cljs.core.deref(registry_ref_62964),new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988),cljs.core.deref(speced_vars_62965)], null);\n} else {\nreturn null;\n}\n});\n/**\n * Dumps registered speced vars for a given namespace into the compiler\n *   environment.\n */\ncljs.analyzer.dump_specs = (function cljs$analyzer$dump_specs(ns){\nvar spec_vars = cljs.analyzer.get_spec_vars();\nvar ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar registry_ref = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p__61571){\nvar vec__61572 = p__61571;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61572,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61572,(1),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(k));\n})),cljs.core.deref(cljs.core.deref(registry_ref)))], null);\n} else {\nreturn null;\n}\n})(),(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar speced_vars = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (v){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(v))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"fdef-ns\",\"fdef-ns\",-1602124254).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v)))));\n})),cljs.core.deref(cljs.core.deref(speced_vars)))], null);\n} else {\nreturn null;\n}\n})()], 0));\n});\n/**\n * Registers speced vars found in a namespace analysis cache.\n */\ncljs.analyzer.register_specs = (function cljs$analyzer$register_specs(cached_ns){\nvar map__61575 = cljs.analyzer.get_spec_vars();\nvar map__61575__$1 = (((((!((map__61575 == null))))?(((((map__61575.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61575.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61575):map__61575);\nvar registry_ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61575__$1,new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414));\nvar speced_vars = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61575__$1,new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988));\nvar temp__5735__auto___62966 = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5735__auto___62966){\nvar registry_62968 = temp__5735__auto___62966;\nif(cljs.core.truth_(registry_ref)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(registry_ref),cljs.core.into,registry_62968);\n} else {\n}\n} else {\n}\n\nvar temp__5735__auto__ = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5735__auto__){\nvar vars = temp__5735__auto__;\nif(cljs.core.truth_(speced_vars)){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(speced_vars),cljs.core.into,vars);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_form_seq = (function cljs$analyzer$analyze_form_seq(var_args){\nvar G__61578 = arguments.length;\nswitch (G__61578) {\ncase 1:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1 = (function (forms){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2(forms,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2 = (function (forms,opts){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3(forms,opts,false);\n}));\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3 = (function (forms,opts,return_last_QMARK_){\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.empty_env(),new cljs.core.Keyword(null,\"build-options\",\"build-options\",1183685779),opts);\nvar _STAR_file_defs_STAR__orig_val__61579 = cljs.analyzer._STAR_file_defs_STAR_;\nvar _STAR_cljs_ns_STAR__orig_val__61580 = cljs.analyzer._STAR_cljs_ns_STAR_;\nvar _STAR_cljs_file_STAR__orig_val__61581 = cljs.analyzer._STAR_cljs_file_STAR_;\nvar _STAR_alias_map_STAR__orig_val__61582 = cljs.tools.reader._STAR_alias_map_STAR_;\nvar _STAR_file_defs_STAR__temp_val__61583 = null;\nvar _STAR_cljs_ns_STAR__temp_val__61584 = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\nvar _STAR_cljs_file_STAR__temp_val__61585 = null;\nvar _STAR_alias_map_STAR__temp_val__61586 = (function (){var or__4126__auto__ = cljs.tools.reader._STAR_alias_map_STAR_;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\n(cljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__temp_val__61583);\n\n(cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__temp_val__61584);\n\n(cljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__temp_val__61585);\n\n(cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__temp_val__61586);\n\ntry{var ns = null;\nvar forms__$1 = forms;\nvar last_ast = null;\nwhile(true){\nif((!((forms__$1 == null)))){\nvar form = cljs.core.first(forms__$1);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ast = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,form,null,opts);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760))){\nvar G__62979 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ast);\nvar G__62980 = cljs.core.next(forms__$1);\nvar G__62981 = ast;\nns = G__62979;\nforms__$1 = G__62980;\nlast_ast = G__62981;\ncontinue;\n} else {\nvar G__62982 = ns;\nvar G__62983 = cljs.core.next(forms__$1);\nvar G__62984 = ast;\nns = G__62982;\nforms__$1 = G__62983;\nlast_ast = G__62984;\ncontinue;\n}\n} else {\nif(cljs.core.truth_(return_last_QMARK_)){\nreturn last_ast;\n} else {\nreturn ns;\n}\n}\nbreak;\n}\n}finally {(cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__orig_val__61582);\n\n(cljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__orig_val__61581);\n\n(cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__orig_val__61580);\n\n(cljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__orig_val__61579);\n}}));\n\n(cljs.analyzer.analyze_form_seq.cljs$lang$maxFixedArity = 3);\n\n/**\n * Ensures that a non-nil defs map exists in the compiler state for a given\n *   ns. (A non-nil defs map signifies that the namespace has been analyzed.)\n */\ncljs.analyzer.ensure_defs = (function cljs$analyzer$ensure_defs(ns){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null),(function (p1__61587_SHARP_){\nvar or__4126__auto__ = p1__61587_SHARP_;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/analyzer.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",["^ ","~$no-warn","~$cljs.analyzer.macros","~$wrapping-errors","^L","~$with-warning-handlers","^L","~$disallowing-recur","^L","~$allowing-redef","^L","~$disallowing-ns*","^L","~$ensure","~$cljs.env.macros"],"~:excludes",["~#set",["^R","~$js-reserved","~$macroexpand-1","~$ns-interns"]],"~:name","~$cljs.analyzer","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$gstring","~$goog.string","~$cljs.tools.reader","^17","^16","^16","~$tags","~$cljs.tagged-literals","~$cljs.core","^1:","~$goog","^1;","~$cljs.tools.reader.reader-types","^1<","~$cljs.env","^1=","^14","^14","~$readers","^1<","^19","^19","~$env","^1=","~$string","~$clojure.string","^1A","^1A","~$cljs.reader","^1B","~$edn","^1B","~$reader","^17"],"~:seen",["^U",["~:require","~:require-macros"]],"~:uses",null,"^1G",["^ ","^L","^L","^S","^S","^1:","^1:","^1B","^1B","^1C","^1B"],"~:form",["~#list",["~$ns","^Z",["^1J",["~:refer-clojure","~:exclude",["^W","^X","^R","^V"]]],["^1J",["^1G",["^L","~:refer",["^K","^M","^N","^O","^P","^Q"]],["^S","^1N",["^R"]]]],["^1J",["^1F",["^16","~:as","^15"],["^1A","^1O","^1@"],["^14","^1O","^13"],["^1=","^1O","^1?"],["^19","^1O","^18"],["^17","^1O","^1D"],["^1<","^1O","^1>"],["^1B","^1O","^1C"]]]]],"~:flags",["^ ","^1G",["^U",[]],"^1F",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^1;","^1:","^16","^1A","^14","^1=","^19","^17","^1<","^1B"]],"^10","^Z","~:resource-id",["~:shadow.build.classpath/resource","cljs/analyzer.cljc"],"~:compiled-at",1598576901455,"~:resource-name","cljs/analyzer.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.analyzer\n  #?(:clj  (:refer-clojure :exclude [macroexpand-1 ensure])\n     :cljs (:refer-clojure :exclude [macroexpand-1 ns-interns ensure js-reserved]))\n  #?(:cljs (:require-macros\n             [cljs.analyzer.macros\n              :refer [no-warn wrapping-errors with-warning-handlers\n                      disallowing-recur allowing-redef disallowing-ns*]]\n             [cljs.env.macros :refer [ensure]]))\n  #?(:clj  (:require [cljs.util :as util :refer [ns->relpath topo-sort]]\n                     [clojure.java.io :as io]\n                     [clojure.string :as string]\n                     [clojure.set :as set]\n                     [cljs.env :as env :refer [ensure]]\n                     [cljs.js-deps :as deps]\n                     [cljs.tagged-literals :as tags]\n                     [clojure.tools.reader :as reader]\n                     [clojure.tools.reader.reader-types :as readers]\n                     [clojure.edn :as edn]\n                     [cljs.externs :as externs])\n     :cljs (:require [goog.string :as gstring]\n                     [clojure.string :as string]\n                     [clojure.set :as set]\n                     [cljs.env :as env]\n                     [cljs.tagged-literals :as tags]\n                     [cljs.tools.reader :as reader]\n                     [cljs.tools.reader.reader-types :as readers]\n                     [cljs.reader :as edn]))\n  #?(:clj (:import [java.io File Reader PushbackReader]\n                   [java.util.regex Pattern]\n                   [java.net URL]\n                   [java.lang Throwable]\n                   [clojure.lang Namespace Var LazySeq ArityException]\n                   [cljs.tagged_literals JSValue])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; User file-local compiler flags\n#?(:clj (def ^:dynamic *unchecked-if* false))\n#?(:clj (def ^:dynamic *unchecked-arrays* false))\n\n;; Compiler dynamic vars\n(def ^:dynamic *cljs-ns* 'cljs.user)\n(def ^:dynamic *cljs-file* nil)\n(def ^:dynamic *checked-arrays* false)\n(def ^:dynamic *check-alias-dupes* true)\n(def ^:dynamic *cljs-static-fns* false)\n(def ^:dynamic *fn-invoke-direct* false)\n(def ^:dynamic *cljs-macros-path* \"/cljs/core\")\n(def ^:dynamic *cljs-macros-is-classpath* true)\n(def ^:dynamic *cljs-dep-set* (with-meta #{} {:dep-path []}))\n(def ^:dynamic *analyze-deps* true)\n(def ^:dynamic *load-tests* true)\n(def ^:dynamic *load-macros* true)\n(def ^:dynamic *reload-macros* false)\n(def ^:dynamic *macro-infer* true)\n(def ^:dynamic *passes* nil)\n(def ^:dynamic *file-defs* nil)\n(def ^:dynamic *private-var-access-nowarn* false)\n\n(def constants-ns-sym\n  \"The namespace of the constants table as a symbol.\"\n  'cljs.core.constants)\n\n#?(:clj\n   (def transit-read-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [read-handler     @(ns-resolve ns 'read-handler)\n               read-handler-map @(ns-resolve ns 'read-handler-map)]\n           {:handlers\n             (read-handler-map\n               {\"cljs/js\"    (read-handler (fn [v] (JSValue. v)))\n                \"cljs/regex\" (read-handler (fn [v] (Pattern/compile v)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit-write-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [write-handler     @(ns-resolve ns 'write-handler)\n               write-handler-map @(ns-resolve ns 'write-handler-map)]\n           {:handlers\n             (write-handler-map\n               {JSValue\n                (write-handler\n                  (fn [_] \"cljs/js\")\n                  (fn [js] (.val ^JSValue js)))\n                Pattern\n                (write-handler\n                  (fn [_] \"cljs/regex\")\n                  (fn [pat] (.pattern ^Pattern pat)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit\n     (delay\n       (try\n         (require '[cognitect.transit])\n         (when-some [ns (find-ns 'cognitect.transit)]\n           {:writer @(ns-resolve ns 'writer)\n            :reader @(ns-resolve ns 'reader)\n            :write  @(ns-resolve ns 'write)\n            :read   @(ns-resolve ns 'read)})\n         (catch Throwable t\n           nil)))))\n\n;; log compiler activities\n(def ^:dynamic *verbose* false)\n\n(def -cljs-macros-loaded (atom false))\n\n(def ^:dynamic *cljs-warnings*\n  {:preamble-missing true\n   :unprovided true\n   :undeclared-var true\n   :private-var-access true\n   :undeclared-ns true\n   :undeclared-ns-form true\n   :redef true\n   :redef-in-file true\n   :dynamic true\n   :fn-var true\n   :fn-arity true\n   :fn-deprecated true\n   :declared-arglists-mismatch true\n   :protocol-deprecated true\n   :undeclared-protocol-symbol true\n   :invalid-protocol-symbol true\n   :multiple-variadic-overloads true\n   :variadic-max-arity true\n   :overload-arity true\n   :extending-base-js-type true\n   :invoke-ctor true\n   :invalid-arithmetic true\n   :invalid-array-access true\n   :protocol-invalid-method true\n   :protocol-duped-method true\n   :protocol-multiple-impls true\n   :protocol-with-variadic-method true\n   :protocol-with-overwriting-method true\n   :protocol-impl-with-variadic-method true\n   :protocol-impl-recur-with-target true\n   :single-segment-namespace true\n   :munged-namespace true\n   :ns-var-clash true\n   :non-dynamic-earmuffed-var true\n   :extend-type-invalid-method-shape true\n   :unsupported-js-module-type true\n   :unsupported-preprocess-value true\n   :js-shadowed-by-local true\n   :infer-warning false})\n\n(defn unchecked-arrays? []\n  *unchecked-arrays*)\n\n(defn compiler-options []\n  (get @env/*compiler* :options))\n\n(defn get-externs []\n  (::externs @env/*compiler*))\n\n(defn checked-arrays\n  \"Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*.\"\n  []\n  (when (and (not (:advanced (compiler-options)))\n             (not *unchecked-arrays*))\n    *checked-arrays*))\n\n(def js-reserved\n  #{\"arguments\" \"abstract\" \"await\" \"boolean\" \"break\" \"byte\" \"case\"\n    \"catch\" \"char\" \"class\" \"const\" \"continue\"\n    \"debugger\" \"default\" \"delete\" \"do\" \"double\"\n    \"else\" \"enum\" \"export\" \"extends\" \"final\"\n    \"finally\" \"float\" \"for\" \"function\" \"goto\" \"if\"\n    \"implements\" \"import\" \"in\" \"instanceof\" \"int\"\n    \"interface\" \"let\" \"long\" \"native\" \"new\"\n    \"package\" \"private\" \"protected\" \"public\"\n    \"return\" \"short\" \"static\" \"super\" \"switch\"\n    \"synchronized\" \"this\" \"throw\" \"throws\"\n    \"transient\" \"try\" \"typeof\" \"var\" \"void\"\n    \"volatile\" \"while\" \"with\" \"yield\" \"methods\"\n    \"null\" \"constructor\"})\n\n(def es5-allowed\n  #{\"default\"})\n\n#?(:clj (def SENTINEL (Object.))\n   :cljs (def SENTINEL (js-obj)))\n\n(defn gets\n  ([m k0 k1]\n    (let [m (get m k0 SENTINEL)]\n      (when-not (identical? m SENTINEL)\n        (get m k1))))\n  ([m k0 k1 k2]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (get m k2))))))\n  ([m k0 k1 k2 k3]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (let [m (get m k2 SENTINEL)]\n             (when-not (identical? m SENTINEL)\n               (get m k3)))))))))\n\n#?(:cljs\n   (def CLJ_NIL_SYM 'clj-nil))\n\n#?(:cljs\n   (def NUMBER_SYM 'number))\n\n#?(:cljs\n   (def STRING_SYM 'string))\n\n(def BOOLEAN_SYM 'boolean)\n\n#?(:cljs\n   (def JS_STAR_SYM 'js*))\n\n#?(:cljs\n   (def DOT_SYM '.))\n\n#?(:cljs\n   (def NEW_SYM 'new))\n\n#?(:cljs\n   (def CLJS_CORE_SYM 'cljs.core))\n\n#?(:cljs\n   (def CLJS_CORE_MACROS_SYM 'cljs.core$macros))\n\n(def IGNORE_SYM 'ignore)\n\n(def ANY_SYM 'any)\n\n#?(:cljs\n   (defn ^boolean cljs-seq? [x]\n     (implements? ISeq x)))\n\n#?(:cljs\n   (defn ^boolean cljs-map? [x]\n     (implements? IMap x)))\n\n#?(:cljs\n   (defn ^boolean cljs-vector? [x]\n     (implements? IVector x)))\n\n#?(:cljs\n   (defn ^boolean cljs-set? [x]\n     (implements? ISet x)))\n\n#?(:cljs\n   (defn munge-path [ss]\n     (munge (str ss))))\n\n#?(:cljs\n   (defn ns->relpath\n     \"Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.\"\n     ([ns] (ns->relpath ns :cljs))\n     ([ns ext]\n      (str (string/replace (munge-path ns) \\. \\/) \".\" (name ext)))))\n\n#?(:cljs\n   (defn topo-sort\n     ([x get-deps]\n      (topo-sort x 0 (atom (sorted-map)) (memoize get-deps)))\n     ([x depth state memo-get-deps]\n      (let [deps (memo-get-deps x)]\n        (swap! state update-in [depth] (fnil into #{}) deps)\n        (doseq [dep deps]\n          (topo-sort dep (inc depth) state memo-get-deps))\n        (doseq [[<depth _] (subseq @state < depth)]\n          (swap! state update-in [<depth] set/difference deps))\n        (when (= depth 0)\n          (distinct (apply concat (vals @state))))))))\n\n(declare message namespaces)\n\n(defn ast?\n  #?(:cljs {:tag boolean})\n  [x]\n  (and (map? x) (contains? x :op)))\n\n(defmulti error-message (fn [warning-type & _] warning-type))\n\n(defmethod error-message :preamble-missing\n  [warning-type info]\n  (str \"Preamble resource file not found: \" (string/join \" \" (:missing info))))\n\n(defmethod error-message :unprovided\n  [warning-type info]\n  (str \"Required namespace not provided for \" (string/join \" \" (:unprovided info))))\n\n(defmethod error-message :undeclared-var\n  [warning-type info]\n  (str (if (:macro-present? info)\n         \"Can't take value of macro \"\n         \"Use of undeclared Var \")\n    (:prefix info) \"/\" (:suffix info)))\n\n(defmethod error-message :private-var-access\n  [warning-type info]\n  (str \"var: \" (:sym info) \" is not public\"))\n\n(defmethod error-message :undeclared-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :cljs)\n       \", \" (ns->relpath ns-sym :cljc)\n       \", or JavaScript source providing \\\"\" js-provide \"\\\"\"\n    (when (string/includes? (ns->relpath ns-sym) \"_\")\n      \" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\")))\n\n(defmethod error-message :undeclared-macros-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such macros namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :clj)\n       \" or \" (ns->relpath ns-sym :cljc)))\n\n(defmethod error-message :dynamic\n  [warning-type info]\n  (str (:name info) \" not declared ^:dynamic\"))\n\n(defmethod error-message :redef\n  [warning-type info]\n  (str (:sym info) \" already refers to: \" (symbol (str (:ns info)) (str (:sym info)))\n    \" being replaced by: \" (symbol (str (:ns-name info)) (str (:sym info)))))\n\n(defmethod error-message :redef-in-file\n  [warning-type info]\n  (str (:sym info) \" at line \" (:line info) \" is being replaced\"))\n\n(defmethod error-message :fn-var\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" no longer fn, references are stale\"))\n\n(defmethod error-message :fn-arity\n  [warning-type info]\n  (str \"Wrong number of args (\" (:argc info) \") passed to \"\n    (or (:ctor info)\n      (:name info))))\n\n(defmethod error-message :fn-deprecated\n  [warning-type info]\n  (str (-> info :fexpr :info :name) \" is deprecated\"))\n\n(defmethod error-message :declared-arglists-mismatch\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" declared arglists \" (:declared info)\n    \" mismatch defined arglists \" (:defined info)))\n\n(defmethod error-message :undeclared-ns-form\n  [warning-type info]\n  (str \"Invalid :refer, \" (:type info) \" \" (:lib info) \"/\" (:sym info) \" does not exist\"))\n\n(defmethod error-message :protocol-deprecated\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" is deprecated\"))\n\n(defmethod error-message :undeclared-protocol-symbol\n  [warning-type info]\n  (str \"Can't resolve protocol symbol \" (:protocol info)))\n\n(defmethod error-message :invalid-protocol-symbol\n  [warning-type info]\n  (str \"Symbol \" (:protocol info) \" is not a protocol\"))\n\n(defmethod error-message :protocol-invalid-method\n  [warning-type info]\n  (if (:no-such-method info)\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" does not declare method called \" (:fname info))\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" \" (:fname info) \" does not declare arity \" (:invalid-arity info))))\n\n(defmethod error-message :protocol-duped-method\n  [warning-type info]\n  (str \"Duplicated methods in protocol implementation \" (:protocol info) \" \" (:fname info)))\n\n(defmethod error-message :protocol-multiple-impls\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implemented multiple times\"))\n\n(defmethod error-message :protocol-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" declares method \"\n       (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-with-overwriting-method\n  [warning-type info]\n  (let [overwritten-protocol (-> info :existing :protocol)]\n    (str \"Protocol \" (:protocol info) \" is overwriting \"\n      (if overwritten-protocol \"method\" \"function\")\n      \" \" (:name info)\n      (when overwritten-protocol (str \" of protocol \" (name overwritten-protocol))))))\n\n(defmethod error-message :protocol-impl-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implements method \"\n    (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-impl-recur-with-target\n  [warning-type info]\n  (str \"Ignoring target object \\\"\" (pr-str (:form info)) \"\\\" passed in recur to protocol method head\"))\n\n(defmethod error-message :multiple-variadic-overloads\n  [warning-type info]\n  (str (:name info) \": Can't have more than 1 variadic overload\"))\n\n(defmethod error-message :variadic-max-arity\n  [warning-type info]\n  (str (:name info) \": Can't have fixed arity function with more params than variadic function\"))\n\n(defmethod error-message :overload-arity\n  [warning-type info]\n  (str (:name info) \": Can't have 2 overloads with same arity\"))\n\n(defmethod error-message :extending-base-js-type\n  [warning-type info]\n  (str \"Extending an existing JavaScript type - use a different symbol name \"\n       \"instead of \" (:current-symbol info) \" e.g \" (:suggested-symbol info)))\n\n(defmethod error-message :invalid-arithmetic\n  [warning-type info]\n  (str (:js-op info) \", all arguments must be numbers, got \" (:types info) \" instead\"))\n\n(defmethod error-message :invalid-array-access\n  [warning-type {:keys [name types]}]\n  (case name\n    (cljs.core/checked-aget cljs.core/checked-aget')\n    (str \"cljs.core/aget, arguments must be an array followed by numeric indices, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (rest types)))\n        (str \" (consider \"\n          (if (== 2 (count types))\n            \"goog.object/get\"\n            \"goog.object/getValueByKeys\")\n          \" for object access)\")))\n\n    (cljs.core/checked-aset cljs.core/checked-aset')\n    (str \"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (butlast (rest types))))\n        \" (consider goog.object/set for object access)\"))))\n\n(defmethod error-message :invoke-ctor\n  [warning-type info]\n  (str \"Cannot invoke type constructor \" (-> info :fexpr :info :name) \" as function \"))\n\n(defmethod error-message :single-segment-namespace\n  [warning-type info]\n  (str (:name info) \" is a single segment namespace\"))\n\n(defmethod error-message :munged-namespace\n  [warning-type {:keys [name] :as info}]\n  (let [munged (->> (string/split (clojure.core/name name) #\"\\.\")\n                 (map #(if (js-reserved %) (str % \"$\") %))\n                 (string/join \".\")\n                 (munge))]\n    (str \"Namespace \" name \" contains a reserved JavaScript keyword,\"\n         \" the corresponding Google Closure namespace will be munged to \" munged)))\n\n(defmethod error-message :ns-var-clash\n  [warning-type {:keys [ns var] :as info}]\n  (str \"Namespace \" ns \" clashes with var \" var))\n\n(defmethod error-message :non-dynamic-earmuffed-var\n  [warning-type {:keys [var] :as info}]\n  (str var \" not declared dynamic and thus is not dynamically rebindable, but its name \"\n    \"suggests otherwise. Please either indicate ^:dynamic \" var \" or change the name\"))\n\n(defmethod error-message :extend-type-invalid-method-shape\n  [warning-type {:keys [protocol method] :as info}]\n  (str \"Bad extend-type method shape for protocol \" protocol \" method \" method\n       \", method arities must be grouped together\"))\n\n(defmethod error-message :unsupported-js-module-type\n  [warning-type {:keys [module-type file] :as info}]\n  (str \"Unsupported JavaScript module type \" module-type \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :unsupported-preprocess-value\n  [warning-type {:keys [preprocess file]}]\n  (str \"Unsupported preprocess value \" preprocess \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :js-shadowed-by-local\n  [warning-type {:keys [name]}]\n  (str name \" is shadowed by a local\"))\n\n(defmethod error-message :infer-warning\n  [warning-type {:keys [warn-type form type property]}]\n  (case warn-type\n    :target   (str \"Cannot infer target type in expression \" form \"\")\n    :property (str \"Cannot resolve property \" property\n                   \" for inferred type \" type  \" in expression \" form)\n    :object   (str \"Adding extern to Object for property \" property \" due to \"\n                   \"ambiguous expression \" form)))\n\n(defn default-warning-handler [warning-type env extra]\n  (when (warning-type *cljs-warnings*)\n    (when-let [s (error-message warning-type extra)]\n      #?(:clj  (binding [*out* *err*]\n                 (println (message env (str \"WARNING: \" s))))\n         :cljs (binding [*print-fn* *print-err-fn*]\n                 (println (message env (str \"WARNING: \" s))))))))\n\n(def ^:dynamic *cljs-warning-handlers*\n  [default-warning-handler])\n\n#?(:clj\n   (defmacro with-warning-handlers [handlers & body]\n     `(binding [*cljs-warning-handlers* ~handlers]\n        ~@body)))\n\n(defn- repeat-char [c n]\n  (loop [ret c n n]\n    (if (pos? n)\n      (recur (str ret c) (dec n))\n      ret)))\n\n(defn- hex-format [s pad]\n  #?(:clj  (str \"_u\" (format (str \"%0\" pad \"x\") (int (first s))) \"_\")\n     :cljs (let [hex (.toString (.charCodeAt s 0) 16)\n                 len (. hex -length)\n                 hex (if (< len pad)\n                       (str (repeat-char \"0\" (- pad len)) hex)\n                       hex)]\n             (str \"_u\" hex \"_\"))))\n\n(defn gen-constant-id [value]\n  (let [prefix (cond\n                 (keyword? value) \"cst$kw$\"\n                 (symbol? value)  \"cst$sym$\"\n                 :else\n                 (throw\n                   #?(:clj (Exception. (str \"constant type \" (type value) \" not supported\"))\n                      :cljs (js/Error. (str \"constant type \" (type value) \" not supported\")))))\n        name   (if (keyword? value)\n                 (subs (str value) 1)\n                 (str value))\n        name   (if (= \".\" name)\n                 \"_DOT_\"\n                 (-> name\n                     (string/replace \"-\" \"_DASH_\")\n                     (munge)\n                     (string/replace \".\" \"$\")\n                     (string/replace #\"(?i)[^a-z0-9$_]\" #(hex-format % 4))))]\n    (symbol (str prefix name))))\n\n(defn- register-constant!\n  ([val] (register-constant! nil val))\n  ([env val]\n   (swap! env/*compiler*\n     (fn [cenv]\n       (cond->\n         (-> cenv\n           (update-in [::constant-table]\n             (fn [table]\n               (if (get table val)\n                 table\n                 (assoc table val (gen-constant-id val))))))\n         env (update-in [::namespaces (-> env :ns :name) ::constants]\n               (fn [{:keys [seen order] :or {seen #{} order []} :as constants}]\n                 (cond-> constants\n                   (not (contains? seen val))\n                   (assoc\n                     :seen (conj seen val)\n                     :order (conj order val))))))))))\n\n(def default-namespaces '{cljs.core {:name cljs.core}\n                          cljs.user {:name cljs.user}})\n\n;; this exists solely to support read-only namespace access from macros.\n;; External tools should look at the authoritative ::namespaces slot in the\n;; compiler-env atoms/maps they're using already; this value will yield only\n;; `default-namespaces` when accessed outside the scope of a\n;; compilation/analysis call\n(def namespaces\n  #?(:clj\n     (reify clojure.lang.IDeref\n       (deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))\n     :cljs\n     (reify IDeref\n       (-deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))))\n\n(defn get-namespace\n  ([key]\n    (get-namespace env/*compiler* key))\n  ([cenv key]\n   (if-some [ns (get-in @cenv [::namespaces key])]\n       ns\n       (when (= 'cljs.user key)\n         {:name 'cljs.user}))))\n\n#?(:clj\n   (defmacro no-warn [& body]\n     (let [no-warnings (zipmap (keys *cljs-warnings*) (repeat false))]\n       `(binding [*cljs-warnings* ~no-warnings]\n          ~@body))))\n\n#?(:clj\n   (defmacro all-warn [& body]\n     (let [all-warnings (zipmap (keys *cljs-warnings*) (repeat true))]\n       `(binding [*cljs-warnings* ~all-warnings]\n          ~@body))))\n\n(defn get-line [x env]\n  (or (-> x meta :line) (:line env)))\n\n(defn get-col [x env]\n  (or (-> x meta :column) (:column env)))\n\n(defn intern-macros\n  \"Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.\"\n  ([ns] (intern-macros ns false))\n  ([ns reload]\n    (when (or (nil? (gets @env/*compiler* ::namespaces ns :macros))\n              reload)\n      (swap! env/*compiler* assoc-in [::namespaces ns :macros]\n        (->> #?(:clj (ns-interns ns) :cljs (ns-interns* ns))\n             (filter (fn [[_ ^Var v]] (.isMacro v)))\n             (map (fn [[k v]]\n                    [k (as-> (meta v) vm\n                         (let [ns (.getName ^Namespace (:ns vm))]\n                           (assoc vm\n                             :ns ns\n                             :name (symbol (str ns) (str k))\n                             :macro true)))]))\n             (into {}))))))\n\n#?(:clj\n   (def load-mutex (Object.)))\n\n#?(:clj\n   (defn load-core []\n     (when (not @-cljs-macros-loaded)\n       (reset! -cljs-macros-loaded true)\n       (if *cljs-macros-is-classpath*\n         (locking load-mutex\n           (load *cljs-macros-path*))\n         (locking load-mutex\n           (load-file *cljs-macros-path*))))\n     (intern-macros 'cljs.core)))\n\n#?(:clj\n   (defmacro with-core-macros\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path]\n          ~@body))))\n\n#?(:clj\n   (defmacro with-core-macros-file\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path\n                  *cljs-macros-is-classpath* false]\n          ~@body))))\n\n(defn empty-env\n  \"Construct an empty analysis environment. Required to analyze forms.\"\n  []\n  (ensure\n    {:ns (get-namespace *cljs-ns*)\n     :context :statement\n     :locals {}\n     :fn-scope []\n     :js-globals (into {}\n                   (map #(vector % {:op :js-var :name % :ns 'js})\n                     '(alert window document console escape unescape\n                       screen location navigator history location\n                       global process require module exports)))}))\n\n(defn- source-info->error-data\n  [{:keys [file line column]}]\n  {:clojure.error/source file\n   :clojure.error/line   line\n   :clojure.error/column column})\n\n(defn source-info\n  ([env]\n   (when (:line env)\n     (source-info nil env)))\n  ([name env]\n   (cond-> {:file (if (= (-> env :ns :name) 'cljs.core)\n                    \"cljs/core.cljs\"\n                    *cljs-file*)\n            :line (get-line name env)\n            :column (get-col name env)}\n     (:root-source-info env)\n     (merge (select-keys env [:root-source-info])))))\n\n(defn message [env s]\n  (str s\n    (if (:line env)\n      (str \" at line \" (:line env) \" \" *cljs-file*)\n      (when *cljs-file*\n        (str \" in file \" *cljs-file*)))))\n\n(defn warning [warning-type env extra]\n  (doseq [handler *cljs-warning-handlers*]\n    (handler warning-type env extra)))\n\n(defn- accumulating-warning-handler [warn-acc]\n  (fn [warning-type env extra]\n    (when (warning-type *cljs-warnings*)\n      (swap! warn-acc conj [warning-type env extra]))))\n\n(defn- replay-accumulated-warnings [warn-acc]\n  (run! #(apply warning %) @warn-acc))\n\n(defn- error-data\n  ([env phase]\n   (error-data env phase nil))\n  ([env phase symbol]\n   (merge (-> (source-info env) source-info->error-data)\n     {:clojure.error/phase phase}\n     (when symbol\n       {:clojure.error/symbol symbol}))))\n\n(defn- compile-syntax-error\n  [env msg symbol]\n  (ex-info nil (error-data env :compile-syntax-check symbol)\n    #?(:clj (RuntimeException. ^String msg) :cljs (js/Error. msg))))\n\n(defn error\n  ([env msg]\n   (error env msg nil))\n  ([env msg cause]\n   (ex-info (message env msg)\n     (assoc (source-info env) :tag :cljs/analysis-error)\n     cause)))\n\n(defn analysis-error?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (= :cljs/analysis-error (:tag (ex-data ex))))\n\n(defn has-error-data?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (contains? (ex-data ex) :clojure.error/phase))\n\n#?(:clj\n   (defmacro wrapping-errors [env & body]\n     `(try\n        ~@body\n        (catch Throwable err#\n          (cond\n            (has-error-data? err#) (throw err#)\n            (analysis-error? err#) (throw (ex-info nil (error-data ~env :compilation) err#))\n            :else (throw (ex-info nil (error-data ~env :compilation) (error ~env (.getMessage err#) err#))))))))\n\n;; namespaces implicit to the inclusion of cljs.core\n(def implicit-nses '#{goog goog.object goog.string goog.array Math String})\n\n(defn implicit-import?\n  #?(:cljs {:tag boolean})\n  [env prefix suffix]\n  (contains? implicit-nses prefix))\n\n(declare get-expander)\n\n(defn confirm-var-exist-warning [env prefix suffix]\n  (fn [env prefix suffix]\n    (warning :undeclared-var env\n      {:prefix         prefix\n       :suffix         suffix\n       :macro-present? (not (nil? (get-expander (symbol (str prefix) (str suffix)) env)))})))\n\n(defn loaded-js-ns?\n  \"Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.\"\n  #?(:cljs {:tag boolean})\n  [env prefix]\n  (when-not (gets @env/*compiler* ::namespaces prefix)\n    (let [ns (:ns env)]\n      (or (some? (get (:requires ns) prefix))\n          (some? (get (:imports ns) prefix))))))\n\n(defn- internal-js-module-exists?\n  [js-module-index module]\n  ;; we need to check both keys and values of the JS module index, because\n  ;; macroexpansion will be looking for the provided name - António Monteiro\n  (contains?\n    (into #{}\n      (mapcat (fn [[k v]]\n                [k (:name v)]))\n      js-module-index)\n    (str module)))\n\n(def js-module-exists?* (memoize internal-js-module-exists?))\n\n(defn js-module-exists?\n  [module]\n  (js-module-exists?* (get-in @env/*compiler* [:js-module-index]) module))\n\n(defn node-module-dep?\n  #?(:cljs {:tag boolean})\n  [module]\n  #?(:clj (contains?\n            (get-in @env/*compiler* [:node-module-index])\n            (str module))\n     :cljs (try\n             (and (= *target* \"nodejs\")\n                  (boolean (js/require.resolve (str module))))\n             (catch :default _\n               false))))\n\n(defn dep-has-global-exports?\n  [module]\n  (let [global-exports (get-in @env/*compiler* [:js-dependency-index (str module) :global-exports])]\n    (or (contains? global-exports (symbol module))\n        (contains? global-exports (name module)))))\n\n(defn confirm-var-exists\n  ([env prefix suffix]\n   (let [warn (confirm-var-exist-warning env prefix suffix)]\n     (confirm-var-exists env prefix suffix warn)))\n  ([env prefix suffix missing-fn]\n   (let [sufstr     (str suffix)\n         suffix-str (if (and #?(:clj  (not= \"..\" sufstr)\n                                :cljs (not (identical? \"..\" sufstr))) ;; leave cljs.core$macros/.. alone\n                          #?(:clj  (re-find #\"\\.\" sufstr)\n                             :cljs ^boolean (.test #\"\\.\" sufstr)))\n                      (first (string/split sufstr #\"\\.\"))\n                      suffix)\n         suffix     (symbol suffix-str)]\n     (when (and (not (implicit-import? env prefix suffix))\n                (not (loaded-js-ns? env prefix))\n                (not (and (= 'cljs.core prefix) (= 'unquote suffix)))\n                (nil? (gets @env/*compiler* ::namespaces prefix :defs suffix))\n                (not (js-module-exists? prefix)))\n       (missing-fn env prefix suffix)))))\n\n(defn confirm-var-exists-throw []\n  (fn [env prefix suffix]\n    (confirm-var-exists env prefix suffix\n      (fn [env prefix suffix]\n        (throw (error env (str \"Unable to resolve var: \" suffix \" in this context\")))))))\n\n(defn resolve-ns-alias\n  ([env name]\n   (resolve-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:requires (:ns env)) sym not-found))))\n\n(defn resolve-macro-ns-alias\n  ([env name]\n   (resolve-macro-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:require-macros (:ns env)) sym not-found))))\n\n(defn confirm-ns\n  \"Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found.\"\n  [env ns-sym]\n  (when (and (not= 'cljs.core ns-sym)\n             (nil? (get implicit-nses ns-sym))\n             (nil? (get (-> env :ns :requires) ns-sym))\n             ;; something else may have loaded the namespace, i.e. load-file\n             (nil? (gets @env/*compiler* ::namespaces ns-sym))\n             ;; macros may refer to namespaces never explicitly required\n             ;; confirm that the library at least exists\n             #?(:clj (nil? (util/ns->source ns-sym)))\n             (not (js-module-exists? ns-sym)))\n    (warning :undeclared-ns env {:ns-sym ns-sym :js-provide ns-sym})))\n\n(defn core-name?\n  \"Is sym visible from core in the current compilation namespace?\"\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (and (or (some? (gets @env/*compiler* ::namespaces 'cljs.core :defs sym))\n           (if-some [mac (get-expander sym env)]\n             (let [^Namespace ns (-> mac meta :ns)]\n               (= (.getName ns) #?(:clj 'cljs.core :cljs 'cljs.core$macros)))\n             false))\n       (not (contains? (-> env :ns :excludes) sym))))\n\n(defn public-name?\n  \"Is sym public?\"\n  #?(:cljs {:tag boolean})\n  [ns sym]\n  (let [var-ast (or (gets @env/*compiler* ::namespaces ns :defs sym)\n                    #?(:clj  (gets @env/*compiler* ::namespaces ns :macros sym)\n                       :cljs (gets @env/*compiler* ::namespaces (symbol (str (name ns) \"$macros\")) :defs sym)))]\n    (and (some? var-ast)\n         (not (or (:private var-ast)\n                  (:anonymous var-ast))))))\n\n(defn js-tag? [x]\n  (and (symbol? x)\n       (or (= 'js x)\n           (= \"js\" (namespace x)))))\n\n(defn normalize-js-tag [x]\n  ;; if not 'js, assume constructor\n  (if-not (= 'js x)\n    (with-meta 'js\n      {:prefix (conj (->> (string/split (name x) #\"\\.\")\n                       (map symbol) vec)\n                 'prototype)})\n    x))\n\n(defn ->type-set\n  \"Ensures that a type tag is a set.\"\n  [t]\n  (if #?(:clj  (set? t)\n         :cljs (cljs-set? t))\n    t\n    #{t}))\n\n(defn canonicalize-type [t]\n  \"Ensures that a type tag is either nil, a type symbol, or a non-singleton\n  set of type symbols, absorbing clj-nil into seq and all types into any.\"\n  (cond\n    (symbol? t) t\n    (empty? t) nil\n    (== 1 (count t)) (first t)\n    (contains? t 'any) 'any\n    (contains? t 'seq) (let [res (disj t 'clj-nil)]\n                         (if (== 1 (count res))\n                           'seq\n                           res))\n    :else t))\n\n(defn add-types\n  \"Produces a union of types.\"\n  ([] 'any)\n  ([t1] t1)\n  ([t1 t2]\n   (if (or (nil? t1)\n           (nil? t2))\n     'any\n     (-> (set/union (->type-set t1) (->type-set t2))\n       canonicalize-type)))\n  ([t1 t2 & ts]\n   (apply add-types (add-types t1 t2) ts)))\n\n(def alias->type\n  '{object   Object\n    string   String\n    number   Number\n    array    Array\n    function Function\n    boolean  Boolean\n    symbol   Symbol})\n\n(defn has-extern?*\n  ([pre externs]\n   (let [pre (if-some [me (find\n                            (get-in externs '[Window prototype])\n                            (first pre))]\n               (if-some [tag (-> me first meta :tag)]\n                 (into [tag 'prototype] (next pre))\n                 pre)\n               pre)]\n     (has-extern?* pre externs externs)))\n  ([pre externs top]\n   (cond\n     (empty? pre) true\n     :else\n     (let [x  (first pre)\n           me (find externs x)]\n       (cond\n         (not me) false\n         :else\n         (let [[x' externs'] me\n               xmeta (meta x')]\n           (if (and (= 'Function (:tag xmeta)) (:ctor xmeta))\n             (or (has-extern?* (into '[prototype] (next pre)) externs' top)\n                 (has-extern?* (next pre) externs' top))\n             (recur (next pre) externs' top))))))))\n\n(defn has-extern?\n  ([pre]\n   (has-extern? pre (get-externs)))\n  ([pre externs]\n   (or (has-extern?* pre externs)\n       (when (= 1 (count pre))\n         (let [x (first pre)]\n           (or (get-in externs (conj '[Window prototype] x))\n               (get-in externs (conj '[Number] x)))))\n       (-> (last pre) str (string/starts-with? \"cljs$\")))))\n\n(defn js-tag\n  ([pre]\n   (js-tag pre :tag))\n  ([pre tag-type]\n   (js-tag pre tag-type (get-externs)))\n  ([pre tag-type externs]\n   (js-tag pre tag-type externs externs))\n  ([pre tag-type externs top]\n   (when-let [[p externs' :as me] (find externs (first pre))]\n     (let [tag (-> p meta tag-type)]\n       (if (= (count pre) 1)\n         (when tag (symbol \"js\" (str (alias->type tag tag))))\n         (or (js-tag (next pre) tag-type externs' top)\n             (js-tag (into '[prototype] (next pre)) tag-type (get top tag) top)))))))\n\n(defn dotted-symbol? [sym]\n  (let [s (str sym)]\n    #?(:clj  (and (.contains s \".\")\n                  (not (.contains s \"..\")))\n       :cljs (and ^boolean (goog.string/contains s \".\")\n                  (not ^boolean (goog.string/contains s \"..\"))))))\n\n(defn munge-node-lib [name]\n  (str \"node$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                    :cljs \"$$\")))))\n\n(defn munge-global-export [name]\n  (str \"global$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                      :cljs \"$$\")))))\n\n(defn resolve-alias\n  \"Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original.\"\n  [ns sym]\n  ;; Conditionally alias aget/aset fns to checked variants\n  (if (and (= 'cljs.core ns)\n           ('#{aget aset} sym)\n           (checked-arrays))\n    (get-in '{:warn  {aget checked-aget\n                      aset checked-aset}\n              :error {aget checked-aget'\n                      aset checked-aset'}}\n      [(checked-arrays) sym])\n    sym))\n\n(defn ns->module-type [ns]\n  (cond\n    (js-module-exists? ns) :js\n    (node-module-dep? ns) :node\n    (dep-has-global-exports? ns) :global))\n\n(defmulti resolve* (fn [env sym full-ns current-ns] (ns->module-type full-ns)))\n\n(defmethod resolve* :js\n  [env sym full-ns current-ns]\n  {:name (symbol (str full-ns) (str (name sym)))\n   :op :js-var\n   :ns full-ns})\n\n(defn extern-pre [sym current-ns]\n  (let [pre (into '[Object] (->> (string/split (name sym) #\"\\.\") (map symbol) vec))]\n    (when-not (has-extern? pre)\n      (swap! env/*compiler* update-in\n        (into [::namespaces current-ns :externs] pre) merge {}))\n    pre))\n\n(defn node-like?\n  ([]\n   (node-like? (compiler-options)))\n  ([opts]\n   (and (= :nodejs (:target opts))\n        (false? (:nodejs-rt opts)))))\n\n(defmethod resolve* :node\n  [env sym full-ns current-ns]\n  ;; not actually targeting Node.js, we need to generate externs\n  (if (node-like?)\n    (let [pre (extern-pre sym current-ns)]\n      {:ns      current-ns\n       :name    (symbol (str current-ns) (str (munge-node-lib full-ns) \".\" (name sym)))\n       :op      :js-var\n       :tag     (with-meta 'js {:prefix pre})\n       :foreign true})\n    {:ns      current-ns\n     :name    (symbol (str current-ns) (str (munge-node-lib full-ns) \".\" (name sym)))\n     :op      :js-var\n     :foreign true}))\n\n(defmethod resolve* :global\n  [env sym full-ns current-ns]\n  (let [pre (extern-pre sym current-ns)]\n    {:ns current-ns\n     :name (symbol (str current-ns) (str (munge-global-export full-ns) \".\" (name sym)))\n     :op :js-var\n     :tag (with-meta 'js {:prefix pre})\n     :foreign true}))\n\n(def ^:private private-var-access-exceptions\n  \"Specially-treated symbols for which we don't trigger :private-var-access warnings.\"\n  '#{cljs.core/checked-aget\n     cljs.core/checked-aset\n     cljs.core/checked-aget'\n     cljs.core/checked-aset'})\n\n(defmethod resolve* :default\n  [env sym full-ns current-ns]\n  (let [sym-ast (gets @env/*compiler* ::namespaces full-ns :defs (symbol (name sym)))\n        sym-name (symbol (str full-ns) (str (name sym)))]\n    (when (and (not= current-ns full-ns)\n               (:private sym-ast)\n               (not *private-var-access-nowarn*)\n               (not (contains? private-var-access-exceptions sym-name)))\n      (warning :private-var-access env\n        {:sym sym-name}))\n    (merge sym-ast\n      {:name sym-name\n       :op :var\n       :ns   full-ns})))\n\n(defn required? [ns env]\n  (or (contains? (set (vals (gets env :ns :requires))) ns)\n      (contains? (set (vals (gets env :ns :uses))) ns)))\n\n(defn invokeable-ns?\n  \"Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function.\"\n  [ns env]\n  (let [ns (resolve-ns-alias env ns)]\n    (and (required? ns env)\n         (or (js-module-exists? ns)\n             (node-module-dep? ns)\n             (dep-has-global-exports? ns)))))\n\n(defn resolve-invokeable-ns [ns current-ns env]\n  (let [ns (resolve-ns-alias env ns)\n        module-type (ns->module-type ns)]\n    (case module-type\n      :js     {:name (symbol\n                       (or (gets @env/*compiler* :js-module-index ns :name)\n                           (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns 'js}\n      :node   {:name (symbol (str current-ns)\n                       (munge-node-lib (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns}\n      :global {:name (symbol (str current-ns)\n                       (munge-global-export (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns})))\n\n;; core.async calls `macroexpand-1` manually with an ill-formed\n;; :locals map. Normally :locals maps symbols maps, but\n;; core.async adds entries mapping symbols to symbols. We work\n;; around that specific case here. This is called defensively\n;; every time we lookup the :locals map.\n(defn handle-symbol-local [sym lb]\n  (if (symbol? lb)\n    {:name sym}\n    lb))\n\n(defn resolve-var\n  \"Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.\"\n  ([env sym]\n   (resolve-var env sym nil))\n  ([env sym confirm]\n   (resolve-var env sym confirm true))\n  ([env sym confirm default?]\n   (let [locals (:locals env)]\n     (if #?(:clj  (= \"js\" (namespace sym))\n            :cljs (identical? \"js\" (namespace sym)))\n       (let [symn (-> sym name symbol)\n             shadowed-by-local (handle-symbol-local symn (get locals symn))]\n         (cond\n           (some? shadowed-by-local)\n           (do (warning :js-shadowed-by-local env {:name sym})\n               (assoc shadowed-by-local :op :local))\n\n           :else\n           (let [pre (->> (string/split (name sym) #\"\\.\") (map symbol) vec)]\n             (when (and (not (has-extern? pre))\n                        ;; ignore exists? usage\n                        (not (-> sym meta ::no-resolve)))\n               (swap! env/*compiler* update-in\n                 (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))\n             (merge\n               {:name sym\n                :op :js-var\n                :ns   'js\n                :tag  (with-meta (or (js-tag pre) (:tag (meta sym)) 'js) {:prefix pre})}\n               (when-let [ret-tag (js-tag pre :ret-tag)]\n                 {:js-fn-var true\n                  :ret-tag ret-tag})))))\n       (let [s  (str sym)\n             lb (handle-symbol-local sym (get locals sym))\n             current-ns (-> env :ns :name)]\n         (cond\n           (some? lb) (assoc lb :op :local)\n\n           (some? (namespace sym))\n           (let [ns      (namespace sym)\n                 ns      (if #?(:clj  (= \"clojure.core\" ns)\n                                :cljs (identical? \"clojure.core\" ns))\n                           \"cljs.core\"\n                           ns)\n                 full-ns (resolve-ns-alias env ns\n                           (or (and (js-module-exists? ns)\n                                    (gets @env/*compiler* :js-module-index ns :name))\n                             (symbol ns)))]\n             (when (some? confirm)\n               (when (not= current-ns full-ns)\n                 (confirm-ns env full-ns))\n               (confirm env full-ns (symbol (name sym))))\n             (resolve* env sym full-ns current-ns))\n\n           (dotted-symbol? sym)\n           (let [idx    (.indexOf s \".\")\n                 prefix (symbol (subs s 0 idx))\n                 suffix (subs s (inc idx))]\n             ;; check if prefix is some existing def\n             (if-let [resolved (resolve-var env prefix nil false)]\n               (update resolved :name #(symbol (str % \".\" suffix)))\n               (let [idx (.lastIndexOf s \".\")\n                     pre (subs s 0 idx)\n                     suf (subs s (inc idx))]\n                 {:op   :var\n                  :name (symbol pre suf)\n                  :ns   (symbol pre)})))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :uses sym))\n           (let [full-ns (gets @env/*compiler* ::namespaces current-ns :uses sym)]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :renames sym))\n           (let [qualified-symbol (gets @env/*compiler* ::namespaces current-ns :renames sym)\n                 full-ns (symbol (namespace qualified-symbol))\n                 sym     (symbol (name qualified-symbol))]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :imports sym))\n           (recur env (gets @env/*compiler* ::namespaces current-ns :imports sym) confirm default?)\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :defs sym))\n           (do\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))\n\n           (core-name? env sym)\n           (do\n             (when (some? confirm)\n               (confirm env 'cljs.core sym))\n             (merge (gets @env/*compiler* ::namespaces 'cljs.core :defs sym)\n               {:name (symbol \"cljs.core\" (str sym))\n                :op :var\n                :ns 'cljs.core}))\n\n           (invokeable-ns? s env)\n           (resolve-invokeable-ns s current-ns env)\n\n           :else\n           (when default?\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))))))))\n\n(defn resolve-existing-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists.\"\n  [env sym]\n  (if-not (-> sym meta ::no-resolve)\n    (resolve-var env sym confirm-var-exists)\n    (resolve-var env sym)))\n\n(defn confirm-bindings\n  \"Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars.\"\n  [env names]\n  (doseq [name names]\n    (let [env (assoc env :ns (get-namespace *cljs-ns*))\n          ev (resolve-existing-var env name)]\n      (when (and ev (not (-> ev :dynamic)))\n        (warning :dynamic env {:ev ev :name (:name ev)})))))\n\n(defn resolve-macro-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve a macro.\"\n  [env sym]\n  (let [ns (-> env :ns :name)\n        namespaces (get @env/*compiler* ::namespaces)]\n    (cond\n      (some? (namespace sym))\n      (let [ns (namespace sym)\n            ns (if (= \"clojure.core\" ns) \"cljs.core\" ns)\n            full-ns (resolve-macro-ns-alias env ns)\n            #?@(:cljs [full-ns (if-not (string/ends-with? (str full-ns) \"$macros\")\n                                 (symbol (str full-ns \"$macros\"))\n                                 full-ns)])]\n        #?(:clj (get-in namespaces [full-ns :macros (symbol (name sym))])\n           :cljs (get-in namespaces [full-ns :defs (symbol (name sym))])))\n\n      (some? (get-in namespaces [ns :use-macros sym]))\n      (let [full-ns (get-in namespaces [ns :use-macros sym])]\n        (get-in namespaces [full-ns :macros sym]))\n\n      (some? (get-in namespaces [ns :rename-macros sym]))\n      (let [qualified-symbol (get-in namespaces [ns :rename-macros sym])\n            full-ns (symbol (namespace qualified-symbol))\n            sym     (symbol (name qualified-symbol))]\n        (get-in namespaces [full-ns :macros sym]))\n\n      :else\n      (let [ns (cond\n                 (some? (get-in namespaces [ns :macros sym])) ns\n                 (core-name? env sym) #?(:clj  'cljs.core\n                                         :cljs CLJS_CORE_MACROS_SYM))]\n        (when (some? ns)\n          #?(:clj  (get-in namespaces [ns :macros sym])\n             :cljs (get-in namespaces [ns :defs sym])))))))\n\n(declare analyze analyze-symbol analyze-seq)\n\n;; Note: This is the set of parse multimethod dispatch values,\n;; along with '&, and differs from cljs.core/special-symbol?\n(def specials '#{if def fn* do let* loop* letfn* throw try recur new set!\n                 ns deftype* defrecord* . js* & quote case* var ns*})\n\n(def ^:dynamic *recur-frames* nil)\n(def ^:dynamic *loop-lets* ())\n(def ^:dynamic *allow-redef* false)\n(def ^:dynamic *allow-ns* true)\n\n#?(:clj\n   (defmacro disallowing-recur [& body]\n     `(binding [*recur-frames* (cons nil *recur-frames*)] ~@body)))\n\n#?(:clj\n   (defmacro allowing-redef [& body]\n     `(binding [*allow-redef* true] ~@body)))\n\n#?(:clj\n   (defmacro disallowing-ns* [& body]\n     `(binding [*allow-ns* false] ~@body)))\n\n;; TODO: move this logic out - David\n(defn analyze-keyword\n  [env sym]\n  (register-constant! env sym)\n  {:op :const :val sym :env env :form sym :tag 'cljs.core/Keyword})\n\n(defn get-tag [e]\n  (if-some [tag (-> e :form meta :tag)]\n    tag\n    (if-some [tag (-> e :tag)]\n      tag\n      (-> e :info :tag))))\n\n(defn find-matching-method [f params]\n  ;; if local fn, need to look in :info\n  (let [methods (or (:methods f) (-> f :info :methods))\n        c       (count params)]\n    (some\n      (fn [m]\n        (and (or (== (:fixed-arity m) c)\n                 (:variadic? m))\n             m))\n      methods)))\n\n(defn type?\n  #?(:cljs {:tag boolean})\n  [env t]\n  ;; don't use resolve-existing-var to avoid warnings\n  (when (and (some? t) (symbol? t))\n    (let [var (resolve-var env t)]\n      (if-some [type (:type var)]\n        type\n          (if-some [type (-> var :info :type)]\n            type\n              (if-some [proto (:protocol-symbol var)]\n                proto\n                (get '#{cljs.core/PersistentHashMap cljs.core/List} t)))))))\n\n(declare infer-tag)\n\n(def NOT_NATIVE '#{clj not-native})\n\n(def BOOLEAN_OR_SEQ '#{boolean seq})\n\n(defn unwrap-quote [{:keys [op] :as expr}]\n  (if #?(:clj (= op :quote)\n         :cljs (keyword-identical? op :quote))\n    (:expr expr)\n    expr))\n\n(defn infer-if [env e]\n  (let [{:keys [op form]} (unwrap-quote (:test e))\n        then-tag (infer-tag env (:then e))]\n    (if (and #?(:clj (= op :const)\n                :cljs (keyword-identical? op :const))\n             (not (nil? form))\n             (not (false? form)))\n      then-tag\n      (let [else-tag (infer-tag env (:else e))]\n        (cond\n          (or #?(:clj (= then-tag else-tag)\n                 :cljs (symbol-identical? then-tag else-tag))\n              #?(:clj (= else-tag IGNORE_SYM)\n                 :cljs (symbol-identical? else-tag IGNORE_SYM))) then-tag\n          #?(:clj (= then-tag IGNORE_SYM)\n             :cljs (symbol-identical? then-tag IGNORE_SYM)) else-tag\n          ;; TODO: temporary until we move not-native -> clj - David\n          (and (or (some? (get NOT_NATIVE then-tag)) (type? env then-tag))\n               (or (some? (get NOT_NATIVE else-tag)) (type? env else-tag)))\n          'clj\n          :else\n          (if (and (some? (get BOOLEAN_OR_SEQ then-tag))\n                   (some? (get BOOLEAN_OR_SEQ else-tag)))\n            'seq\n            (let [then-tag (if #?(:clj (set? then-tag)\n                                  :cljs (cljs-set? then-tag))\n                             then-tag #{then-tag})\n                  else-tag (if #?(:clj (set? else-tag)\n                                  :cljs (cljs-set? else-tag))\n                             else-tag #{else-tag})]\n              (into then-tag else-tag))))))))\n\n(defn infer-invoke [env {f :fn :keys [args] :as e}]\n  (let [me (assoc (find-matching-method f args) :op :fn-method)]\n    (if-some [ret-tag (infer-tag env me)]\n      ret-tag\n      (let [{:keys [info]} f]\n        (if-some [ret-tag (if (or (true? (:fn-var info))\n                                  (true? (:js-fn-var info)))\n                            (:ret-tag info)\n                            (when (= 'js (:ns info)) 'js))]\n          ret-tag\n          ANY_SYM)))))\n\n(defn infer-tag\n  \"Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node\"\n  [env e]\n    (if-some [tag (get-tag e)]\n      tag\n      (case (:op e)\n        :recur    IGNORE_SYM\n        :throw    IGNORE_SYM\n        :let      (infer-tag env (:body e))\n        :loop     (infer-tag env (:body e))\n        :do       (infer-tag env (:ret e))\n        :fn-method (infer-tag env (:body e))\n        :def      (infer-tag env (:init e))\n        :invoke   (infer-invoke env e)\n        :if       (infer-if env e)\n        :const    (case (:form e)\n                    true BOOLEAN_SYM\n                    false BOOLEAN_SYM\n                    ANY_SYM)\n        :quote    (infer-tag env (:expr e))\n        (:var :local :js-var :binding)\n                  (if-some [init (:init e)]\n                    (infer-tag env init)\n                    (infer-tag env (:info e)))\n        (:host-field :host-call)      ANY_SYM\n        :js       ANY_SYM\n        nil)))\n\n(defmulti parse (fn [op & rest] op))\n\n(defn var-meta\n  ([var]\n    (var-meta var nil))\n  ([var expr-env]\n   (let [sym (:name var)\n         ks [:ns :doc :file :line :column]\n         m (merge\n             (let [user-meta (:meta var)\n                   uks (keys user-meta)]\n               (zipmap uks\n                 (map #(list 'quote (get user-meta %)) uks)))\n             (assoc (zipmap ks (map #(list 'quote (get var %)) ks))\n               :name `(quote ~(symbol (name (:name var))))\n               :test `(when ~sym (.-cljs$lang$test ~sym))\n               :arglists (let [arglists (:arglists var)\n                               arglists' (if (= 'quote (first arglists))\n                                           (second arglists)\n                                           arglists)]\n                           (list 'quote\n                             (doall (map with-meta arglists'\n                                      (:arglists-meta var)))))))]\n     (if expr-env\n       (analyze expr-env m)\n       m))))\n\n(defn var-ast\n  [env sym]\n  ;; we need to dissoc locals for the `(let [x 1] (def x x))` case, because we\n  ;; want the var's AST and `resolve-var` will check locals first. - António Monteiro\n  (binding [*private-var-access-nowarn* true]\n    (let [env      (dissoc env :locals)\n          var      (resolve-var env sym (confirm-var-exists-throw))\n          expr-env (assoc env :context :expr)]\n      (when-some [var-ns (:ns var)]\n        {:var  (analyze expr-env sym)\n         :sym  (analyze expr-env `(quote ~(symbol (name var-ns) (name (:name var)))))\n         :meta (var-meta var expr-env)}))))\n\n(defmethod parse 'var\n  [op env [_ sym :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to var\")))\n  (when-not (symbol? sym)\n    (throw (error env \"Argument to var must be symbol\")))\n  (merge\n    {:env env\n     :op :the-var\n     :children [:var :sym :meta]\n     :form form}\n    (var-ast env sym)))\n\n(def ^:private predicate->tag\n  '{\n    ;; Base values\n    cljs.core/nil?            clj-nil\n    cljs.core/undefined?      clj-nil\n    cljs.core/false?          boolean\n    cljs.core/true?           boolean\n    cljs.core/zero?           number\n    cljs.core/infinite?       number\n\n    ;; Base types\n    cljs.core/boolean?        boolean\n    cljs.core/string?         string\n    cljs.core/char?           string\n    cljs.core/number?         number\n    cljs.core/integer?        number\n    cljs.core/float?          number\n    cljs.core/double?         number\n    cljs.core/array?          array\n    cljs.core/seq?            seq\n\n    ;; JavaScript types\n    cljs.core/regexp?         js/RegExp\n\n    ;; Types\n    cljs.core/keyword?        cljs.core/Keyword\n    cljs.core/var?            cljs.core/Var\n    cljs.core/symbol?         cljs.core/Symbol\n    cljs.core/volatile?       cljs.core/Volatile\n    cljs.core/delay?          cljs.core/Delay\n    cljs.core/reduced?        cljs.core/Reduced\n\n    ;; Subtypes\n    cljs.core/simple-keyword?    cljs.core/Keyword\n    cljs.core/qualified-keyword? cljs.core/Keyword\n    cljs.core/simple-symbol?     cljs.core/Symbol\n    cljs.core/qualified-symbol?  cljs.core/Symbol\n\n    ;;; Note: For non-marker protocol entries below, we\n    ;;; omit predicates that are based on satisfies? because\n    ;;; we cannot safely apply the fast-path optimization\n    ;;; which is enabled when the protocol type is inferred.\n    ;;; If adding a non-marker entry here, also add a test to\n    ;;; cljs.extend-to-native-test/test-extend-to-protocols.\n\n    ;; Protocols\n    cljs.core/map-entry?      cljs.core/IMapEntry\n    cljs.core/uuid?           cljs.core/IUUID\n    cljs.core/tagged-literal? cljs.core/ITaggedLiteral\n    cljs.core/inst?           cljs.core/Inst\n    cljs.core/sequential?     cljs.core/ISequential\n    cljs.core/list?           cljs.core/IList\n    cljs.core/record?         cljs.core/IRecord\n    cljs.core/chunked-seq?    cljs.core/IChunkedSeq\n\n    ;; Composites\n    cljs.core/seqable?        #{cljs.core/ISeqable array string}\n    cljs.core/ident?          #{cljs.core/Keyword cljs.core/Symbol}\n\n    ;; Composite subtypes\n    cljs.core/simple-ident?    #{cljs.core/Keyword cljs.core/Symbol}\n    cljs.core/qualified-ident? #{cljs.core/Keyword cljs.core/Symbol}\n    })\n\n(defn- simple-predicate-induced-tag\n  \"Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x).\"\n  [env test]\n  (when (and (list? test)\n             (== 2 (count test))\n             (every? symbol? test))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when-let [tag (predicate->tag (:name analyzed-fn))]\n          (let [sym (last test)]\n            (when (and (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(declare specials)\n\n(defn- type-check-induced-tag\n  \"Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x).\"\n  [env test]\n  (when (and (list? test)\n             (== 3 (count test))\n             (every? symbol? test)\n             (not (contains? specials (first test))))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when ('#{cljs.core/instance? cljs.core/implements?} (:name analyzed-fn))\n          (let [analyzed-type (no-warn (analyze (assoc env :context :expr) (second test)))\n                tag (:name analyzed-type)\n                sym (last test)]\n            (when (and (= :var (:op analyzed-type))\n                       (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(defn- truth-induced-tag\n  \"Refine a tag to exclude clj-nil if the test is a local.\"\n  [env test]\n  (when (and (symbol? test)\n             (nil? (namespace test))\n             (get-in env [:locals test]))\n    (let [analyzed-symbol (no-warn (analyze (assoc env :context :expr) test))]\n      (when-let [tag (:tag analyzed-symbol)]\n        (when (and (set? tag)\n                   (contains? tag 'clj-nil))\n          [test (canonicalize-type (disj tag 'clj-nil))])))))\n\n(defn- set-test-induced-tags\n  \"Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type.\"\n  [env test]\n  (let [[local tag] (or (simple-predicate-induced-tag env test)\n                        (type-check-induced-tag env test)\n                        (truth-induced-tag env test))]\n    (cond-> env\n      local (assoc-in [:locals local :tag] tag))))\n\n(defmethod parse 'if\n  [op env [_ test then else :as form] name _]\n  (when (< (count form) 3)\n    (throw (compile-syntax-error env \"Too few arguments to if\" 'if)))\n  (when (> (count form) 4)\n    (throw (compile-syntax-error env \"Too many arguments to if\" 'if)))\n  (let [test-expr (disallowing-recur (analyze (assoc env :context :expr) test))\n        then-expr (allowing-redef (analyze (set-test-induced-tags env test) then))\n        else-expr (allowing-redef (analyze env else))]\n    {:env env :op :if :form form\n     :test test-expr :then then-expr :else else-expr\n     :unchecked *unchecked-if*\n     :children [:test :then :else]}))\n\n(defmethod parse 'case*\n  [op env [_ sym tests thens default :as form] name _]\n  (assert (symbol? sym) \"case* must switch on symbol\")\n  (assert (every? vector? tests) \"case* tests must be grouped in vectors\")\n  (let [expr-env (assoc env :context :expr)\n        v        (disallowing-recur (analyze expr-env sym))\n        tests    (mapv #(mapv (fn [t] (analyze expr-env t)) %) tests)\n        thens    (mapv #(analyze env %) thens)\n        nodes    (mapv (fn [tests then]\n                         {:op :case-node\n                          ;synthetic node, no :form\n                          :env env\n                          :tests (mapv (fn [test]\n                                         {:op :case-test\n                                          :form (:form test)\n                                          :env expr-env\n                                          :test test\n                                          :children [:test]})\n                                       tests)\n                          :then {:op :case-then\n                                 :form (:form then)\n                                 :env env\n                                 :then then\n                                 :children [:then]}\n                          :children [:tests :then]})\n                       tests\n                       thens)\n        default  (analyze env default)]\n    (assert (every? (fn [t]\n                      (or\n                        (-> t :info :const)\n                        (and (= :const (:op t))\n                             ((some-fn number? string? char?) (:form t)))))\n              (apply concat tests))\n      \"case* tests must be numbers, strings, or constants\")\n    {:env env :op :case :form form\n     :test v :nodes nodes :default default\n     :children [:test :nodes :default]}))\n\n(defmethod parse 'throw\n  [op env [_ throw-form :as form] name _]\n  (cond\n    (= 1 (count form))\n    (throw\n      (error env \"Too few arguments to throw, throw expects a single Error instance\"))\n    (< 2 (count form))\n    (throw\n      (error env \"Too many arguments to throw, throw expects a single Error instance\")))\n  (let [throw-expr (disallowing-recur (analyze (assoc env :context :expr) throw-form))]\n    {:env env :op :throw :form form\n     :exception throw-expr\n     :children [:exception]}))\n\n(defmethod parse 'try\n  [op env [_ & body :as form] name _]\n  (let [catchenv (update-in env [:context] #(if (= :expr %) :return %))\n        catch? (every-pred seq? #(= (first %) 'catch))\n        default? (every-pred catch? #(= (second %) :default))\n        finally? (every-pred seq? #(= (first %) 'finally))\n\n        {:keys [body cblocks dblock fblock]}\n        (loop [parser {:state :start :forms body\n                       :body [] :cblocks [] :dblock nil :fblock nil}]\n          (if (seq? (:forms parser))\n            (let [[form & forms*] (:forms parser)\n                  parser* (assoc parser :forms forms*)]\n              (case (:state parser)\n                :start (cond\n                         (catch? form) (recur (assoc parser :state :catches))\n                         (finally? form) (recur (assoc parser :state :finally))\n                         :else (recur (update-in parser* [:body] conj form)))\n                :catches (cond\n                           (default? form) (recur (assoc parser* :dblock form :state :finally))\n                           (catch? form) (recur (update-in parser* [:cblocks] conj form))\n                           (finally? form) (recur (assoc parser :state :finally))\n                           :else (throw (error env \"Invalid try form\")))\n                :finally (recur (assoc parser* :fblock form :state :done))\n                :done (throw (error env \"Unexpected form after finally\"))))\n            parser))\n\n        finally (when (seq fblock)\n                  (-> (disallowing-recur (analyze (assoc env :context :statement) `(do ~@(rest fblock))))\n                      (assoc :body? true)))\n        e (when (or (seq cblocks) dblock) (gensym \"e\"))\n        default (if-let [[_ _ name & cb] dblock]\n                  `(cljs.core/let [~name ~e] ~@cb)\n                  `(throw ~e))\n        cblock (if (seq cblocks)\n                 `(cljs.core/cond\n                   ~@(mapcat\n                      (fn [[_ type name & cb]]\n                        (when name (assert (not (namespace name)) \"Can't qualify symbol in catch\"))\n                        `[(cljs.core/instance? ~type ~e)\n                          (cljs.core/let [~name ~e] ~@cb)])\n                      cblocks)\n                   :else ~default)\n                 default)\n        locals (:locals catchenv)\n        locals (if e\n                 (assoc locals e\n                        {:name e\n                         :line (get-line e env)\n                         :column (get-col e env)})\n                 locals)\n        catch (when cblock\n                (disallowing-recur (analyze (assoc catchenv :locals locals) cblock)))\n        try (disallowing-recur (analyze (if (or e finally) catchenv env) `(do ~@body)))]\n\n    {:env env :op :try :form form\n     :body (assoc try :body? true)\n     :finally finally\n     :name e\n     :catch catch\n     :children (vec\n                 (concat [:body]\n                         (when catch\n                           [:catch])\n                         (when finally\n                           [:finally])))}))\n\n(defn valid-proto [x]\n  (when (symbol? x) x))\n\n(defn elide-env [env ast opts]\n  (dissoc ast :env))\n\n(defn replace-env-pass [new-env]\n  (fn [env ast opts]\n    (assoc ast :env new-env)))\n\n(defn ast-children [ast]\n  (mapcat (fn [c]\n            (let [g (get ast c)]\n              (cond\n                (vector? g) g\n                g [g])))\n          (:children ast)))\n\n(defn constant-value?\n  [{:keys [op] :as ast}]\n  (or (#{:quote :const} op)\n      (and (#{:map :set :vector} op)\n           (every? constant-value? (ast-children ast)))))\n\n(defn const-expr->constant-value [{:keys [op] :as e}]\n  (case op\n    :quote  (const-expr->constant-value (:expr e))\n    :const  (:val e)\n    :map    (zipmap (map const-expr->constant-value (:keys e))\n                    (map const-expr->constant-value (:vals e)))\n    :set    (into #{} (map const-expr->constant-value (:items e)))\n    :vector (into [] (map const-expr->constant-value (:items e)))))\n\n(defn- earmuffed? [sym]\n  (let [s (name sym)]\n    (and (> (count s) 2)\n         (string/starts-with? s \"*\")\n         (string/ends-with? s \"*\"))))\n\n(defn- core-ns? [ns-sym]\n  (let [s (name ns-sym)]\n    (and (not= 'cljs.user ns-sym)\n         (or (string/starts-with? s \"cljs.\")\n             (string/starts-with? s \"clojure.\")))))\n\n(defmethod parse 'def\n  [op env form _ _]\n  (when (> (count form) 4)\n    (throw (error env \"Too many arguments to def\")))\n  (let [pfn (fn\n              ([_ sym] {:sym sym})\n              ([_ sym init] {:sym sym :init init})\n              ([_ sym doc init] {:sym sym :doc doc :init init}))\n        args (apply pfn form)\n        sym (:sym args)\n        const? (-> sym meta :const)\n        sym-meta (meta sym)\n        tag (-> sym meta :tag)\n        protocol (-> sym meta :protocol valid-proto)\n        dynamic (-> sym meta :dynamic)\n        ns-name (-> env :ns :name)\n        locals (:locals env)\n        clash-ns (symbol (str ns-name \".\" sym))\n        sym-ns   (namespace sym)\n        sym      (cond\n                   (and sym-ns (not #?(:clj  (= (symbol sym-ns) ns-name)\n                                       :cljs (symbol-identical? (symbol sym-ns) ns-name))))\n                   (throw (error env (str \"Can't def ns-qualified name in namespace \" sym-ns)))\n\n                   (some? sym-ns)\n                   (symbol (name sym))\n\n                   :else sym)]\n    (when (some? (get-in @env/*compiler* [::namespaces clash-ns]))\n      (warning :ns-var-clash env\n        {:ns (symbol (str ns-name \".\" sym))\n         :var (symbol (str ns-name) (str sym))}))\n    (when (some? (:const (resolve-var (dissoc env :locals) sym)))\n      (throw (error env \"Can't redefine a constant\")))\n    (when-some [doc (:doc args)]\n      (when-not (string? doc)\n        (throw (error env \"Too many arguments to def\"))))\n    (when (and (not dynamic)\n               (earmuffed? sym)\n               (not (core-ns? ns-name)))\n      (warning :non-dynamic-earmuffed-var env\n        {:var (str sym)}))\n    (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n      (when (and (not *allow-redef*)\n                 (not (:declared v))\n                 (not (:declared sym-meta))\n                 *file-defs*\n                 (get @*file-defs* sym))\n        (warning :redef-in-file env {:sym sym :line (:line v)}))\n      (when (and (:declared v)\n                 (:arglists v)\n                 (not= (:arglists v) (:arglists sym-meta)))\n        (warning :declared-arglists-mismatch env {:ns-name  ns-name :sym sym\n                                                  :declared (second (:arglists v))\n                                                  :defined  (second (:arglists sym-meta))})))\n    (let [env (if (or (and (not= ns-name 'cljs.core)\n                           (core-name? env sym))\n                      (some? (get-in @env/*compiler* [::namespaces ns-name :uses sym])))\n                (let [ev (resolve-existing-var (dissoc env :locals)\n                           ;; ::no-resolve true is to suppress \"can't take value\n                           ;; of macro warning\" when sym resolves to a macro\n                           (with-meta sym {::no-resolve true}))\n                      conj-to-set (fnil conj #{})]\n                  (when (public-name? (:ns ev) sym)\n                    (warning :redef env {:sym sym :ns (:ns ev) :ns-name ns-name}))\n                  (swap! env/*compiler* update-in [::namespaces ns-name :excludes]\n                     conj-to-set sym)\n                  (update-in env [:ns :excludes] conj-to-set sym))\n                env)\n          var-name (:name (resolve-var (dissoc env :locals) sym))\n          init-expr (when (contains? args :init)\n                      (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n                        (merge\n                          {:name var-name}\n                          sym-meta\n                          (when (true? dynamic) {:dynamic true})\n                          (source-info var-name env)))\n                      (disallowing-recur\n                        (disallowing-ns*\n                          (analyze (assoc env :context :expr) (:init args) sym))))\n          fn-var? (and (some? init-expr) (= (:op init-expr) :fn))\n          tag (cond\n                fn-var? (or (:ret-tag init-expr) tag (:inferred-ret-tag init-expr))\n                tag tag\n                dynamic ANY_SYM\n                :else (:tag init-expr))\n          export-as (when-let [export-val (-> sym meta :export)]\n                      (if (= true export-val) var-name export-val))\n          doc (or (:doc args) (-> sym meta :doc))]\n      (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n        (when (and (not (-> sym meta :declared))\n                   (and (true? (:fn-var v)) (not fn-var?)))\n          (warning :fn-var env {:ns-name ns-name :sym sym})))\n\n      ;; declare must not replace any analyzer data of an already def'd sym\n      (when (or (nil? (get-in @env/*compiler* [::namespaces ns-name :defs sym]))\n                (not (:declared sym-meta)))\n        (when *file-defs*\n          (swap! *file-defs* conj sym))\n\n        (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n          (merge\n            {:name var-name}\n            ;; remove actual test metadata, as it includes non-valid EDN and\n            ;; cannot be present in analysis cached to disk - David\n            (cond-> sym-meta\n              (:test sym-meta) (assoc :test true))\n            {:meta (-> sym-meta\n                       (dissoc :test)\n                       (update-in [:file]\n                         (fn [f]\n                           (if (= (-> env :ns :name) 'cljs.core)\n                             \"cljs/core.cljs\"\n                             f))))}\n            (when doc {:doc doc})\n            (when const?\n              (let [const-expr\n                    (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n                      (analyze env (:init args)))]\n                (when (constant-value? const-expr)\n                  {:const-expr const-expr})))\n            (when (true? dynamic) {:dynamic true})\n            (source-info var-name env)\n            ;; the protocol a protocol fn belongs to\n            (when protocol\n              {:protocol protocol})\n            ;; symbol for reified protocol\n            (when-let [protocol-symbol (-> sym meta :protocol-symbol)]\n              {:protocol-symbol protocol-symbol\n               :info (-> protocol-symbol meta :protocol-info)\n               :impls #{}})\n            (when fn-var?\n              (let [params (map #(vec (map :name (:params %))) (:methods init-expr))]\n                (merge\n                  {:fn-var (not (:macro sym-meta))\n                   ;; protocol implementation context\n                   :protocol-impl (:protocol-impl init-expr)\n                   ;; inline protocol implementation context\n                   :protocol-inline (:protocol-inline init-expr)}\n                  (if-some [top-fn-meta (:top-fn sym-meta)]\n                    top-fn-meta\n                    {:variadic? (:variadic? init-expr)\n                     :max-fixed-arity (:max-fixed-arity init-expr)\n                     :method-params params\n                     :arglists (:arglists sym-meta)\n                     :arglists-meta (doall (map meta (:arglists sym-meta)))}))))\n            (when (and (:declared sym-meta)\n                       (:arglists sym-meta))\n              {:declared true\n               :fn-var true\n               :method-params (second (:arglists sym-meta))})\n            (if (and fn-var? (some? tag))\n              {:ret-tag tag}\n              (when tag {:tag tag})))))\n      (merge\n        {:env env\n         :op :def\n         :form form\n         :ns ns-name\n         :name var-name\n         :var (assoc\n                (analyze\n                  (-> env (dissoc :locals)\n                    (assoc :context :expr)\n                    (assoc :def-var true))\n                  sym)\n                :op :var)\n         :doc doc\n         :jsdoc (:jsdoc sym-meta)}\n        (when-let [goog-type (:goog-define sym-meta)]\n          {:goog-define goog-type})\n        (when (true? (:def-emits-var env))\n          {:var-ast (var-ast env sym)})\n        (when-some [test (:test sym-meta)]\n          {:test (analyze (assoc env :context :expr) test)})\n        (when (some? tag)\n          (if fn-var?\n            {:ret-tag tag}\n            {:tag tag}))\n        (when (true? dynamic) {:dynamic true})\n        (when (some? export-as) {:export export-as})\n        (if (some? init-expr)\n          {:init init-expr\n           :children [:var :init]}\n          {:children [:var]})))))\n\n(defn analyze-fn-method-param [env]\n  (fn [[locals params] [arg-id name]]\n    (when (namespace name)\n      (throw (error env (str \"Can't use qualified name as parameter: \" name))))\n    (let [line   (get-line name env)\n          column (get-col name env)\n          nmeta  (meta name)\n          tag    (:tag nmeta)\n          shadow (when (some? locals)\n                   (handle-symbol-local name (locals name)))\n          env    (merge (select-keys env [:context])\n                   {:line line :column column})\n          param  {:op :binding\n                  :name name\n                  :line line\n                  :column column\n                  :tag tag\n                  :shadow shadow\n                  :local :arg\n                  :arg-id arg-id\n                  ;; Give the fn params the same shape\n                  ;; as a :var, so it gets routed\n                  ;; correctly in the compiler\n                  :env env\n                  :info {:name name :shadow shadow}\n                  :binding-form? true}]\n     [(assoc locals name param) (conj params param)])))\n\n(defn analyze-fn-method-body [env form recur-frames]\n  (binding [*recur-frames* recur-frames]\n    (analyze env form)))\n\n(defn- analyze-fn-method [env locals form type analyze-body?]\n  (let [param-names     (first form)\n        variadic        (boolean (some '#{&} param-names))\n        param-names     (vec (remove '#{&} param-names))\n        body            (next form)\n        step            (analyze-fn-method-param env)\n        step-init       [locals []]\n        [locals params] (reduce step step-init (map-indexed vector param-names))\n        params'         (if (true? variadic)\n                          (butlast params)\n                          params)\n        fixed-arity     (count params')\n        recur-frame     {:protocol-impl (:protocol-impl env)\n                         :params        params\n                         :flag          (atom nil)\n                         :tags          (atom [])}\n        recur-frames    (cons recur-frame *recur-frames*)\n        body-env        (assoc env :context :return :locals locals)\n        body-form       `(do ~@body)\n        expr            (when analyze-body?\n                          (analyze-fn-method-body body-env body-form recur-frames))\n        recurs          @(:flag recur-frame)]\n    (merge\n      {:env env\n       :op :fn-method\n       :variadic? variadic\n       :params params\n       :fixed-arity fixed-arity\n       :type type\n       :form form\n       :recurs recurs}\n      (if (some? expr)\n        {:body (assoc expr :body? true)\n         :children [:params :body]}\n        {:children [:params]}))))\n\n(declare analyze-wrap-meta)\n\n(defn fn-name-var [env locals name]\n  (when (some? name)\n    (let [ns       (-> env :ns :name)\n          shadow   (handle-symbol-local name (get locals name))\n          shadow   (when (nil? shadow)\n                     (get-in env [:js-globals name]))\n          fn-scope (:fn-scope env)\n          name-var {:name name\n                    :op :binding\n                    :local :fn\n                    :info {:fn-self-name true\n                           :fn-scope fn-scope\n                           :ns ns\n                           :shadow shadow}}\n          tag      (-> name meta :tag)\n          ret-tag  (when (some? tag)\n                     {:ret-tag tag})]\n      (merge name-var ret-tag))))\n\n(defn analyze-fn-methods-pass2* [menv locals type meths]\n  (mapv #(analyze-fn-method menv locals % type true) meths))\n\n(defn analyze-fn-methods-pass2 [menv locals type meths]\n  (analyze-fn-methods-pass2* menv locals type meths))\n\n(defmethod parse 'fn*\n  [op env [_ & args :as form] name _]\n  (let [named-fn?    (symbol? (first args))\n        [name meths] (if named-fn?\n                         [(first args) (next args)]\n                         [name (seq args)])\n        ;; turn (fn [] ...) into (fn ([]...))\n        meths        (if (vector? (first meths))\n                       (list meths)\n                       meths)\n        locals       (:locals env)\n        name-var     (fn-name-var env locals name)\n        env          (if (some? name)\n                       (update-in env [:fn-scope] conj name-var)\n                       env)\n        locals       (if (and (some? locals)\n                              named-fn?)\n                       (assoc locals name name-var)\n                       locals)\n        form-meta    (meta form)\n        type         (::type form-meta)\n        proto-impl   (::protocol-impl form-meta)\n        proto-inline (::protocol-inline form-meta)\n        menv         (-> env\n                         (cond->\n                           (> (count meths) 1)\n                           (assoc :context :expr))\n                         ;; clear loop flag since method bodies won't be in a loop at first\n                         ;; only tracking this to keep track of locals we need to capture\n                         (dissoc :in-loop)\n                         (merge {:protocol-impl proto-impl\n                                 :protocol-inline proto-inline}))\n        methods      (map #(disallowing-ns* (analyze-fn-method menv locals % type (nil? name))) meths)\n        mfa          (transduce (map :fixed-arity) max 0 methods)\n        variadic     (boolean (some :variadic? methods))\n        locals       (if named-fn?\n                       (update-in locals [name] assoc\n                         ;; TODO: can we simplify? - David\n                         :fn-var true\n                         :variadic? variadic\n                         :max-fixed-arity mfa\n                         :method-params (map :params methods))\n                       locals)\n        methods      (if (some? name)\n                       ;; a second pass with knowledge of our function-ness/arity\n                       ;; lets us optimize self calls\n                       (disallowing-ns* (analyze-fn-methods-pass2 menv locals type meths))\n                       (vec methods))\n        form         (vary-meta form dissoc ::protocol-impl ::protocol-inline ::type)\n        js-doc       (when (true? variadic)\n                       \"@param {...*} var_args\")\n        children     (if (some? name-var)\n                       [:local :methods]\n                       [:methods])\n        inferred-ret-tag (let [inferred-tags (map (partial infer-tag env) (map :body methods))]\n                           (when (apply = inferred-tags)\n                             (first inferred-tags)))\n        ast   (merge {:op :fn\n                      :env env\n                      :form form\n                      :name name-var\n                      :methods methods\n                      :variadic? variadic\n                      :tag 'function\n                      :inferred-ret-tag inferred-ret-tag\n                      :recur-frames *recur-frames*\n                      :in-loop (:in-loop env)\n                      :loop-lets *loop-lets*\n                      :jsdoc [js-doc]\n                      :max-fixed-arity mfa\n                      :protocol-impl proto-impl\n                      :protocol-inline proto-inline\n                      :children children}\n                     (when (some? name-var)\n                       {:local name-var}))]\n    (let [variadic-methods (into []\n                             (comp (filter :variadic?) (take 1))\n                             methods)\n          variadic-params  (if (pos? (count variadic-methods))\n                             (count (:params (nth variadic-methods 0)))\n                             0)\n          param-counts     (into [] (map (comp count :params)) methods)]\n      (when (< 1 (count variadic-methods))\n        (warning :multiple-variadic-overloads env {:name name-var}))\n      (when (not (or (zero? variadic-params) (== variadic-params (+ 1 mfa))))\n        (warning :variadic-max-arity env {:name name-var}))\n      (when (not= (distinct param-counts) param-counts)\n        (warning :overload-arity env {:name name-var})))\n    (analyze-wrap-meta ast)))\n\n(defmethod parse 'letfn*\n  [op env [_ bindings & exprs :as form] name _]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error env \"bindings must be vector of even number of elements\")))\n  (let [n->fexpr (into {} (map (juxt first second) (partition 2 bindings)))\n        names    (keys n->fexpr)\n        context  (:context env)\n        ;; first pass to collect information for recursive references\n        [meth-env bes]\n        (reduce (fn [[{:keys [locals] :as env} bes] n]\n                  (let [ret-tag (-> n meta :tag)\n                        fexpr (no-warn (analyze env (n->fexpr n)))\n                        be (cond->\n                             {:name n\n                              :op :binding\n                              :fn-var true\n                              :line (get-line n env)\n                              :column (get-col n env)\n                              :local :letfn\n                              :shadow (handle-symbol-local n (locals n))\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr))}\n                             ret-tag (assoc :ret-tag ret-tag))]\n                    [(assoc-in env [:locals n] be)\n                     (conj bes be)]))\n                [env []] names)\n        meth-env (assoc meth-env :context :expr)\n        ;; the real pass\n        [meth-env bes]\n        (reduce (fn [[meth-env bes] {:keys [name shadow] :as be}]\n                  (let [env (assoc-in meth-env [:locals name] shadow)\n                        fexpr (analyze env (n->fexpr name))\n                        be' (assoc be\n                              :init fexpr\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr)))]\n                    [(assoc-in env [:locals name] be')\n                     (conj bes be')]))\n          [meth-env []] bes)\n        expr (-> (analyze (assoc meth-env :context (if (= :expr context) :return context)) `(do ~@exprs))\n                 (assoc :body? true))]\n    {:env env :op :letfn :bindings bes :body expr :form form\n     :children [:bindings :body]}))\n\n(defn analyze-do-statements* [env exprs]\n  (mapv #(analyze (assoc env :context :statement) %) (butlast exprs)))\n\n(defn analyze-do-statements [env exprs]\n  (disallowing-recur (analyze-do-statements* env exprs)))\n\n(defmethod parse 'do\n  [op env [_ & exprs :as form] _ _]\n  (let [statements (analyze-do-statements env exprs)]\n    (if (<= (count exprs) 1)\n      (let [ret      (analyze env (first exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements :ret ret\n         :children children})\n      (let [ret-env  (if (= :statement (:context env))\n                       (assoc env :context :statement)\n                       (assoc env :context :return))\n            ret      (analyze ret-env (last exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements\n         :ret ret\n         :children children}))))\n\n(defn analyze-let-binding-init [env init loop-lets]\n  (binding [*loop-lets* loop-lets]\n    (analyze env init)))\n\n(defn get-let-tag [name init-expr]\n  (if-some [tag (-> name meta :tag)]\n      tag\n        (if-some [tag (-> init-expr :tag)]\n          tag\n          (-> init-expr :info :tag))))\n\n(defn analyze-let-bindings* [encl-env bindings op]\n  (loop [bes []\n         env (assoc encl-env :context :expr)\n         bindings (seq (partition 2 bindings))]\n\n      (if-some [[name init] (first bindings)]\n        (let []\n          (when (or (some? (namespace name))\n                  #?(:clj  (.contains (str name) \".\")\n                     :cljs ^boolean (goog.string/contains (str name) \".\")))\n            (throw (error encl-env (str \"Invalid local name: \" name))))\n          (let [init-expr (analyze-let-binding-init env init (cons {:params bes} *loop-lets*))\n                line (get-line name env)\n                col (get-col name env)\n                shadow (handle-symbol-local name (get-in env [:locals name]))\n                be {:name name\n                    :line line\n                    :column col\n                    :init init-expr\n                    :tag (get-let-tag name init-expr)\n                    :local op\n                    :shadow shadow\n                    ;; Give let* bindings same shape as var so\n                    ;; they get routed correctly in the compiler\n                    :op :binding\n                    :env {:line line :column col}\n                    :info {:name name\n                           :shadow shadow}\n                    :binding-form? true}\n                be (if (= :fn (:op init-expr))\n                     ;; TODO: can we simplify - David\n                     (merge be\n                       {:fn-var true\n                        ;; copy over the :fn-method information we need for invoke type inference\n                        :methods (into [] (map #(select-keys % [:tag :fixed-arity :variadic?]) (:methods init-expr)))\n                        :variadic? (:variadic? init-expr)\n                        :max-fixed-arity (:max-fixed-arity init-expr)\n                        :method-params (map :params (:methods init-expr))})\n                     be)]\n            (recur (conj bes be)\n              (assoc-in env [:locals name] be)\n              (next bindings))))\n        [bes env])))\n\n(defn analyze-let-bindings [encl-env bindings op]\n  (disallowing-recur (analyze-let-bindings* encl-env bindings op)))\n\n(defn analyze-let-body* [env context exprs]\n  (analyze (assoc env :context (if (= :expr context) :return context)) `(do ~@exprs)))\n\n(defn analyze-let-body [env context exprs recur-frames loop-lets]\n  (binding [*recur-frames* recur-frames\n            *loop-lets* loop-lets]\n    (analyze-let-body* env context exprs)))\n\n(defn analyze-let\n  [encl-env [_ bindings & exprs :as form] is-loop widened-tags]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error encl-env \"bindings must be vector of even number of elements\")))\n  (let [context      (:context encl-env)\n        op           (if (true? is-loop) :loop :let)\n        bindings     (if widened-tags\n                       (vec (mapcat\n                              (fn [[name init] widened-tag]\n                                [(vary-meta name assoc :tag widened-tag) init])\n                              (partition 2 bindings)\n                              widened-tags))\n                       bindings)\n        [bes env]    (-> encl-env\n                         (cond->\n                           (true? is-loop) (assoc :in-loop true))\n                         (analyze-let-bindings bindings op))\n        recur-frame  (when (true? is-loop)\n                       {:params bes\n                        :flag (atom nil)\n                        :tags (atom (mapv :tag bes))})\n        recur-frames (if recur-frame\n                       (cons recur-frame *recur-frames*)\n                       *recur-frames*)\n        loop-lets    (cond\n                       (true? is-loop) *loop-lets*\n                       (some? *loop-lets*) (cons {:params bes} *loop-lets*))\n        ;; Accumulate warnings for deferred replay iff there's a possibility of re-analyzing\n        warn-acc     (when (and is-loop\n                                (not widened-tags))\n                       (atom []))\n        expr         (if warn-acc\n                       (with-warning-handlers [(accumulating-warning-handler warn-acc)]\n                         (analyze-let-body env context exprs recur-frames loop-lets))\n                       (analyze-let-body env context exprs recur-frames loop-lets))\n        children     [:bindings :body]\n        nil->any     (fnil identity 'any)]\n    (if (and is-loop\n             (not widened-tags)\n             (not= (mapv nil->any @(:tags recur-frame))\n                   (mapv (comp nil->any :tag) bes)))\n      (recur encl-env form is-loop @(:tags recur-frame))\n      (do\n        (when warn-acc\n          (replay-accumulated-warnings warn-acc))\n        {:op       op\n         :env      encl-env\n         :bindings bes\n         :body     (assoc expr :body? true)\n         :form     form\n         :children children}))))\n\n(defmethod parse 'let*\n  [op encl-env form _ _]\n  (analyze-let encl-env form false nil))\n\n(defmethod parse 'loop*\n  [op encl-env form _ _]\n  (analyze-let encl-env form true nil))\n\n(defmethod parse 'recur\n  [op env [_ & exprs :as form] _ _]\n  (let [context (:context env)\n        frame (first *recur-frames*)\n        ;; Add dummy implicit target object if recuring to proto impl method head\n        add-implicit-target-object? (and (:protocol-impl frame)\n                                         (= (count exprs) (dec (count (:params frame)))))\n        exprs (cond->> exprs add-implicit-target-object? (cons nil))\n        exprs (disallowing-recur (vec (map #(analyze (assoc env :context :expr) %) exprs)))]\n    (when-not frame\n      (throw (error env \"Can't recur here\")))\n    (when-not (= (count exprs) (count (:params frame)))\n      (throw (error env (str \"recur argument count mismatch, expected: \"\n                          (count (:params frame)) \" args, got: \" (count exprs)))))\n    (when (and (:protocol-impl frame)\n               (not add-implicit-target-object?))\n      (warning :protocol-impl-recur-with-target env {:form (:form (first exprs))}))\n    (reset! (:flag frame) true)\n    (swap! (:tags frame) (fn [tags]\n                           (mapv (fn [tag expr]\n                                   ;; Widen by adding the type of the recur expression, except when recurring with a\n                                   ;; loop local: Since its final widened type is unknown, conservatively assume 'any.\n                                   (if (= :loop (:local expr))\n                                     'any\n                                     (add-types tag (:tag expr))))\n                             tags exprs)))\n    (assoc {:env env :op :recur :form form}\n      :frame frame\n      :exprs exprs\n      :children [:exprs])))\n\n(defn analyze-const\n  [env form]\n  (let [;; register constants\n        {:keys [tag]} (analyze (assoc env :quoted? true) form)]\n    {:op       :const\n     :env      env\n     :literal? true\n     :val      form\n     :tag      tag\n     :form     form}))\n\n(defmethod parse 'quote\n  [_ env [_ x :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to quote\")))\n  (let [expr (analyze-const env x)]\n    {:op :quote\n     :expr expr\n     :env env\n     :form form\n     :tag (:tag expr)\n     :children [:expr]}))\n\n(defmethod parse 'new\n  [_ env [_ ctor & args :as form] _ _]\n  (disallowing-recur\n   (let [enve (assoc env :context :expr)\n         ctorexpr (analyze enve ctor)\n         ctor-var (when (#{:var :local :js-var} (:op ctorexpr))\n                    (resolve-existing-var env ctor))\n         record-args\n         (when (and (:record ctor-var) (not (-> ctor meta :internal-ctor)))\n           (repeat 3 (analyze enve nil)))\n         argexprs (into (vec (map #(analyze enve %) args)) record-args)\n         known-num-fields (:num-fields ctor-var)\n         argc (count args)]\n     (when (and (not (-> ctor meta :internal-ctor))\n                (some? known-num-fields) (not= known-num-fields argc))\n       (warning :fn-arity env {:argc argc :ctor ctor}))\n     {:env env :op :new :form form :class ctorexpr :args argexprs\n      :children [:class :args]\n      :tag (let [name (-> ctorexpr :info :name)]\n             (or ('{js/Object object\n                    js/String string\n                    js/Array  array\n                    js/Number number\n                    js/Function function\n                    js/Boolean boolean} name)\n                 name))})))\n\n(defmethod parse 'set!\n  [_ env [_ target val alt :as form] _ _]\n  (let [[target val] (if alt\n                       ;; (set! o -prop val)\n                       [`(. ~target ~val) alt]\n                       [target val])]\n    (disallowing-recur\n      (binding [*private-var-access-nowarn* true]\n        (let [enve  (assoc env :context :expr)\n              texpr (cond\n                      (symbol? target)\n                      (do\n                        (cond\n                          (and (= target '*unchecked-if*)   ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-if* val)\n\n                          (and (= target '*unchecked-arrays*) ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-arrays* val)\n\n                          (and (= target '*warn-on-infer*)\n                               (or (true? val) (false? val)))\n                          (set! *cljs-warnings* (assoc *cljs-warnings* :infer-warning val)))\n                        (when (some? (:const (resolve-var (dissoc env :locals) target)))\n                          (throw (error env \"Can't set! a constant\")))\n                        (let [local (handle-symbol-local target (-> env :locals target))]\n                          (when-not (or (nil? local)\n                                        (and (:field local)\n                                             (or (:mutable local)\n                                                 (:unsynchronized-mutable local)\n                                                 (:volatile-mutable local))))\n                            (throw (error env \"Can't set! local var or non-mutable field\"))))\n                        (analyze-symbol enve target))\n\n                      :else\n                      (when (seq? target)\n                        (let [texpr (if (-> target meta :extend-type)\n                                      ;; we're setting a prototype via extend-type macro\n                                      ;; nothing to warn\n                                      (binding [*cljs-warnings*\n                                                (assoc *cljs-warnings* :infer-warning false)]\n                                        (analyze-seq enve target nil))\n                                      (analyze-seq enve target nil))]\n                          (when (:field texpr)\n                            texpr))))\n              vexpr (analyze enve val)]\n          ;; as top level fns are decomposed for Closure cross-module code motion, we need to\n          ;; restore their :methods information\n          (when (seq? target)\n            (let [sym  (some-> target second)\n                  meta (meta sym)]\n              (when-let [info (and (= :fn (:op vexpr)) (:top-fn meta))]\n                (swap! env/*compiler* update-in\n                  [::namespaces (-> env :ns :name) :defs sym :methods]\n                  (fnil conj [])\n                  ;; just use original fn meta, as the fn method is already desugared\n                  ;; only get tag from analysis\n                  (merge\n                    (select-keys info [:fixed-arity :variadic?])\n                    (select-keys (-> vexpr :methods first) [:tag]))))))\n          (when-not texpr\n            (throw (error env \"set! target must be a field or a symbol naming a var\")))\n          (cond\n            (and (not (:def-emits-var env))                 ;; non-REPL context\n                 (some? ('#{*unchecked-if* *unchecked-arrays* *warn-on-infer*} target)))\n            {:env env :op :no-op}\n\n            :else\n            {:env env :op :set! :form form :target texpr :val vexpr\n             :children [:target :val]}))))))\n\n#?(:clj (declare analyze-file))\n\n#?(:clj\n   (defn locate-src\n     \"Given a namespace return the corresponding ClojureScript (.cljs or .cljc)\n     resource on the classpath or file from the root of the build.\"\n     [ns]\n     (or (util/ns->source ns)\n       ;; Find sources available in inputs given to cljs.closure/build - Juho Teperi\n       (some (fn [source]\n               (if (= ns (:ns source))\n                 (:source-file source)))\n             (:sources @env/*compiler*))\n       ;; Find sources in directory given to cljs.compiler/compile-root - Juho Teperi\n       (let [rootp (when-let [root (:root @env/*compiler*)]\n                     (.getPath ^File root))\n             cljsf (io/file rootp (ns->relpath ns :cljs))\n             cljcf (io/file rootp (ns->relpath ns :cljc))]\n         (if (and (.exists cljsf) (.isFile cljsf))\n           cljsf\n           (if (and (.exists cljcf) (.isFile cljcf))\n             cljcf))))))\n\n(defn foreign-dep?\n  #?(:cljs {:tag boolean})\n  [dep]\n  (let [js-index (:js-dependency-index @env/*compiler*)]\n    (if-some [[_ {:keys [foreign]}] (find js-index (name dep))]\n      foreign\n      false)))\n\n(defn analyze-deps\n  \"Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.\"\n  ([lib deps env]\n   (analyze-deps lib deps env\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([lib deps env opts]\n   (let [compiler @env/*compiler*]\n     (binding [*cljs-dep-set* (vary-meta (conj *cljs-dep-set* lib) update-in [:dep-path] conj lib)]\n       (assert (every? #(not (contains? *cljs-dep-set* %)) deps)\n         (str \"Circular dependency detected, \"\n           (apply str\n             (interpose \" -> \"\n               (conj (-> *cljs-dep-set* meta :dep-path)\n                 (some *cljs-dep-set* deps))))))\n       (doseq [dep deps]\n         (when-not (or (some? (get-in compiler [::namespaces dep :defs]))\n                       (node-module-dep? dep)\n                       (js-module-exists? (name dep))\n                       #?(:clj (deps/find-classpath-lib dep)))\n           (if (contains? (:js-dependency-index compiler) (name dep))\n             (let [dep-name (name dep)]\n               (when (string/starts-with? dep-name \"goog.\")\n                 #?(:clj (let [js-lib (get-in compiler [:js-dependency-index dep-name])\n                               ns (externs/analyze-goog-file (:file js-lib) (symbol dep-name))]\n                           (swap! env/*compiler* update-in [::namespaces dep] merge ns)))))\n             #?(:clj (if-some [src (locate-src dep)]\n                       (analyze-file src opts)\n                       (throw\n                         (error env\n                           (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)}))))\n                :cljs (throw\n                        (error env\n                          (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)})))))))))))\n\n(defn missing-use? [lib sym cenv]\n  (let [js-lib (get-in cenv [:js-dependency-index (name lib)])]\n    (and (= (get-in cenv [::namespaces lib :defs sym] ::not-found) ::not-found)\n         (not (= (get js-lib :group) :goog))\n         (not (get js-lib :closure-lib))\n         (not (node-module-dep? lib))\n         (not (dep-has-global-exports? lib)))))\n\n(defn missing-rename? [sym cenv]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))]\n    (missing-use? lib sym cenv)))\n\n(defn missing-use-macro? [lib sym]\n  ;; guard against string requires\n  (when (symbol? lib)\n    (let [the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n      (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym))))))\n\n(defn missing-rename-macro? [sym]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))\n        the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n    (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym)))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-uses\n  [uses env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use? lib sym cenv)) uses))))\n\n;; returns (s/map-of symbol? qualified-symbol?)\n(defn missing-renames [renames env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[_ qualified-sym]] (missing-rename? qualified-sym cenv)) renames))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use-macro? lib sym)) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (not (missing-use-macro? lib sym))) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-rename-macros [rename-macros env]\n  (into {} (filter (fn [[_ qualified-sym]] (not (missing-rename-macro? qualified-sym))) rename-macros)))\n\n(defn check-uses [uses env]\n  (let [cenv @env/*compiler*]\n    (doseq [[sym lib] uses]\n      (when (missing-use? lib sym cenv)\n        (throw\n          (error env\n            (error-message :undeclared-ns-form {:type \"var\" :lib lib :sym sym})))))))\n\n(defn check-use-macros\n  ([use-macros env]\n    (check-use-macros use-macros nil env))\n  ([use-macros missing-uses env]\n   (let [cenv @env/*compiler*]\n     (doseq [[sym lib] use-macros]\n       (when (missing-use-macro? lib sym)\n         (throw\n           (error env\n             (error-message :undeclared-ns-form {:type \"macro\" :lib lib :sym sym})))))\n     (check-uses (missing-use-macros missing-uses env) env)\n     (inferred-use-macros missing-uses env))))\n\n(defn check-use-macros-inferring-missing\n  [{:keys [name uses use-macros] :as ast} env]\n  (let [missing-uses        (when (and *analyze-deps* (seq uses))\n                              (missing-uses uses env))\n        maybe-macros        (apply dissoc uses (keys missing-uses))\n        remove-missing-uses #(apply dissoc % (keys missing-uses))\n        ast' (-> ast\n               (update-in [:use-macros]\n                 #(-> %\n                   (merge (check-use-macros use-macros missing-uses env))\n                   (merge (inferred-use-macros maybe-macros env))))\n               (update-in [:uses] remove-missing-uses))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :use-macros] merge (:use-macros ast'))\n        (update-in [::namespaces name :uses] remove-missing-uses)))\n    ast'))\n\n(defn check-rename-macros-inferring-missing\n  [{:keys [name renames] :as ast} env]\n  (let [missing-renames        (when (and *analyze-deps* (seq renames))\n                                 (missing-renames renames env))\n        maybe-macros           (apply dissoc renames (keys missing-renames))\n        missing-rename-macros  (inferred-rename-macros missing-renames env)\n        remove-missing-renames #(apply dissoc % (keys missing-renames))\n        ast' (-> ast\n               (update-in [:rename-macros]\n                 #(-> %\n                   (merge missing-rename-macros)\n                   (merge (inferred-rename-macros maybe-macros env))))\n               (update-in [:renames] remove-missing-renames))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :rename-macros] merge (:rename-macros ast'))\n        (update-in [::namespaces name :renames] remove-missing-renames)))\n    ast'))\n\n(defn parse-ns-error-msg [spec msg]\n  (str msg \"; offending spec: \" (pr-str spec)))\n\n(defn basic-validate-ns-spec [env macros? spec]\n  (when-not (or (symbol? spec) (string? spec) (sequential? spec))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"))))\n  (when (sequential? spec)\n    (when-not (or (symbol? (first spec)) (string? (first spec)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Library name must be specified as a symbol in :require / :require-macros\"))))\n    (when-not (odd? (count spec))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"))))\n    (when-not (every? #{:as :refer :rename} (map first (partition 2 (next spec))))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as, :refer and :rename options supported in :require / :require-macros\"))))\n    (when-not (let [fs (frequencies (next spec))]\n                (and (<= (fs :as 0) 1)\n                     (<= (fs :refer 0) 1)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Each of :as and :refer options may only be specified once in :require / :require-macros\"))))))\n\n(defn parse-ns-excludes [env args]\n  (reduce\n    (fn [s [k & filters]]\n      (if (= k :refer-clojure)\n        (do\n          (when (seq (:excludes s))\n            (throw (error env \"Only one :refer-clojure form is allowed per namespace definition\")))\n          (let [valid-kws #{:exclude :rename}\n                xs\n                (loop [fs (seq filters)\n                       ret {:excludes #{}\n                            :renames {}}\n                       err (not (even? (count filters)))]\n                  (cond\n                    (true? err)\n                    (throw\n                      (error env \"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\"))\n\n                    (some? fs)\n                    (let [kw (first fs)]\n                      (if (valid-kws kw)\n                        (let [refs (second fs)]\n                          (cond\n                            (not (or (and (= kw :exclude) (sequential? refs) (every? symbol? refs))\n                                     (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs))))\n                            (recur fs ret true)\n\n                            (= kw :exclude)\n                            (recur (nnext fs) (update-in ret [:excludes] into refs) false)\n\n                            (= kw :rename)\n                            (recur (nnext fs) (update-in ret [:renames] merge refs) false)))\n                        (recur fs ret true)))\n\n                    :else ret))]\n            (merge-with into s xs)))\n        s))\n    {:excludes #{}\n     :renames {}} args))\n\n(defn use->require [env [lib & filters :as spec]]\n  (when-not (and (symbol? lib) (odd? (count spec)))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"))))\n  (loop [fs (seq filters) ret [lib] err false]\n    (cond\n      (true? err)\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\")))\n\n      (some? fs)\n      (let [kw (first fs)\n            only? (= kw :only)]\n        (if (or only? (= kw :rename))\n          (if (some? (some #{(if only? :refer kw)} ret))\n            (throw\n              (error env\n                (parse-ns-error-msg spec\n                  \"Each of :only and :rename options may only be specified once in :use / :use-macros\")))\n            (let [refs (second fs)]\n              (if-not (or (and only? (sequential? refs) (every? symbol? refs))\n                          (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs)))\n                (recur fs ret true)\n                (recur (nnext fs) (into ret [(if only? :refer kw) refs]) false))))\n          (recur fs ret true )))\n\n      :else (if (some? (some #{:refer} ret))\n              ret\n              (recur fs ret true)))))\n\n(defn parse-require-spec [env macros? deps aliases spec]\n  (if (or (symbol? spec) (string? spec))\n    (recur env macros? deps aliases [spec])\n    (do\n      (basic-validate-ns-spec env macros? spec)\n      (let [[lib & opts] spec\n            ;; We need to load JS modules by the name that has been created by the\n            ;; Google Closure compiler, e.g. module$resources$libs$calculator.\n            ;; This means that we need to create an alias from the module name\n            ;; given with :provides to the new name.\n            [lib js-module-provides] (if-some [js-module-name (gets @env/*compiler* :js-module-index (str lib) :name)]\n                                       [(symbol js-module-name) lib]\n                                       [lib nil])\n            {alias :as referred :refer renamed :rename\n             :or {alias (if (string? lib)\n                          (symbol (munge lib))\n                          lib)}}\n            (apply hash-map opts)\n            referred-without-renamed (seq (remove (set (keys renamed)) referred))\n            [rk uk renk] (if macros? [:require-macros :use-macros :rename-macros] [:require :use :rename])]\n        (when-not (or (symbol? alias) (nil? alias))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":as must be followed by a symbol in :require / :require-macros\"))))\n        (when (some? alias)\n          (let [alias-type (if macros? :macros :fns)\n                lib'       ((alias-type @aliases) alias)]\n            (when (and (some? lib') (not= lib lib'))\n              (throw (error env (parse-ns-error-msg spec \":as alias must be unique\"))))\n            (swap! aliases\n              update-in [alias-type]\n              conj [alias lib] (when js-module-provides [js-module-provides lib]))))\n        (when-not (or (and (sequential? referred)\n                           (every? symbol? referred))\n                      (nil? referred))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":refer must be followed by a sequence of symbols in :require / :require-macros\"))))\n        (when-not macros?\n          (swap! deps conj lib))\n        (merge\n          (when (some? alias)\n            {rk (merge {alias lib} {lib lib}\n                  (when js-module-provides {js-module-provides lib}))})\n          (when (some? referred-without-renamed)\n            {uk (apply hash-map (interleave referred-without-renamed (repeat lib)))})\n          (when (some? renamed)\n            {renk (reduce (fn [m [original renamed]]\n                            (when-not (some #{original} referred)\n                              (throw (error env\n                                       (str \"Renamed symbol \" original \" not referred\"))))\n                            (assoc m renamed (symbol (str lib) (str original))))\n                    {} renamed)}))))))\n\n(defn parse-import-spec [env deps spec]\n  (when-not (or (and (sequential? spec)\n                     (every? symbol? spec))\n                (and (symbol? spec) (nil? (namespace spec))))\n    (throw (error env (parse-ns-error-msg spec \"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"))))\n  (let [import-map (cond\n                     (sequential? spec)\n                     (->> (rest spec)\n                       (map #(vector % (symbol (str (first spec) \".\" %))))\n                       (into {}))\n\n                     (not (== -1 (.indexOf (str spec) \".\")))\n                     {(symbol (last (string/split (str spec) #\"\\.\"))) spec}\n\n                     :else {})]\n    (doseq [[_ spec] import-map]\n      (swap! deps conj spec))\n    {:import  import-map\n     :require import-map}))\n\n#?(:clj (declare parse-ns))\n\n(defn macro-autoload-ns?\n  \"Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.\"\n  #?(:cljs {:tag boolean})\n  [form]\n  (when *macro-infer*\n    (let [ns (if (sequential? form) (first form) form)\n         {:keys [use-macros require-macros]}\n         (or (get-in @env/*compiler* [::namespaces ns])\n             #?(:clj\n                (when-let [res (util/ns->source ns)]\n                  (:ast (parse-ns res)))))]\n      (or (some #{ns} (vals use-macros))\n          (some #{ns} (vals require-macros))))))\n\n(defn clj-ns->cljs-ns\n  \"Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs\"\n  [sym]\n  (let [segs (string/split (clojure.core/name sym) #\"\\.\")]\n    (if (= \"clojure\" (first segs))\n      (symbol (string/join \".\" (cons \"cljs\" (next segs))))\n      sym)))\n\n#?(:clj\n   (defn aliasable-clj-ns?\n     \"Predicate for testing with a symbol represents an aliasable clojure namespace.\"\n     [sym]\n     (when-not (util/ns->source sym)\n       (let [[seg1 :as segs] (string/split (clojure.core/name sym) #\"\\.\")]\n         (when (= \"clojure\" seg1)\n           (let [sym' (clj-ns->cljs-ns sym)]\n             (util/ns->source sym')))))))\n\n#?(:clj\n   (defn process-rewrite-form [[k & specs :as form]]\n     (letfn [(process-spec [maybe-spec]\n               (let [[lib & xs] (if (sequential? maybe-spec)\n                                  maybe-spec\n                                  [maybe-spec])]\n                 (if (and (symbol? lib) (aliasable-clj-ns? lib))\n                   (let [lib' (clj-ns->cljs-ns lib)\n                         spec (cons lib' xs)]\n                     (into (if xs [spec] []) [(list lib' :as lib)]))\n                   [maybe-spec])))]\n       (if (#{:use :require} k)\n         (cons k (mapcat process-spec specs))\n         form))))\n\n#?(:clj\n   (defn rewrite-cljs-aliases\n     \"Alias non-existing clojure.* namespaces to existing cljs.* namespaces if\n      possible.\"\n     [args]\n     (map process-rewrite-form args)))\n\n(defn canonicalize-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (as-> (second quoted-spec-or-kw) spec\n                (if (or (vector? spec) (map? spec)) spec [spec]))))]\n    (map canonicalize specs)))\n\n(defn canonicalize-import-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (second quoted-spec-or-kw)))]\n    (map canonicalize specs)))\n\n(defn desugar-ns-specs\n  \"Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared.\"\n  [args]\n  (let [{:keys [require] :as indexed}\n        (->> args\n          (map (fn [[k & specs]] [k (into [] specs)]))\n          (into {}))\n        sugar-keys #{:include-macros :refer-macros}\n        ;; drop spec k and value from spec for generated :require-macros\n        remove-from-spec\n        (fn [pred spec]\n          (if-not (and (sequential? spec) (some pred spec))\n            spec\n            (let [[l r] (split-with (complement pred) spec)]\n              (recur pred (concat l (drop 2 r))))))\n        ;; rewrite :refer-macros to :refer for generated :require-macros\n        replace-refer-macros\n        (fn [spec]\n          (if-not (sequential? spec)\n            spec\n            (map (fn [x] (if (= x :refer-macros) :refer x)) spec)))\n        reload-spec? #(#{:reload :reload-all} %)\n        to-macro-specs\n        (fn [specs]\n          (->> specs\n            (filter\n              (fn [x]\n                (or (and (sequential? x)\n                         (some sugar-keys x))\n                    (reload-spec? x)\n                    (macro-autoload-ns? x))))\n            (map (fn [x]\n                   (if-not (reload-spec? x)\n                     (->> x (remove-from-spec #{:include-macros})\n                            (remove-from-spec #{:refer})\n                            (remove-from-spec #{:rename})\n                            (replace-refer-macros))\n                     x)))))\n        remove-sugar (partial remove-from-spec sugar-keys)]\n    (if-some [require-specs (seq (to-macro-specs require))]\n      (map (fn [x]\n             (if-not (reload-spec? x)\n               (let [[k v] x]\n                 (cons k (map remove-sugar v)))\n               x))\n        (update-in indexed [:require-macros] (fnil into []) require-specs))\n      args)))\n\n(defn find-def-clash [env ns segments]\n  (let [to-check (map (fn [xs]\n                        [(symbol (string/join \".\" (butlast xs)))\n                         (symbol (last xs))])\n                   (drop 2 (reductions conj [] segments)))]\n    (doseq [[clash-ns name] to-check]\n      (when (get-in @env/*compiler* [::namespaces clash-ns :defs name])\n        (warning :ns-var-clash env\n          {:ns ns\n           :var (symbol (str clash-ns) (str name))})))))\n\n(defn macro-ns-name [name]\n  (let [name-str (str name)]\n    (if-not #?(:clj  (.endsWith name-str \"$macros\")\n               :cljs (gstring/endsWith name-str \"$macros\"))\n      (symbol (str name-str \"$macros\"))\n      name)))\n\n(defmethod parse 'ns\n  [_ env [_ name & args :as form] _ opts]\n  (when-not *allow-ns*\n    (throw (error env \"Namespace declarations must appear at the top-level.\")))\n  (when-not (symbol? name)\n    (throw (error env \"Namespaces must be named by a symbol.\")))\n  (let [name (cond-> name (:macros-ns opts) macro-ns-name)]\n    (let [segments (string/split (clojure.core/name name) #\"\\.\")]\n      (when (= 1 (count segments))\n        (warning :single-segment-namespace env {:name name}))\n      (let [segment (some js-reserved segments)]\n        (when (some? segment)\n          (warning :munged-namespace env {:name name})))\n      (find-def-clash env name segments)\n      #?(:clj\n         (when (some (complement util/valid-js-id-start?) segments)\n           (throw\n             (AssertionError.\n               (str \"Namespace \" name \" has a segment starting with an invaild \"\n                    \"JavaScript identifier\"))))))\n    (let [docstring    (when (string? (first args)) (first args))\n          mdocstr      (-> name meta :doc)\n          args         (if (some? docstring) (next args) args)\n          metadata     (when (map? (first args)) (first args))\n          args         (desugar-ns-specs\n                         #?(:clj  (rewrite-cljs-aliases\n                                    (if metadata (next args) args))\n                            :cljs (if (some? metadata) (next args) args)))\n          name         (vary-meta name merge metadata)\n          {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n          core-renames (reduce (fn [m [original renamed]]\n                                 (assoc m renamed (symbol \"cljs.core\" (str original))))\n                         {} core-renames)\n          deps         (atom [])\n          aliases      (atom {:fns {} :macros {}})\n          spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                        :require-macros (partial parse-require-spec env true deps aliases)\n                        :use            (comp (partial parse-require-spec env false deps aliases)\n                                          (partial use->require env))\n                        :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                          (partial use->require env))\n                        :import         (partial parse-import-spec env deps)}\n          valid-forms  (atom #{:use :use-macros :require :require-macros :import})\n          reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n          reloads      (atom {})\n          {uses :use requires :require renames :rename\n           use-macros :use-macros require-macros :require-macros\n           rename-macros :rename-macros imports :import :as params}\n          (reduce\n            (fn [m [k & libs :as libspec]]\n              (when-not (#{:use :use-macros :require :require-macros :import} k)\n                (throw (error env (str \"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \" libspec \" instead.\"))))\n              (when-not (@valid-forms k)\n                (throw (error env (str \"Only one \" k \" form is allowed per namespace definition\"))))\n              (swap! valid-forms disj k)\n              ;; check for spec type reloads\n              (when-not (= :import k)\n                (when (some? (some #{:reload} libs))\n                  (swap! reload assoc k :reload))\n                (when (some? (some #{:reload-all} libs))\n                  (swap! reload assoc k :reload-all)))\n              ;; check for individual ns reloads from REPL interactions\n              (when-let [xs (seq (filter #(-> % meta :reload) libs))]\n                (swap! reloads assoc k\n                  (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n              (apply merge-with merge m\n                (map (spec-parsers k)\n                  (remove #{:reload :reload-all} libs))))\n            {} (remove (fn [[r]] (= r :refer-clojure)) args))\n          ;; patch `require-macros` and `use-macros` in Bootstrap for namespaces\n          ;; that require their own macros\n          #?@(:cljs [[require-macros use-macros]\n                     (map (fn [spec-map]\n                            (if (:macros-ns opts)\n                              (let [ns (symbol (subs (str name) 0 (- (count (str name)) 7)))]\n                                (reduce (fn [m [k v]]\n                                          (cond-> m\n                                            (not (symbol-identical? v ns))\n                                            (assoc k v)))\n                                  {} spec-map))\n                              spec-map)) [require-macros use-macros])])]\n      (set! *cljs-ns* name)\n      (let [ns-info\n            {:name           name\n             :doc            (or docstring mdocstr)\n             :excludes       excludes\n             :use-macros     use-macros\n             :require-macros require-macros\n             :rename-macros  rename-macros\n             :uses           uses\n             :requires       requires\n             :renames        (merge renames core-renames)\n             :imports        imports}]\n        (swap! env/*compiler* update-in [::namespaces name] merge ns-info)\n        (merge {:op      :ns\n                :env     env\n                :form    form\n                :deps    (into [] (distinct @deps))\n                :reload  @reload\n                :reloads @reloads}\n          (cond-> ns-info\n            (@reload :use)\n            (update-in [:uses]\n              (fn [m] (with-meta m {(@reload :use) true})))\n            (@reload :require)\n            (update-in [:requires]\n              (fn [m] (with-meta m {(@reload :require) true})))))))))\n\n(defn- check-duplicate-aliases\n  [env old new]\n  (let [ns-name (:name old)]\n    (doseq [k [:requires :require-macros]]\n      (let [old-aliases (get old k)\n            new-aliases (get new k)]\n        (when-some [alias (some (set (keys new-aliases))\n                            (->> old-aliases\n                              (remove (fn [[k v :as entry]]\n                                        (or (= k v)\n                                            (= entry (find new-aliases k)))))\n                              keys))]\n          (throw (error env\n                   (str \"Alias \" alias \" already exists in namespace \" ns-name\n                     \", aliasing \" (get old-aliases alias)))))))))\n\n(defmethod parse 'ns*\n  [_ env [_ quoted-specs :as form] _ opts]\n  (when-let [not-quoted (->> (remove keyword? quoted-specs)\n                          (remove #(and (seq? %) (= 'quote (first %))) )\n                          first)]\n    (throw (error env (str \"Arguments to \" (name (first quoted-specs))\n                        \" must be quoted. Offending spec: \" not-quoted))))\n  (when-not *allow-ns*\n    (throw (error env (str \"Calls to `\" (name (first quoted-specs))\n                        \"` must appear at the top-level.\"))))\n  (let [specs        (if (= :import (first quoted-specs))\n                       (canonicalize-import-specs quoted-specs)\n                       (canonicalize-specs quoted-specs))\n        name         (-> env :ns :name)\n        args         (desugar-ns-specs\n                       #?(:clj  (list (process-rewrite-form\n                                        specs))\n                          :cljs (list specs)))\n        {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n        core-renames (reduce (fn [m [original renamed]]\n                               (assoc m renamed (symbol \"cljs.core\" (str original))))\n                       {} core-renames)\n        deps         (atom [])\n        aliases      (atom {:fns {} :macros {}})\n        spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                      :require-macros (partial parse-require-spec env true deps aliases)\n                      :use            (comp (partial parse-require-spec env false deps aliases)\n                                        (partial use->require env))\n                      :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                        (partial use->require env))\n                      :import         (partial parse-import-spec env deps)}\n        reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n        reloads      (atom {})\n        {uses :use requires :require renames :rename\n         use-macros :use-macros require-macros :require-macros\n         rename-macros :rename-macros imports :import :as params}\n        (reduce\n          (fn [m [k & libs]]\n            ;; check for spec type reloads\n            (when-not (= :import k)\n              (when (some? (some #{:reload} libs))\n                (swap! reload assoc k :reload))\n              (when (some? (some #{:reload-all} libs))\n                (swap! reload assoc k :reload-all)))\n            ;; check for individual ns reloads from REPL interactions\n            (when-some [xs (seq (filter #(-> % meta :reload) libs))]\n              (swap! reloads assoc k\n                (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n            (apply merge-with merge m\n              (map (spec-parsers k)\n                (remove #{:reload :reload-all} libs))))\n          {} (remove (fn [[r]] (= r :refer-clojure)) args))]\n    (set! *cljs-ns* name)\n    (let [require-info\n          {:name           name\n           :excludes       excludes\n           :use-macros     use-macros\n           :require-macros require-macros\n           :rename-macros  rename-macros\n           :uses           uses\n           :requires       requires\n           :renames        (merge renames core-renames)\n           :imports        imports}\n          ns-info\n          (let [ns-info' (get-in @env/*compiler* [::namespaces name])]\n            (if (pos? (count ns-info'))\n              (let [merge-keys\n                    [:use-macros :require-macros :rename-macros\n                     :uses :requires :renames :imports]]\n                #?(:clj\n                   (when *check-alias-dupes*\n                     (check-duplicate-aliases env ns-info' require-info)))\n                (merge\n                  ns-info'\n                  {:excludes excludes}\n                  (merge-with merge\n                    (select-keys ns-info' merge-keys)\n                    (select-keys require-info merge-keys))))\n              require-info))]\n      (swap! env/*compiler* update-in [::namespaces name] merge ns-info)\n      (merge {:op      :ns*\n              :env     env\n              :form    form\n              :deps    (into [] (distinct @deps))\n              :reload  @reload\n              :reloads @reloads}\n        (cond-> require-info\n          (@reload :use)\n          (update-in [:uses]\n            (fn [m] (with-meta m {(@reload :use) true})))\n          (@reload :require)\n          (update-in [:requires]\n            (fn [m] (with-meta m {(@reload :require) true}))))))))\n\n(defn parse-type\n  [op env [_ tsym fields pmasks body :as form]]\n  (let [t (:name (resolve-var (dissoc env :locals) tsym))\n        locals (reduce (fn [m fld]\n                         (assoc m fld\n                                {:name fld\n                                 :line (get-line fld env)\n                                 :column (get-col fld env)\n                                 :local :field\n                                 :field true\n                                 :mutable (-> fld meta :mutable)\n                                 :unsynchronized-mutable (-> fld meta :unsynchronized-mutable)\n                                 :volatile-mutable (-> fld meta :volatile-mutable)\n                                 :tag (-> fld meta :tag)\n                                 :shadow (m fld)}))\n                       {} (if (= :defrecord op)\n                            (concat fields '[__meta __extmap ^:mutable __hash])\n                            fields))\n        protocols (-> tsym meta :protocols)]\n    (swap! env/*compiler* update-in [::namespaces (-> env :ns :name) :defs tsym]\n           (fn [m]\n             (let [m (assoc (or m {})\n                       :name t\n                       :tag 'function\n                       :type true\n                       :num-fields (count fields)\n                       :record (= :defrecord op))]\n               (merge m\n                      (dissoc (meta tsym) :protocols)\n                      {:protocols protocols}\n                      (source-info tsym env)))))\n    {:op op :env env :form form :t t :fields fields :pmasks pmasks\n     :tag 'function\n     :protocols (disj protocols 'cljs.core/Object)\n     :children [#_:fields :body]\n     :body (analyze (assoc env :locals locals) body)}))\n\n(defmethod parse 'deftype*\n  [_ env form _ _]\n  (parse-type :deftype env form))\n\n(defmethod parse 'defrecord*\n  [_ env form _ _]\n  (parse-type :defrecord env form) )\n\n;; dot accessor code\n\n(def ^:private property-symbol? #(boolean (and (symbol? %) (re-matches #\"^-.*\" (name %)))))\n\n(defn- classify-dot-form\n  [[target member args]]\n  [(cond (nil? target) ::error\n         :default      ::expr)\n   (cond (property-symbol? member) ::property\n         (symbol? member)          ::symbol\n         (seq? member)             ::list\n         :default                  ::error)\n   (cond (nil? args) ()\n         :default    ::expr)])\n\n(defmulti build-dot-form #(classify-dot-form %))\n\n;; (. o -p)\n;; (. (...) -p)\n(defmethod build-dot-form [::expr ::property ()]\n  [[target prop _]]\n  {:dot-action ::access :target target\n   :field (with-meta (-> prop name (.substring 1) symbol) (meta prop))})\n\n;; (. o -p <args>)\n(defmethod build-dot-form [::expr ::property ::list]\n  [[target prop args]]\n  #?(:clj  (throw (Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))\n     :cljs (throw (js/Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))))\n\n(defn- build-method-call\n  \"Builds the intermediate method call map used to reason about the parsed form during\n  compilation.\"\n  [target meth args]\n  (if (symbol? meth)\n    {:dot-action ::call :target target :method meth :args args}\n    {:dot-action ::call :target target :method (first meth) :args args}))\n\n;; (. o m 1 2)\n(defmethod build-dot-form [::expr ::symbol ::expr]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o m)\n(defmethod build-dot-form [::expr ::symbol ()]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o (m))\n;; (. o (m 1 2))\n(defmethod build-dot-form [::expr ::list ()]\n  [[target meth-expr _]]\n  (build-method-call target (first meth-expr) (rest meth-expr)))\n\n(defmethod build-dot-form :default\n  [dot-form]\n  #?(:clj  (throw\n             (Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))\n     :cljs (throw\n             (js/Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))))\n\n(defn analyze-dot [env target field member+ form]\n  (let [v [target field member+]\n        {:keys [dot-action target method field args]} (build-dot-form v)\n        enve       (assoc env :context :expr)\n        targetexpr (analyze enve target)\n        form-meta  (meta form)\n        target-tag (:tag targetexpr)\n        prop       (or field method)\n        tag        (or (:tag form-meta)\n                       (and (js-tag? target-tag)\n                            (vary-meta (normalize-js-tag target-tag)\n                              update-in [:prefix] (fnil conj '[Object]) prop))\n                       nil)]\n    (when (and (not= 'constructor prop)\n               (not (string/starts-with? (str prop) \"cljs$\"))\n               (not (-> prop meta :protocol-method)))\n      ;; Adding to Object\n      (when (= 'Object (first (-> tag meta :prefix)))\n        (warning :infer-warning env\n          {:warn-type :object :form form :property prop}))\n      (when (not= 'js target-tag)\n        ;; Cannot determine type of the target\n        (when (or (nil? target-tag) ('#{any} target-tag))\n          (warning :infer-warning env\n            {:warn-type :target :form form :property prop}))\n        ;; Unresolveable property on existing extern\n        (let [[pre' pre] ((juxt butlast identity) (-> tag meta :prefix))]\n          (when (and (has-extern? pre') (not (has-extern? pre)))\n            (warning :infer-warning env\n              {:warn-type :property :form form\n               :type (symbol \"js\"\n                       (string/join \".\"\n                         (cond-> pre' (= 'prototype (last pre')) butlast)))\n               :property prop})))))\n    (when (js-tag? tag)\n      (let [pre (-> tag meta :prefix)]\n        (when-not (has-extern? pre)\n          (swap! env/*compiler* update-in\n            (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))))\n    (case dot-action\n      ::access (let [children [:target]]\n                 {:op :host-field\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :field field\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :tag) tag)\n                         tag)})\n      ::call   (let [argexprs (mapv #(analyze enve %) args)\n                     children [:target :args]]\n                 {:op :host-call\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :method method\n                  :args argexprs\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :ret-tag) 'js)\n                         tag)}))))\n\n(defmethod parse '.\n  [_ env [_ target & [field & member+] :as form] _ _]\n  (disallowing-recur (analyze-dot env target field member+ form)))\n\n(defn get-js-tag [form]\n  (let [form-meta (meta form)]\n    (if-some [tag (:tag form-meta)]\n      tag\n      (when (true? (:numeric form-meta))\n        'number))))\n\n(defn js-star-interp\n  [env ^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)\n            inner (:name (resolve-existing-var env (symbol (subs s (+ 2 idx) end))))]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (cons inner\n              (js-star-interp env (subs s (inc end))))))))))\n\n(defn js-star-seg\n  [^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (js-star-seg (subs s (inc end)))))))))\n\n(def NUMERIC_SET '#{any number long double})\n\n(defn numeric-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO: type inference is not strong enough to detect that\n  ;; when functions like first won't return nil, so variadic\n  ;; numeric functions like cljs.core/< would produce a spurious\n  ;; warning without this - David\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    :else\n    (if (and (symbol? t) (some? (get NUMERIC_SET t)))\n      true\n      (when #?(:clj  (set? t)\n               :cljs (cljs-set? t))\n        (or (contains? t 'number)\n            (contains? t 'long)\n            (contains? t 'double)\n            (contains? t 'any)\n            (contains? t 'js))))))\n\n(def array-types\n  '#{array objects ints longs floats doubles chars shorts bytes boolean})\n\n(defn array-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO same inference caveats as the numeric-type? fn above\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    (= 'any t) true\n    (contains? array-types t) true\n    :else\n    (boolean\n      (when #?(:clj  (set? t)\n               :cljs (cljs-set? t))\n        (or (contains? t 'any)\n            (contains? t 'js)\n            (some array-types t))))))\n\n(defn- analyze-js-star-args [js-op env args]\n  (first (reduce\n           (fn [[argexprs env] arg]\n             [(conj argexprs (analyze env arg))\n              (if (= js-op 'cljs.core/and)\n                (set-test-induced-tags env arg)\n                env)])\n           [[] env]\n           args)))\n\n(defn analyze-js-star* [env jsform args form]\n  (let [enve      (assoc env :context :expr)\n        form-meta (meta form)\n        segs      (js-star-seg jsform)\n        tag       (get-js-tag form)\n        js-op     (:js-op form-meta)\n        argexprs  (analyze-js-star-args js-op enve args)\n        numeric   (:numeric form-meta)\n        validate  (fn [warning-type valid-types?]\n                    (let [types (map #(infer-tag env %) argexprs)]\n                      (when-not (valid-types? types)\n                        (warning warning-type env\n                          {:js-op js-op\n                           :types (into [] types)}))))\n        op-match? (fn [sym]\n                    #?(:clj  (= sym (:js-op form-meta))\n                       :cljs (symbol-identical? sym (:js-op form-meta))))]\n    (when (true? numeric)\n      (validate :invalid-arithmetic #(every? numeric-type? %)))\n    {:op :js\n     :env env\n     :segs segs\n     :args argexprs\n     :tag tag\n     :form form\n     :children [:args]\n     :js-op js-op\n     :numeric numeric}))\n\n(defn analyze-js-star [env jsform args form]\n  (disallowing-recur (analyze-js-star* env jsform args form)))\n\n(defmethod parse 'js*\n  [op env [_ jsform & args :as form] _ _]\n  (when-not (string? jsform)\n    (throw (error env \"Invalid js* form\")))\n  (if (some? args)\n    (analyze-js-star env jsform args form)\n    (let [code      (apply str (js-star-interp env jsform))\n          tag       (get-js-tag form)\n          form-meta (meta form)\n          js-op     (:js-op form-meta)\n          numeric   (:numeric form-meta)]\n      {:op :js\n       :env env\n       :form form\n       :code code\n       :tag tag\n       :js-op js-op\n       :numeric numeric})))\n\n;; TODO: analyzed analyzed? should take pass name as qualified keyword arg\n;; then compiler passes can mark/check individually - David\n\n(defn- unsorted-map? [x]\n  (and (map? x)\n       (not (sorted? x))))\n\n(defn analyzed\n  \"Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass.\"\n  [x]\n  (cond\n    (unsorted-map? x) (assoc x ::analyzed true)\n    :else (vary-meta x assoc ::analyzed true)))\n\n(defn analyzed?\n  \"Returns boolean if the form has already been marked as analyzed.\"\n  #?(:cljs {:tag boolean})\n  [x]\n  (boolean\n    (cond\n      (unsorted-map? x) (::analyzed x)\n      :else (::analyzed (meta x)))))\n\n(defn- all-values?\n  #?(:cljs {:tag boolean})\n  [exprs]\n  (every? #(or (nil? %) (symbol? %) (string? %) (number? %) (true? %) (false? %)) exprs))\n\n(defn- valid-arity?\n  #?(:cljs {:tag boolean})\n  [argc method-params]\n  (or (nil? method-params)  ; Assume valid if method-params unavailable\n      (boolean (some #{argc} (map count method-params)))))\n\n(defn- record-tag?\n  [tag]\n  (boolean (and (symbol? tag)\n                (some? (namespace tag))\n                (get-in @env/*compiler* [::namespaces (symbol (namespace tag)) :defs (symbol (name tag)) :record]))))\n\n(defn- record-basis\n  [tag]\n  (let [positional-factory (symbol (str \"->\" (name tag)))\n        fields             (first (get-in @env/*compiler* [::namespaces (symbol (namespace tag)) :defs positional-factory :method-params]))]\n    (into #{} fields)))\n\n(defn- record-with-field?\n  [tag field]\n  (and (record-tag? tag)\n       (contains? (record-basis tag) field)))\n\n(defn- invalid-arity? [argc method-params variadic max-fixed-arity]\n  (and (not (valid-arity? argc method-params))\n       (or (not variadic)\n           (and variadic (< argc max-fixed-arity)))))\n\n(defn parse-invoke*\n  [env [f & args :as form]]\n  (let [enve    (assoc env :context :expr)\n        fexpr   (analyze enve f)\n        argc    (count args)\n        fn-var? (or (-> fexpr :info :fn-var)\n                    (-> fexpr :info :js-fn-var))\n        kw?     (= 'cljs.core/Keyword (:tag fexpr))\n        cur-ns  (-> env :ns :name)\n        HO-invoke? (and (boolean *cljs-static-fns*)\n                        (not fn-var?)\n                        (not (js-tag? f))\n                        (not kw?)\n                        (not (analyzed? f)))\n        ;; function expressions, eg: ((deref m) x) or ((:x m) :a)\n        bind-f-expr? (and HO-invoke?\n                          (not (symbol? f)))\n        ;; Higher order invokes with (some) argument expressions. Bind the arguments\n        ;; to avoid exponential complexity that is created by the IFn arity check branch.\n        bind-args? (and HO-invoke?\n                        (not (all-values? args)))]\n    (when ^boolean fn-var?\n      (let [{^boolean variadic :variadic? :keys [max-fixed-arity method-params name ns macro]} (:info fexpr)]\n        ;; don't warn about invalid arity when when compiling a macros namespace\n        ;; that requires itself, as that code is not meant to be executed in the\n        ;; `$macros` ns - António Monteiro\n        (when (and #?(:cljs (not (and (gstring/endsWith (str cur-ns) \"$macros\")\n                                      (symbol-identical? cur-ns ns)\n                                      (true? macro))))\n                   (invalid-arity? argc method-params variadic max-fixed-arity))\n          (warning :fn-arity env {:name name :argc argc}))))\n    (when (and kw? (not (or (== 1 argc) (== 2 argc))))\n      (warning :fn-arity env {:name (first form) :argc argc}))\n    (let [deprecated? (-> fexpr :info :deprecated)\n          no-warn? (-> form meta :deprecation-nowarn)]\n      (when (and (boolean deprecated?)\n                 (not (boolean no-warn?)))\n        (warning :fn-deprecated env {:fexpr fexpr})))\n    (when (some? (-> fexpr :info :type))\n      (warning :invoke-ctor env {:fexpr fexpr}))\n    (if (or bind-args? bind-f-expr?)\n      (let [arg-syms (when bind-args? (take argc (repeatedly gensym)))\n            f-sym (when bind-f-expr? (gensym \"fexpr__\"))\n            bindings (cond-> []\n                       bind-args? (into (interleave arg-syms args))\n                       bind-f-expr? (conj f-sym (analyzed f)))\n            tag (:tag (meta form))]\n        (analyze env\n          `(let [~@bindings]\n             ~(with-meta\n               `(~(analyzed (if bind-f-expr? f-sym f))\n                 ~@(if bind-args? arg-syms args))\n               {:tag tag}))))\n      (let [ana-expr #(analyze enve %)\n            argexprs (mapv ana-expr args)]\n        (if (and (and (keyword? f)\n                      (nil? (namespace f)))\n                 (== 1 (count args))\n                 (record-with-field? (:tag (first argexprs)) (symbol (name f))))\n          (let [field-access-form (list* (symbol (str \".-\" (name f))) args)]\n            (no-warn (analyze env field-access-form)))\n          {:env      env :op :invoke :form form :fn fexpr :args argexprs\n           :children [:fn :args]})))))\n\n(defn parse-invoke\n  [env form]\n  (disallowing-recur (parse-invoke* env form)))\n\n(defn desugar-dotted-expr [{:keys [op] :as expr}]\n  (case op\n    (:var :local) (if (dotted-symbol? (symbol (name (:name expr))))\n                    (let [s      (name (:name expr))\n                          idx    (.lastIndexOf s \".\")\n                          _ (assert (not= (inc idx) (count s)))\n                          prefix (with-meta (symbol (namespace (:name expr)) (subs s 0 idx))\n                                            (meta (:form expr)))\n                          field (symbol (subs s (inc idx)))]\n                      (assert (not (:const-expr expr)))\n                      {:op :host-field\n                       :env (:env expr)\n                       :form (list '. prefix field)\n                       :target (desugar-dotted-expr (-> expr\n                                                        (assoc :name prefix\n                                                               :form prefix)\n                                                        (dissoc :tag)\n                                                        (assoc-in [:info :name] prefix)\n                                                        (assoc-in [:env :context] :expr)))\n                       :field field\n                       :tag (:tag expr)\n                       :children [:target]})\n                    expr)\n    ;:var\n    expr))\n\n\n(defn analyze-symbol\n  \"Finds the var associated with sym\"\n  [env sym]\n  (if ^boolean (:quoted? env)\n    (do\n      (register-constant! env sym)\n      (analyze-wrap-meta {:op :const :val sym :env env :form sym :tag 'cljs.core/Symbol}))\n    (let [{:keys [line column]} (meta sym)\n          env  (if-not (nil? line)\n                 (assoc env :line line)\n                 env)\n          env  (if-not (nil? column)\n                 (assoc env :column column)\n                 env)\n          ret  {:env env :form sym}\n          lcls (:locals env)]\n      (if-some [lb (handle-symbol-local sym (get lcls sym))]\n        (merge\n          (assoc ret :op :local :info lb)\n          ;; this is a temporary workaround for core.async see CLJS-3030 - David\n          (when (map? lb)\n            (select-keys lb [:name :local :arg-id :variadic? :init])))\n        (let [sym-meta (meta sym)\n              sym-ns (namespace sym)\n              cur-ns (str (-> env :ns :name))\n              ;; when compiling a macros namespace that requires itself, we need\n              ;; to resolve calls to `my-ns.core/foo` to `my-ns.core$macros/foo`\n              ;; to avoid undeclared variable warnings - António Monteiro\n              #?@(:cljs [sym (if (and sym-ns\n                                   (not= sym-ns \"cljs.core\")\n                                   (gstring/endsWith cur-ns \"$macros\")\n                                   (not (gstring/endsWith sym-ns \"$macros\"))\n                                   (= sym-ns (subs cur-ns 0 (- (count cur-ns) 7))))\n                               (symbol (str sym-ns \"$macros\") (name sym))\n                               sym)])\n              info     (if-not (contains? sym-meta ::analyzed)\n                         (resolve-existing-var env sym)\n                         (resolve-var env sym))]\n          (assert (:op info) (:op info))\n          (desugar-dotted-expr\n            (if-not (true? (:def-var env))\n              (merge\n                (assoc ret :info info)\n                (select-keys info [:op :name :ns :tag])\n                (when-let [const-expr (:const-expr info)]\n                  {:const-expr const-expr}))\n              (let [info (resolve-var env sym)]\n                (merge (assoc ret :op :var :info info)\n                       (select-keys info [:op :name :ns :tag]))))))))))\n\n(defn excluded?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :excludes sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :excludes sym))))\n\n(defn used?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :use-macros sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :use-macros sym))))\n\n(defn get-expander-ns [env ^String nstr]\n  ;; first check for clojure.* -> cljs.* cases\n  (let [res  (or (resolve-macro-ns-alias env nstr nil)\n                 (resolve-ns-alias env nstr nil))\n        nstr (if (some? res) (str res) nstr)]\n    (cond\n     #?@(:clj  [(= \"clojure.core\" nstr) (find-ns 'cljs.core)]\n         :cljs [(identical? \"clojure.core\" nstr) (find-macros-ns CLJS_CORE_MACROS_SYM)])\n     #?@(:clj  [(= \"clojure.repl\" nstr) (find-ns 'cljs.repl)]\n         :cljs [(identical? \"clojure.repl\" nstr) (find-macros-ns 'cljs.repl)])\n     #?@(:clj  [(.contains nstr \".\") (find-ns (symbol nstr))]\n         :cljs [(goog.string/contains nstr \".\") (find-macros-ns (symbol nstr))])\n     :else (some-> env :ns :require-macros (get (symbol nstr)) #?(:clj  find-ns\n                                                                  :cljs find-macros-ns)))))\n\n(defn get-expander* [sym env]\n  (when-not (or (some? (gets env :locals sym)) ; locals hide macros\n                (and (excluded? env sym) (not (used? env sym))))\n    (let [nstr (namespace sym)]\n      (cond\n        (some? nstr)\n        (let [ns (get-expander-ns env nstr)]\n          (when (some? ns)\n            (.findInternedVar ^clojure.lang.Namespace ns (symbol (name sym)))))\n\n        (some? (gets env :ns :rename-macros sym))\n        (let [qualified-symbol (gets env :ns :rename-macros sym)\n              nsym (symbol (namespace qualified-symbol))\n              sym  (symbol (name qualified-symbol))]\n          (.findInternedVar ^clojure.lang.Namespace\n            #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym))\n\n        :else\n        (let [nsym (gets env :ns :use-macros sym)]\n          (if (and (some? nsym) (symbol? nsym))\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym)\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns 'cljs.core) :cljs (find-macros-ns CLJS_CORE_MACROS_SYM)) sym)))))))\n\n(defn get-expander\n  \"Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander.\"\n  [sym env]\n  (let [mvar (get-expander* sym env)]\n    (when (and (some? mvar)\n            #?(:clj  (.isMacro ^clojure.lang.Var mvar)\n               :cljs ^boolean (.isMacro mvar)))\n      mvar)))\n\n#?(:cljs\n   (let [cached-var (delay (get (ns-interns* 'cljs.spec.alpha) 'macroexpand-check))]\n     (defn get-macroexpand-check-var []\n       (when (some? (find-ns-obj 'cljs.spec.alpha))\n         @cached-var))))\n\n(defn- var->sym [var]\n  #?(:clj  (symbol (str (.-ns ^clojure.lang.Var var)) (str (.-sym ^clojure.lang.Var var)))\n     :cljs (.-sym var)))\n\n(defn- do-macroexpand-check\n  [env form mac-var]\n  (when (not (-> @env/*compiler* :options :spec-skip-macros))\n    (let [mchk #?(:clj (some-> (find-ns 'clojure.spec.alpha)\n                       (ns-resolve 'macroexpand-check))\n                :cljs (get-macroexpand-check-var))]\n    (when (some? mchk)\n      (try\n        (mchk mac-var (next form))\n        (catch #?(:clj Throwable :cljs :default) e\n          (throw (ex-info nil (error-data env :macro-syntax-check (var->sym mac-var)) e))))))))\n\n#?(:cljs\n   (defn- check-macro-arity [mac-var form]\n     (let [mac-sym (.-sym mac-var)]\n       (when-let [{:keys [variadic? max-fixed-arity method-params]}\n                  (get-in @env/*compiler* [::namespaces (symbol (namespace mac-sym)) :defs (symbol (name mac-sym))])]\n         (let [argc   (count (rest form))\n               offset (if (= '&form (ffirst method-params)) 2 0)]\n           (when (invalid-arity? argc (map #(nthrest %1 offset) method-params)\n                   variadic? (when max-fixed-arity (- max-fixed-arity offset)))\n             (throw (js/Error. (error-message :fn-arity {:argc argc, :name mac-sym})))))))))\n\n(defn macroexpand-1*\n  [env form]\n  (let [op (first form)]\n    (if (contains? specials op)\n      (do\n        (when (= 'ns op)\n          (do-macroexpand-check env form (get-expander 'cljs.core/ns-special-form env)))\n        form)\n      ;else\n        (if-some [mac-var (when (symbol? op) (get-expander op env))]\n          (#?@(:clj [binding [*ns* (create-ns *cljs-ns*)]]\n               :cljs [do])\n            (do-macroexpand-check env form mac-var)\n            (let [form' (try\n                          #?(:cljs (check-macro-arity mac-var form))\n                          (apply @mac-var form env (rest form))\n                          #?(:clj (catch ArityException e\n                                    (throw (ArityException. (- (.actual e) 2) (.name e)))))\n                          (catch #?(:clj Throwable :cljs :default) e\n                            (throw (ex-info nil (error-data env :macroexpansion (var->sym mac-var)) e))))]\n              (if #?(:clj (seq? form') :cljs (cljs-seq? form'))\n                (let [sym' (first form')\n                      sym  (first form)]\n                  (if #?(:clj  (= sym' 'js*)\n                         :cljs (symbol-identical? sym' JS_STAR_SYM))\n                    (let [sym   (if (some? (namespace sym))\n                                  sym\n                                  (symbol \"cljs.core\" (str sym)))\n                          js-op {:js-op sym}\n                          numeric #?(:clj  (-> mac-var meta ::numeric)\n                                     :cljs (let [mac-var-ns   (symbol (namespace (.-sym mac-var)))\n                                                 mac-var-name (symbol (name (.-sym mac-var)))]\n                                             (get-in @env/*compiler*\n                                               [::namespaces mac-var-ns :defs mac-var-name :meta ::numeric])))\n                          js-op (if (true? numeric)\n                                  (assoc js-op :numeric true)\n                                  js-op)]\n                      (vary-meta form' merge js-op))\n                    form'))\n                form')))\n          (if (symbol? op)\n            (let [opname (str op)]\n              (cond\n                (identical? \\.\n                  #?(:clj  (first opname)\n                     :cljs (.charAt opname 0)))\n                (let [[target & args] (next form)]\n                  (with-meta (list* #?(:clj '. :cljs DOT_SYM) target (symbol (subs opname 1)) args)\n                    (meta form)))\n\n                (identical? \\.\n                  #?(:clj  (last opname)\n                     :cljs (.charAt opname (dec (. opname -length)))))\n                (with-meta\n                  (list* #?(:clj 'new :cljs NEW_SYM) (symbol (subs opname 0 (dec (count opname)))) (next form))\n                  (meta form))\n\n                :else form))\n            form)))))\n\n(defn macroexpand-1\n  \"Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once.\"\n  [env form]\n  (wrapping-errors env (macroexpand-1* env form)))\n\n(declare analyze-list)\n\n(defn analyze-seq* [op env form name opts]\n  (if (contains? specials op)\n    (parse op env form name opts)\n    (parse-invoke env form)))\n\n(defn analyze-seq*-wrap [op env form name opts]\n  (wrapping-errors env\n    (analyze-seq* op env form name opts)))\n\n(defn analyze-seq\n  ([env form name]\n   (analyze-seq env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (if ^boolean (:quoted? env)\n     (analyze-list env form)\n     (let [line (-> form meta :line)\n           line (if (nil? line)\n                  (:line env)\n                  line)\n           col  (-> form meta :column)\n           col  (if (nil? col)\n                  (:column env)\n                  col)\n           env  (assoc env :line line :column col)]\n       (let [op (first form)]\n         (when (nil? op)\n           (throw (error env \"Can't call nil\")))\n         (let [mform (macroexpand-1 env form)]\n           (if (identical? form mform)\n             (analyze-seq*-wrap op env form name opts)\n             (analyze env mform name opts))))))))\n\n(defn analyze-map\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        ks (disallowing-recur (mapv #(analyze expr-env %) (keys form)))\n        vs (disallowing-recur (mapv #(analyze expr-env %) (vals form)))]\n    (analyze-wrap-meta {:op :map :env env :form form\n                        :keys ks :vals vs\n                        :children [:keys :vals]\n                        :tag 'cljs.core/IMap})))\n\n;; :list is not used in the emitter any more, but analyze-list is called from analyze-const\n;; to hit the `register-constant!` cases for symbols and keywords.\n(defn analyze-list\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :list :env env :form form :items items :children [:items] :tag 'cljs.core/IList})))\n\n(defn analyze-vector\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :vector :env env :form form :items items :children [:items] :tag 'cljs.core/IVector})))\n\n(defn analyze-set\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :set :env env :form form :items items :children [:items] :tag 'cljs.core/ISet})))\n\n(defn analyze-js-value\n  [env ^JSValue form]\n  (let [val (.-val form)\n        expr-env (assoc env :context :expr)]\n    (if (map? val)\n      (let [keys (vec (keys val))\n            vals (disallowing-recur\n                   (mapv #(analyze expr-env %) (vals val)))]\n        {:op :js-object\n         :env env\n         :form form\n         :keys keys\n         :vals vals\n         :children [:vals]\n         :tag 'object})\n      (let [items (disallowing-recur\n                    (mapv #(analyze expr-env %) val))]\n        {:op :js-array\n         :env env\n         :form form\n         :items items\n         :children [:items]\n         :tag 'array}))))\n\n(defn record-ns+name [x]\n  (map symbol\n       #?(:clj\n          ((juxt (comp #(string/join \".\" %) butlast) last)\n           (string/split (.getName ^Class (type x)) #\"\\.\"))\n          :cljs\n          (string/split (pr-str (type x)) #\"/\"))))\n\n(defn analyze-record\n  [env x]\n  (let [;; register constansts\n        _items_   (disallowing-recur\n                    (analyze (assoc env :context :expr) (into {} x)))\n        [ns name] (record-ns+name x)]\n    {:op :const\n     :val x\n     :env env\n     :form x\n     :tag (symbol (str ns) (str name))}))\n\n(defn elide-reader-meta [m]\n  (dissoc m :file :line :column :end-column :end-line :source))\n\n(defn elide-analyzer-meta [m]\n  (dissoc m ::analyzed))\n\n(defn elide-irrelevant-meta [m]\n  (-> m elide-reader-meta elide-analyzer-meta))\n\n(defn analyze-wrap-meta [expr]\n  (let [form (:form expr)\n        m    (elide-irrelevant-meta (meta form))]\n    (if (some? (seq m))\n      (let [env (:env expr) ; take on expr's context ourselves\n            expr (assoc-in expr [:env :context] :expr) ; change expr to :expr\n            meta-expr (analyze-map (:env expr) m)]\n        {:op :with-meta :env env :form form\n         :meta meta-expr :expr expr :children [:meta :expr]})\n      expr)))\n\n(defn infer-type [env {:keys [tag] :as ast} _]\n  (if (or (nil? tag) (= 'function tag))\n    ;; infer-type won't get a chance to process :methods\n    ;; so treat :fn as a special case for now, could probably\n    ;; fix up to use :children to walk child nodes\n    (if (= :fn (:op ast))\n      (update ast :methods\n        (fn [ms] (into [] (map #(infer-type env % _)) ms)))\n      (if-some [tag (infer-tag env ast)]\n        (assoc ast :tag tag)\n        ast))\n    ast))\n\n(defn- repl-self-require? [env deps]\n  (and (:repl-env env) (some #{*cljs-ns*} deps)))\n\n#?(:clj\n   (defn ns-side-effects\n     [env {:keys [op] :as ast} opts]\n     (if (#{:ns :ns*} op)\n       (let [{:keys [name deps uses require-macros use-macros reload reloads]} ast]\n         (when (and *analyze-deps* (seq deps))\n           (analyze-deps\n             (if (repl-self-require? env deps) 'cljs.user name)\n             deps env (dissoc opts :macros-ns)))\n         (if *load-macros*\n           (do\n             (load-core)\n             (doseq [nsym (vals use-macros)]\n               (let [k (or (:use-macros reload)\n                         (get-in reloads [:use-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (doseq [nsym (vals require-macros)]\n               (let [k (or (:require-macros reload)\n                         (get-in reloads [:require-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (-> ast\n               (check-use-macros-inferring-missing env)\n               (check-rename-macros-inferring-missing env)))\n           (do\n             (check-uses\n               (when (and *analyze-deps* (seq uses))\n                 (missing-uses uses env))\n               env)\n             ast)))\n       ast)))\n\n;; A set of validators that can be used to do static type\n;; checking of runtime fns based on inferred argument types.\n(def invoke-arg-type-validators\n  (let [aget-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (rest %)))\n                        :warning-type :invalid-array-access}\n        aset-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (butlast (rest %))))\n                        :warning-type :invalid-array-access}]\n    {'cljs.core/checked-aget  aget-validator\n     'cljs.core/checked-aset  aset-validator\n     'cljs.core/checked-aget' aget-validator\n     'cljs.core/checked-aset' aset-validator}))\n\n(defn check-invoke-arg-types\n  [env {:keys [op] :as ast} opts]\n  (when (and (not (analyzed? ast))\n             #?(:clj  (= :invoke op)\n                :cljs (keyword-identical? :invoke op)))\n    (when-some [[name {:keys [valid? warning-type]}] (find invoke-arg-type-validators (-> ast :fn :info :name))]\n      (let [types (mapv :tag (:args ast))]\n        (when-not (valid? types)\n          (warning warning-type env\n            {:name  name\n             :types types})))))\n  (analyzed ast))\n\n#?(:clj\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (seq? form) (seq form)) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (map? form) (analyze-map env form)\n       (vector? form) (analyze-vector env form)\n       (set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) 'clj-nil\n                   (number? form) 'number\n                   (string? form) 'string\n                   (instance? Character form) 'string\n                   (true? form) 'boolean\n                   (false? form) 'boolean\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n#?(:cljs\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (cljs-seq? form) (some? (seq form))) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (cljs-map? form) (analyze-map env form)\n       (cljs-vector? form) (analyze-vector env form)\n       (cljs-set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? cljs.tagged-literals/JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) CLJ_NIL_SYM\n                   (number? form) NUMBER_SYM\n                   (string? form) STRING_SYM\n                   (true? form) BOOLEAN_SYM\n                   (false? form) BOOLEAN_SYM\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n(def default-passes\n  #?(:clj  [infer-type check-invoke-arg-types ns-side-effects]\n     :cljs [infer-type check-invoke-arg-types]))\n\n(defn analyze* [env form name opts]\n  (let [passes *passes*\n        passes (if (nil? passes)\n                 default-passes\n                 passes)\n        form   (if (instance? LazySeq form)\n                 (if (seq form) form ())\n                 form)\n        ast    (analyze-form env form name opts)]\n    (reduce (fn [ast pass] (pass env ast opts)) ast passes)))\n\n(defn analyze\n  \"Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.\"\n  ([env form] (analyze env form nil))\n  ([env form name]\n   (analyze env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (wrapping-errors env\n     (if (analyzed? form)\n       (no-warn (analyze* env form name opts))\n       (analyze* env form name opts)))))\n\n(defn add-consts\n  \"Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source.\"\n  [compiler-state constants-map]\n  (reduce-kv\n    (fn [compiler-state sym value]\n      (let [ns (symbol (namespace sym))]\n        (update-in compiler-state\n          [::namespaces ns :defs (symbol (name sym))] merge\n          {:const-expr\n           (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n             (analyze (empty-env) value))})))\n    compiler-state constants-map))\n\n#?(:clj\n   (defn- source-path\n     \"Returns a path suitable for providing to tools.reader as a 'filename'.\"\n     [x]\n     (cond\n       (instance? File x) (.getAbsolutePath ^File x)\n       :default (str x))))\n\n(defn resolve-symbol [sym]\n  (if (and (not (namespace sym))\n           (dotted-symbol? sym))\n    sym\n    (:name (binding [*private-var-access-nowarn* true]\n             (resolve-var (assoc @env/*compiler* :ns (get-namespace *cljs-ns*))\n               sym)))))\n\n#?(:clj\n   (defn forms-seq*\n     \"Seq of Clojure/ClojureScript forms from rdr, a java.io.Reader. Optionally\n     accepts a filename argument which will be used in any emitted errors.\"\n     ([^Reader rdr] (forms-seq* rdr nil))\n     ([^Reader rdr filename]\n      {:pre [(instance? Reader rdr)]}\n      (let [eof-sentinel (Object.)\n            opts (merge\n                   {:eof eof-sentinel}\n                   (if (and filename (= (util/ext filename) \"cljc\"))\n                     {:read-cond :allow :features #{:cljs}}))\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq_\n            (fn forms-seq_ []\n              (lazy-seq\n                (let [form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))\n                                     reader/resolve-symbol resolve-symbol]\n                             (reader/read opts pbr))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq_))))))]\n        (forms-seq_)))))\n\n#?(:clj\n   (defn forms-seq\n     \"DEPRECATED: Seq of Clojure/ClojureScript forms from [f], which can be anything\n     for which `clojure.java.io/reader` can produce a `java.io.Reader`. Optionally\n     accepts a [filename] argument, which the reader will use in any emitted errors.\"\n     ([f] (forms-seq f (source-path f)))\n     ([f filename] (forms-seq f filename false))\n     ([f filename return-reader?]\n      (let [rdr (io/reader f)\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq*\n            (fn forms-seq* []\n              (lazy-seq\n                (let [eof-sentinel (Object.)\n                      form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))]\n                             (reader/read pbr nil eof-sentinel))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq*))))))]\n        (if (true? return-reader?)\n          [(forms-seq*) rdr]\n          (forms-seq*))))))\n\n#?(:clj\n   (defn gen-user-ns\n     [src]\n     (if (sequential? src)\n       (symbol (str \"cljs.user.source$form$\" (util/content-sha (pr-str src) 7)))\n       (let [full-name (str src)\n             name (.substring full-name\n                    (inc (.lastIndexOf full-name \"/\"))\n                    (.lastIndexOf full-name \".\"))]\n         (symbol (str \"cljs.user.\" name (util/content-sha full-name 7)))))))\n\n#?(:clj\n   (defn ^:dynamic parse-ns\n     \"Helper for parsing only the essential namespace information from a\n      ClojureScript source file and returning a cljs.closure/IJavaScript compatible\n      map _not_ a namespace AST node.\n\n      By default does not load macros or perform any analysis of dependencies. If\n      opts parameter provided :analyze-deps and :load-macros keys their values will\n      be used for *analyze-deps* and *load-macros* bindings respectively. This\n      function does _not_ side-effect the ambient compilation environment unless\n      requested via opts where :restore is false.\"\n     ([src]\n      (parse-ns src nil\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([src opts] (parse-ns src nil opts))\n     ([src dest opts]\n      (ensure\n        (let [src (if (symbol? src)\n                    (util/ns->source src)\n                    src)\n              ijs\n              (binding [env/*compiler* (if (false? (:restore opts))\n                                         env/*compiler*\n                                         (atom @env/*compiler*))\n                        *cljs-ns* 'cljs.user\n                        *cljs-file* src\n                        *macro-infer*\n                        (or (when (contains? opts :macro-infer)\n                              (:macro-infer opts))\n                          false)\n                        *analyze-deps*\n                        (or (when (contains? opts :analyze-deps)\n                              (:analyze-deps opts))\n                          false)\n                        *load-macros*\n                        (or (when (contains? opts :load-macros)\n                              (:load-macros opts))\n                          false)]\n                (let [rdr (when-not (sequential? src) (io/reader src))]\n                  (try\n                    (loop [forms (if rdr\n                                   (forms-seq* rdr (source-path src))\n                                   src)\n                           ret (merge\n                                 {:file         dest\n                                  :source-file  (when rdr src)\n                                  :source-forms (when-not rdr src)\n                                  :macros-ns    (:macros-ns opts)\n                                  :requires     (cond-> #{'cljs.core}\n                                                  (get-in @env/*compiler* [:options :emit-constants])\n                                                  (conj constants-ns-sym))}\n                                 (when (and dest (.exists ^File dest))\n                                   {:lines (with-open [reader (io/reader dest)]\n                                             (-> reader line-seq count))}))]\n                      (if (seq forms)\n                        (let [env (empty-env)\n                              ast (no-warn (analyze env (first forms) nil opts))]\n                          (cond\n                            (= :ns (:op ast))\n                            (let [ns-name (:name ast)\n                                  ns-name (if (and (= 'cljs.core ns-name)\n                                                   (= \"cljc\" (util/ext src)))\n                                            'cljs.core$macros\n                                            ns-name)\n                                  deps (merge (:uses ast) (:requires ast))]\n                              (merge\n                                {:ns           (or ns-name 'cljs.user)\n                                 :provides     [ns-name]\n                                 :requires     (if (= 'cljs.core ns-name)\n                                                 (set (vals deps))\n                                                 (cond-> (conj (set (vals deps)) 'cljs.core)\n                                                   (get-in @env/*compiler* [:options :emit-constants])\n                                                   (conj constants-ns-sym)))\n                                 :file         dest\n                                 :source-file  (when rdr src)\n                                 :source-forms (when-not rdr src)\n                                 :ast          ast\n                                 :macros-ns    (or (:macros-ns opts)\n                                                   (= 'cljs.core$macros ns-name))}\n                                (when (and dest (.exists ^File dest))\n                                  {:lines (with-open [reader (io/reader dest)]\n                                            (-> reader line-seq count))})))\n\n                            (= :ns* (:op ast))\n                            (let [deps (merge (:uses ast) (:requires ast))]\n                              (recur (rest forms)\n                                (cond-> (update-in ret [:requires] into (set (vals deps)))\n                                  ;; we need to defer generating the user namespace\n                                  ;; until we actually need or it will break when\n                                  ;; `src` is a sequence of forms - António Monteiro\n                                  (not (:ns ret))\n                                  (assoc :ns (gen-user-ns src) :provides [(gen-user-ns src)]))))\n\n                            :else ret))\n                        ret))\n                    (finally\n                      (when rdr\n                        (.close ^Reader rdr))))))]\n          (cond-> ijs\n            (not (contains? ijs :ns))\n            (merge\n              {:ns (gen-user-ns src)\n               :provides [(gen-user-ns src)]})))))))\n\n#?(:clj\n   (defn- cache-analysis-ext\n     ([] (cache-analysis-ext (get-in @env/*compiler* [:options :cache-analysis-format] :transit)))\n     ([format]\n      (if (and (= format :transit) @transit) \"json\" \"edn\"))))\n\n#?(:clj\n   (defn build-affecting-options [opts]\n     (select-keys opts\n       [:static-fns :fn-invoke-direct :optimize-constants :elide-asserts :target\n        :cache-key :checked-arrays :language-out])))\n\n#?(:clj\n   (defn build-affecting-options-sha [path opts]\n     (let [m (assoc (build-affecting-options opts) :path path)]\n       (util/content-sha (pr-str m) 7))))\n\n#?(:clj\n   (defn ^File cache-base-path\n     ([path]\n      (cache-base-path path nil))\n     ([path opts]\n      (io/file (System/getProperty \"user.home\")\n        \".cljs\" \".aot_cache\" (util/clojurescript-version)\n        (build-affecting-options-sha path opts)))))\n\n#?(:clj\n   (defn cacheable-files\n     ([rsrc ext]\n      (cacheable-files rsrc ext nil))\n     ([rsrc ext opts]\n      (let [{:keys [ns]} (parse-ns rsrc)\n            path (cache-base-path (util/path rsrc) opts)\n            name (util/ns->relpath ns nil File/separatorChar)]\n        (into {}\n          (map\n            (fn [[k v]]\n              [k (io/file path\n                   (if (and (= (str \"cljs\" File/separatorChar \"core$macros\") name)\n                         (= :source k))\n                     (str \"cljs\" File/separatorChar \"core.cljc\")\n                     (str name v)))]))\n          {:source (str \".\" ext)\n           :output-file \".js\"\n           :source-map \".js.map\"\n           :analysis-cache-edn (str \".\" ext \".cache.edn\")\n           :analysis-cache-json (str \".\" ext \".cache.json\")})))))\n\n#?(:clj\n   (defn cache-file\n     \"Given a ClojureScript source file returns the read/write path to the analysis\n      cache file. Defaults to the read path which is usually also the write path.\"\n     ([src] (cache-file src \"out\"))\n     ([src output-dir] (cache-file src (parse-ns src) output-dir))\n     ([src ns-info output-dir]\n      (cache-file src ns-info output-dir :read nil))\n     ([src ns-info output-dir mode]\n      (cache-file src ns-info output-dir mode nil))\n     ([src ns-info output-dir mode opts]\n      {:pre [(map? ns-info)]}\n      (let [ext (cache-analysis-ext)]\n        (if-let [core-cache\n                 (and (= mode :read)\n                      (= (:ns ns-info) 'cljs.core)\n                      (io/resource (str \"cljs/core.cljs.cache.aot.\" ext)))]\n          core-cache\n          (let [aot-cache-file\n                (when (util/url? src)\n                  ((keyword (str \"analysis-cache-\" ext))\n                    (cacheable-files src (util/ext src) opts)))]\n            (if (and aot-cache-file (.exists ^File aot-cache-file))\n              aot-cache-file\n              (let [target-file (util/to-target-file output-dir ns-info\n                                  (util/ext (:source-file ns-info)))]\n                (io/file (str target-file \".cache.\" ext))))))))))\n\n#?(:clj\n   (defn requires-analysis?\n     \"Given a src, a resource, and output-dir, a compilation output directory\n      return true or false depending on whether src needs to be (re-)analyzed.\n      Can optionally pass cache, the analysis cache file.\"\n     ([src] (requires-analysis? src \"out\"))\n     ([src output-dir]\n      (let [cache (cache-file src output-dir)]\n        (requires-analysis? src cache output-dir nil)))\n     ([src cache output-dir]\n      (requires-analysis? src cache output-dir nil))\n     ([src cache output-dir opts]\n      (cond\n        (util/url? cache)\n        (let [path (.getPath ^URL cache)]\n          (if (or (.endsWith path \"cljs/core.cljs.cache.aot.edn\")\n                  (.endsWith path \"cljs/core.cljs.cache.aot.json\"))\n            false\n            (throw (Exception. (str \"Invalid anlaysis cache, must be file not URL \" cache)))))\n\n        (and (util/file? cache)\n             (not (.exists ^File cache)))\n        true\n\n        :else\n        (let [out-src   (util/to-target-file output-dir (parse-ns src))\n              cache-src (:output-file (cacheable-files src (util/ext src) opts))]\n          (if (and (not (.exists out-src))\n                   (not (.exists ^File cache-src)))\n            true\n            (or (not cache) (util/changed? src cache))))))))\n\n#?(:clj\n   (defn- get-spec-vars\n     []\n     (when-let [spec-ns (find-ns 'cljs.spec.alpha)]\n       (locking load-mutex\n         {:registry-ref (ns-resolve spec-ns 'registry-ref)\n          :speced-vars  (ns-resolve spec-ns '_speced_vars)})))\n   :cljs\n   (let [registry-ref (delay (get (ns-interns* 'cljs.spec.alpha$macros) 'registry-ref))\n         ;; Here, we look up the symbol '-speced-vars because ns-interns*\n         ;; is implemented by invoking demunge on the result of js-keys.\n         speced-vars  (delay (get (ns-interns* 'cljs.spec.alpha$macros) '-speced-vars))]\n     (defn- get-spec-vars []\n       (when (some? (find-ns-obj 'cljs.spec.alpha$macros))\n         {:registry-ref @registry-ref\n          :speced-vars  @speced-vars}))))\n\n(defn dump-specs\n  \"Dumps registered speced vars for a given namespace into the compiler\n  environment.\"\n  [ns]\n  (let [spec-vars (get-spec-vars)\n        ns-str    (str ns)]\n    (swap! env/*compiler* update-in [::namespaces ns]\n      merge\n      (when-let [registry-ref (:registry-ref spec-vars)]\n        {:cljs.spec/registry-ref\n         (into []\n           (filter (fn [[k _]] (= ns-str (namespace k))))\n           @@registry-ref)})\n      (when-let [speced-vars (:speced-vars spec-vars)]\n        {:cljs.spec/speced-vars\n         (into []\n           (filter\n             (fn [v]\n               (or (= ns-str (namespace v))\n                   (= ns (-> v meta :fdef-ns)))))\n           @@speced-vars)}))))\n\n(defn register-specs\n  \"Registers speced vars found in a namespace analysis cache.\"\n  [cached-ns]\n  #?(:clj (try\n            (locking load-mutex\n              (clojure.core/require 'cljs.spec.alpha))\n            (catch Throwable t)))\n  (let [{:keys [registry-ref speced-vars]} (get-spec-vars)]\n    (when-let [registry (seq (:cljs.spec/registry-ref cached-ns))]\n      (when registry-ref\n        (swap! @registry-ref into registry)))\n    (when-let [vars (seq (:cljs.spec/speced-vars cached-ns))]\n      (when speced-vars\n        (swap! @speced-vars into vars)))))\n\n#?(:clj\n   (defn write-analysis-cache\n     ([ns cache-file]\n       (write-analysis-cache ns cache-file nil))\n     ([ns ^File cache-file src]\n      (util/mkdirs cache-file)\n      (dump-specs ns)\n      (let [ext (util/ext cache-file)\n            analysis (dissoc (get-in @env/*compiler* [::namespaces ns]) :macros)]\n        (case ext\n          \"edn\"  (spit cache-file\n                   (str \";; Analyzed by ClojureScript \" (util/clojurescript-version) \"\\n\"\n                     (pr-str analysis)))\n          \"json\" (when-let [{:keys [writer write]} @transit]\n                   (with-open [os (io/output-stream cache-file)]\n                     (write (writer os :json transit-write-opts) analysis)))))\n      (when src\n        (.setLastModified ^File cache-file (util/last-modified src))))))\n\n#?(:clj\n   (defn read-analysis-cache\n     ([cache-file src]\n      (read-analysis-cache cache-file src nil))\n     ([^File cache-file src opts]\n       ;; we want want to keep dependency analysis information\n       ;; don't revert the environment - David\n      (let [{:keys [ns]} (parse-ns src\n                           (merge opts\n                             {:restore false\n                              :analyze-deps true\n                              :load-macros true}))\n            ext          (util/ext cache-file)\n            cached-ns    (case ext\n                           \"edn\"  (edn/read-string (slurp cache-file))\n                           \"json\" (let [{:keys [reader read]} @transit]\n                                    (with-open [is (io/input-stream cache-file)]\n                                      (read (reader is :json transit-read-opts)))))]\n        (when (or *verbose* (:verbose opts))\n          (util/debug-prn \"Reading analysis cache for\" (str src)))\n        (swap! env/*compiler*\n          (fn [cenv]\n            (do\n              (register-specs cached-ns)\n              (doseq [x (get-in cached-ns [::constants :order])]\n                (register-constant! x))\n              (-> cenv\n                (assoc-in [::namespaces ns] cached-ns)))))))))\n\n(defn analyze-form-seq\n  ([forms]\n   (analyze-form-seq forms\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([forms opts]\n   (analyze-form-seq forms opts false))\n  ([forms opts return-last?]\n   (let [env (assoc (empty-env) :build-options opts)]\n     (binding [*file-defs* nil\n               #?@(:clj [*unchecked-if* false\n                         *unchecked-arrays* false])\n               *cljs-ns* 'cljs.user\n               *cljs-file* nil\n               reader/*alias-map* (or reader/*alias-map* {})]\n       (loop [ns nil forms forms last-ast nil]\n         (if (some? forms)\n           (let [form (first forms)\n                 env  (assoc env :ns (get-namespace *cljs-ns*))\n                 ast  (analyze env form nil opts)]\n             (if (= (:op ast) :ns)\n               (recur (:name ast) (next forms) ast)\n               (recur ns (next forms) ast)))\n           (if return-last?\n             last-ast\n             ns)))))))\n\n(defn ensure-defs\n  \"Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)\"\n  [ns]\n  (swap! env/*compiler* update-in [::namespaces ns :defs] #(or % {})))\n\n#?(:clj\n   (defn analyze-file\n     \"Given a java.io.File, java.net.URL or a string identifying a resource on the\n      classpath attempt to analyze it.\n\n      This function side-effects the ambient compilation environment\n      `cljs.env/*compiler*` to aggregate analysis information. opts argument is\n      compiler options, if :cache-analysis true will cache analysis to\n      \\\":output-dir/some/ns/foo.cljs.cache.edn\\\". This function does not return a\n      meaningful value.\"\n     ([f]\n      (analyze-file f\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([f opts]\n      (analyze-file f false opts))\n     ([f skip-cache opts]\n      (binding [*file-defs*        (atom #{})\n                *unchecked-if*     false\n                *unchecked-arrays* false\n                *cljs-warnings*    *cljs-warnings*]\n        (let [output-dir (util/output-directory opts)\n              res        (cond\n                           (instance? File f) f\n                           (instance? URL f) f\n                           (re-find #\"^file://\" f) (URL. f)\n                           :else (io/resource f))]\n          (assert res (str \"Can't find \" f \" in classpath\"))\n          (ensure\n            (let [ns-info (parse-ns res)\n                  path    (if (instance? File res)\n                            (.getPath ^File res)\n                            (.getPath ^URL res))\n                  cache   (when (:cache-analysis opts)\n                            (cache-file res ns-info output-dir :read opts))]\n              (when-not (get-in @env/*compiler* [::namespaces (:ns ns-info) :defs])\n                (if (or skip-cache (not cache) (requires-analysis? res cache output-dir opts))\n                  (binding [*cljs-ns* 'cljs.user\n                            *cljs-file* path\n                            reader/*alias-map* (or reader/*alias-map* {})]\n                    (when (or *verbose* (:verbose opts))\n                      (util/debug-prn \"Analyzing\" (str res)))\n                    (let [env (assoc (empty-env) :build-options opts)\n                          ns  (with-open [rdr (io/reader res)]\n                                (loop [ns nil forms (seq (forms-seq* rdr (util/path res)))]\n                                  (if forms\n                                    (let [form (first forms)\n                                          env (assoc env :ns (get-namespace *cljs-ns*))\n                                          ast (analyze env form nil opts)]\n                                      (cond\n                                        (= (:op ast) :ns)\n                                        (recur (:name ast) (next forms))\n\n                                        (and (nil? ns) (= (:op ast) :ns*))\n                                        (recur (gen-user-ns res) (next forms))\n\n                                        :else\n                                        (recur ns (next forms))))\n                                    ns)))]\n                      (ensure-defs ns)\n                      (when (and cache (true? (:cache-analysis opts)))\n                        (write-analysis-cache ns cache res))))\n                  (try\n                    (read-analysis-cache cache res opts)\n                    (catch Throwable e\n                      (analyze-file f true opts))))))))))))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.analyzer/*cljs-ns*","cljs.analyzer/*cljs-file*","cljs.analyzer/*checked-arrays*","cljs.analyzer/*check-alias-dupes*","cljs.analyzer/*cljs-static-fns*","cljs.analyzer/*fn-invoke-direct*","cljs.analyzer/*cljs-macros-path*","cljs.analyzer/*cljs-macros-is-classpath*","cljs.analyzer/*cljs-dep-set*","cljs.core/with-meta","cljs.analyzer/*analyze-deps*","cljs.analyzer/*load-tests*","cljs.analyzer/*load-macros*","cljs.analyzer/*reload-macros*","cljs.analyzer/*macro-infer*","cljs.analyzer/*passes*","cljs.analyzer/*file-defs*","cljs.analyzer/*private-var-access-nowarn*","cljs.analyzer/constants-ns-sym","cljs.analyzer/*verbose*","cljs.analyzer/-cljs-macros-loaded","cljs.core.atom","cljs.analyzer/*cljs-warnings*","cljs.analyzer/unchecked-arrays?","cljs.core/*unchecked-arrays*","cljs.analyzer/compiler-options","cljs.core/deref","cljs.core.get","cljs.env/*compiler*","cljs.analyzer/get-externs","cljs.analyzer/checked-arrays","cljs.core/not","cljs.analyzer/js-reserved","cljs.analyzer/es5-allowed","cljs.analyzer/SENTINEL","var_args","G__60352","cljs.analyzer/gets","js/Error","m","k0","k1","k2","k3","cljs.analyzer/CLJ_NIL_SYM","cljs.analyzer/NUMBER_SYM","cljs.analyzer/STRING_SYM","cljs.analyzer/BOOLEAN_SYM","cljs.analyzer/JS_STAR_SYM","cljs.analyzer/DOT_SYM","cljs.analyzer/NEW_SYM","cljs.analyzer/CLJS_CORE_SYM","cljs.analyzer/CLJS_CORE_MACROS_SYM","cljs.analyzer/IGNORE_SYM","cljs.analyzer/ANY_SYM","cljs.analyzer/cljs-seq?","x","cljs.core/PROTOCOL_SENTINEL","cljs.analyzer/cljs-map?","cljs.analyzer/cljs-vector?","cljs.analyzer/cljs-set?","cljs.analyzer/munge-path","ss","cljs.core/munge","G__60384","cljs.analyzer/ns->relpath","ns","cljs.analyzer.ns__GT_relpath","ext","clojure.string/replace","cljs.core/name","G__60400","cljs.analyzer/topo-sort","get-deps","cljs.analyzer.topo_sort","cljs.core/sorted-map","cljs.core/memoize","depth","state","memo-get-deps","deps","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core.fnil","cljs.core/into","seq__60410","cljs.core/seq","chunk__60411","count__60412","i__60413","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","dep","seq__60428","chunk__60429","count__60430","i__60431","vec__60438","cljs.core.nth","vec__60441","<depth","_","cljs.core.subseq","cljs.core/<","clojure.set/difference","cljs.core._EQ_","cljs.core.distinct","cljs.core.apply","cljs.core/concat","cljs.core/vals","cljs.analyzer/ast?","cljs.core/map?","cljs.core/contains?","js/cljs","js/cljs.analyzer","js/cljs.analyzer.error-message","method-table__4619__auto__","prefer-table__4620__auto__","method-cache__4621__auto__","cached-hierarchy__4622__auto__","hierarchy__4623__auto__","fexpr__60449","cljs.core/MultiFn","cljs.core.symbol","cljs.analyzer/error-message","warning-type","info","clojure.string.join","p__60465","map__60473","cljs.core/hash-map","ns-sym","js-provide","clojure.string/includes?","p__60486","map__60491","or__4126__auto__","overwritten-protocol","cljs.core.pr_str","p__60659","map__60664","name","types","G__60667","cljs.core/every?","cljs.core/rest","cljs.core/butlast","p__60712","map__60713","munged","clojure.string.split","p1__60709#","cljs.core.map","p__60722","map__60725","var","p__60727","map__60728","p__60730","map__60731","protocol","method","p__60733","map__60734","module-type","file","p__60737","map__60738","preprocess","p__60742","map__60743","p__60745","map__60746","warn-type","form","type","property","G__60748","cljs.core/Keyword","cljs.analyzer/default-warning-handler","env","extra","s","*print-fn*-orig-val__60749","*print-fn*-temp-val__60750","cljs.core/*print-fn*","cljs.core/*print-err-fn*","cljs.core.println","G__60751","G__60752","cljs.analyzer/message","cljs.analyzer/*cljs-warning-handlers*","cljs.analyzer/repeat-char","c","n","ret","cljs.analyzer/hex-format","pad","hex","len","cljs.analyzer/gen-constant-id","value","prefix","cljs.core/Symbol","cljs.core/type","cljs.core.subs","p1__60753#","G__60760","cljs.analyzer/register-constant!","val","cljs.analyzer.register_constant_BANG_","cenv","G__60761","cljs.core.update_in","table","cljs.core.assoc","p__60766","map__60767","seen","order","constants","G__60769","cljs.core.conj","cljs.analyzer/default-namespaces","cljs.analyzer/namespaces","js/cljs.analyzer.t_cljs$analyzer60770","cljs.analyzer/t_cljs$analyzer60770","_60772","meta60771","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","cljs.analyzer/->t_cljs$analyzer60770","G__60774","cljs.analyzer/get-namespace","key","cljs.analyzer.get_namespace","temp__5737__auto__","cljs.core.get_in","cljs.analyzer/get-line","cljs.core/meta","cljs.analyzer/get-col","G__60776","cljs.analyzer/intern-macros","cljs.analyzer.intern_macros","reload","cljs.analyzer.gets","cljs.core/assoc-in","cljs.core/ns-interns*","cljs.core.filter","p__60781","vec__60782","v","p__60777","vec__60778","k","vm","cljs.core.into","cljs.analyzer/empty-env","val__60254__auto__","cljs.env.default_compiler_env","p1__60785#","cljs.core/PersistentVector","p__60786","map__60787","cljs.analyzer/source-info->error-data","line","column","G__60790","cljs.analyzer/source-info","cljs.analyzer.source_info","G__60791","cljs.core.merge","cljs.core/select-keys","cljs.analyzer/warning","seq__60792","chunk__60793","count__60794","i__60795","handler","cljs.analyzer/accumulating-warning-handler","warn-acc","cljs.core/conj","cljs.analyzer/replay-accumulated-warnings","p1__60796#","cljs.core/run!","G__60798","cljs.analyzer/error-data","phase","cljs.analyzer.error_data","symbol","cljs.analyzer/compile-syntax-error","msg","cljs.core.ex_info","G__60800","cljs.analyzer/error","cljs.analyzer.error","cause","cljs.analyzer/analysis-error?","ex","cljs.core/ex-data","cljs.analyzer/has-error-data?","cljs.analyzer/implicit-nses","cljs.analyzer/implicit-import?","suffix","cljs.analyzer/confirm-var-exist-warning","G__60802","G__60803","cljs.analyzer/get-expander","cljs.analyzer/loaded-js-ns?","cljs.analyzer/internal-js-module-exists?","js-module-index","module","cljs.core.mapcat","p__60804","vec__60805","cljs.analyzer/js-module-exists?*","cljs.analyzer/js-module-exists?","cljs.analyzer/node-module-dep?","e60808","cljs.core/*target*","cljs.core/boolean","js/require.resolve","cljs.analyzer/dep-has-global-exports?","global-exports","G__60810","cljs.analyzer/confirm-var-exists","warn","cljs.analyzer.confirm_var_exists","missing-fn","sufstr","suffix-str","cljs.analyzer/confirm-var-exists-throw","G__60812","cljs.analyzer/resolve-ns-alias","cljs.analyzer.resolve_ns_alias","not-found","sym","G__60814","cljs.analyzer/resolve-macro-ns-alias","cljs.analyzer.resolve_macro_ns_alias","cljs.analyzer/confirm-ns","cljs.core.not_EQ_","cljs.analyzer/core-name?","mac","cljs.analyzer/public-name?","var-ast","cljs.analyzer/js-tag?","cljs.core/namespace","cljs.analyzer/normalize-js-tag","cljs.core/symbol","cljs.core/vec","cljs.analyzer/->type-set","t","cljs.analyzer/canonicalize-type","cljs.core/empty?","res","cljs.core.disj","G__60821","cljs.analyzer/add-types","args-arr__4757__auto__","len__4736__auto__","i__4737__auto__","argseq__4758__auto__","cljs.core/IndexedSeq","seq60818","G__60819","G__60820","self__4723__auto__","t1","t2","clojure.set.union","ts","cljs.analyzer.add_types","cljs.analyzer/alias->type","G__60823","cljs.analyzer/has-extern?*","pre","externs","me","cljs.core/find","tag","cljs.analyzer.has_extern_QMARK__STAR_","top","vec__60824","x'","externs'","xmeta","G__60828","cljs.analyzer/has-extern?","cljs.analyzer.has_extern_QMARK_","cljs.core/last","clojure.string/starts-with?","G__60830","cljs.analyzer/js-tag","cljs.analyzer.js_tag","tag-type","vec__60831","p","G__60834","cljs.analyzer/dotted-symbol?","goog.string/contains","cljs.analyzer/munge-node-lib","cljs.analyzer/munge-global-export","cljs.analyzer/resolve-alias","and__4115__auto__","fexpr__60838","cljs.analyzer/ns->module-type","js/cljs.analyzer.resolve*","fexpr__60839","cljs.analyzer/resolve*","full-ns","current-ns","cljs.analyzer/extern-pre","cljs.core/merge","G__60841","cljs.analyzer/node-like?","cljs.analyzer.node_like_QMARK_","opts","cljs.analyzer/private-var-access-exceptions","sym-ast","sym-name","cljs.analyzer/required?","cljs.core/set","cljs.analyzer/invokeable-ns?","cljs.analyzer/resolve-invokeable-ns","G__60842","cljs.analyzer/handle-symbol-local","lb","G__60845","cljs.analyzer/resolve-var","cljs.analyzer.resolve_var","confirm","default?","locals","symn","shadowed-by-local","ret-tag","G__60846","G__60847","G__60848","idx","temp__5733__auto__","resolved","p1__60843#","cljs.core.update","suf","qualified-symbol","G__60849","G__60850","G__60851","cljs.analyzer/resolve-existing-var","cljs.analyzer/confirm-bindings","names","seq__60852","chunk__60853","count__60854","i__60855","ev","cljs.analyzer/resolve-macro-var","namespaces","clojure.string/ends-with?","cljs.analyzer/specials","cljs.analyzer/*recur-frames*","cljs.analyzer/*loop-lets*","cljs.analyzer/*allow-redef*","cljs.analyzer/*allow-ns*","cljs.analyzer/analyze-keyword","cljs.analyzer/get-tag","e","cljs.analyzer/find-matching-method","f","params","methods","cljs.core/some","cljs.analyzer/type?","proto","cljs.analyzer/NOT_NATIVE","cljs.analyzer/BOOLEAN_OR_SEQ","p__60856","map__60857","cljs.analyzer/unwrap-quote","op","expr","cljs.core/keyword-identical?","cljs.analyzer/infer-if","map__60859","then-tag","G__60861","G__60862","cljs.analyzer/infer-tag","else-tag","G__60863","G__60864","cljs.core/symbol-identical?","p__60865","map__60866","cljs.analyzer/infer-invoke","args","map__60868","G__60870","G__60871","G__60872","G__60873","G__60874","G__60875","G__60876","G__60877","G__60878","G__60879","G__60880","G__60881","G__60882","G__60883","init","G__60884","G__60885","js/cljs.analyzer.parse","fexpr__60886","cljs.analyzer/parse","rest","G__60890","cljs.analyzer/var-meta","cljs.analyzer.var_meta","expr-env","ks","user-meta","uks","cljs.core/keys","cljs.core/zipmap","p1__60887#","cljs.core/List","cljs.core.sequence","cljs.core.concat","p1__60888#","arglists","arglists'","cljs.core/second","cljs.core.doall","cljs.analyzer/analyze","cljs.analyzer/var-ast","*private-var-access-nowarn*-orig-val__60891","*private-var-access-nowarn*-temp-val__60892","cljs.core.dissoc","temp__5739__auto__","var-ns","G__60893","G__60894","p__60895","vec__60896","cljs.analyzer/predicate->tag","cljs.analyzer/simple-predicate-induced-tag","test","cljs.core/list?","cljs.core/symbol?","analyzed-fn","*cljs-warnings*-orig-val__60899","*cljs-warnings*-temp-val__60900","cljs.core.repeat","G__60901","G__60902","G__60903","cljs.analyzer/type-check-induced-tag","*cljs-warnings*-orig-val__60904","*cljs-warnings*-temp-val__60905","G__60906","G__60907","G__60909","fexpr__60908","analyzed-type","*cljs-warnings*-orig-val__60910","*cljs-warnings*-temp-val__60911","G__60912","G__60913","cljs.analyzer/truth-induced-tag","analyzed-symbol","*cljs-warnings*-orig-val__60914","*cljs-warnings*-temp-val__60915","G__60916","G__60917","cljs.core/set?","cljs.analyzer/set-test-induced-tags","vec__60918","local","G__60921","p__60922","vec__60923","then","else","test-expr","*recur-frames*-orig-val__60926","*recur-frames*-temp-val__60927","cljs.core/cons","G__60928","G__60929","then-expr","*allow-redef*-orig-val__60930","*allow-redef*-temp-val__60931","G__60932","G__60933","else-expr","*allow-redef*-orig-val__60934","*allow-redef*-temp-val__60935","cljs.core/*unchecked-if*","p__60938","vec__60939","tests","thens","default","cljs.core/vector?","*recur-frames*-orig-val__60942","*recur-frames*-temp-val__60943","p1__60936#","cljs.core.mapv","p1__60937#","nodes","cljs.core.some_fn","cljs.core/number?","cljs.core/string?","cljs.core/char?","p__60944","vec__60945","throw-form","throw-expr","*recur-frames*-orig-val__60948","*recur-frames*-temp-val__60949","G__60950","G__60951","p__60956","vec__60957","seq__60958","first__60959","body","map__60960","catchenv","p1__60952#","catch?","p1__60953#","cljs.core.every_pred","cljs.core/seq?","p1__60954#","finally?","p1__60955#","cblocks","dblock","fblock","parser","vec__60965","seq__60966","first__60967","forms*","parser*","G__60968","finally","*recur-frames*-orig-val__60970","*recur-frames*-temp-val__60971","G__60972","G__60973","cljs.core.gensym","vec__60974","seq__60975","first__60976","cb","cblock","p__60977","vec__60978","seq__60979","first__60980","catch","*recur-frames*-orig-val__60981","*recur-frames*-temp-val__60982","G__60983","G__60984","try","*recur-frames*-orig-val__60985","*recur-frames*-temp-val__60986","G__60987","G__60988","cljs.analyzer/valid-proto","cljs.analyzer/elide-env","ast","cljs.analyzer/replace-env-pass","new-env","cljs.analyzer/ast-children","g","p__60989","map__60990","cljs.analyzer/constant-value?","fexpr__60993","fexpr__60996","p__60997","map__60998","cljs.analyzer/const-expr->constant-value","G__61000","G__61001","cljs.analyzer/earmuffed?","cljs.analyzer/core-ns?","pfn","doc","const?","sym-meta","dynamic","ns-name","clash-ns","sym-ns","conj-to-set","var-name","init-expr","*recur-frames*-orig-val__61003","*recur-frames*-temp-val__61004","*allow-ns*-orig-val__61005","*allow-ns*-temp-val__61006","G__61007","G__61008","G__61009","fn-var?","export-as","export-val","G__61010","const-expr","*passes*-orig-val__61011","*passes*-temp-val__61012","G__61013","G__61014","protocol-symbol","p1__61002#","top-fn-meta","G__61015","G__61016","goog-type","G__61017","G__61018","cljs.analyzer/analyze-fn-method-param","p__61019","p__61020","vec__61021","vec__61024","arg-id","nmeta","shadow","param","cljs.analyzer/analyze-fn-method-body","recur-frames","*recur-frames*-orig-val__61027","*recur-frames*-temp-val__61028","cljs.analyzer/analyze-fn-method","analyze-body?","vec__61029","param-names","variadic","cljs.core.remove","step","step-init","cljs.core.reduce","cljs.core.map_indexed","cljs.core/vector","params'","fixed-arity","recur-frame","body-env","body-form","recurs","cljs.analyzer/fn-name-var","fn-scope","name-var","cljs.analyzer/analyze-fn-methods-pass2*","menv","meths","p1__61032#","cljs.analyzer/analyze-fn-methods-pass2","p__61034","vec__61035","seq__61036","first__61037","vec__61038","named-fn?","form-meta","proto-impl","proto-inline","G__61041","p1__61033#","*allow-ns*-orig-val__61042","*allow-ns*-temp-val__61043","mfa","cljs.core.transduce","cljs.core/max","cljs.core/assoc","*allow-ns*-orig-val__61044","*allow-ns*-temp-val__61045","cljs.core.vary_meta","cljs.core/dissoc","js-doc","children","inferred-ret-tag","inferred-tags","cljs.core.partial","cljs.core/=","variadic-methods","cljs.core.comp","cljs.core.take","variadic-params","param-counts","cljs.analyzer/analyze-wrap-meta","p__61046","vec__61047","seq__61048","first__61049","bindings","exprs","cljs.core/even?","vec__61050","vec__61053","n->fexpr","cljs.core.juxt","cljs.core.partition","context","meth-env","bes","p__61056","vec__61057","map__61060","fexpr","*cljs-warnings*-orig-val__61062","*cljs-warnings*-temp-val__61063","G__61064","G__61065","be","G__61066","p__61067","p__61068","vec__61069","map__61072","G__61074","G__61075","be'","G__61076","G__61077","cljs.analyzer/analyze-do-statements*","p1__61078#","G__61079","G__61080","cljs.analyzer/analyze-do-statements","*recur-frames*-orig-val__61081","*recur-frames*-temp-val__61082","p__61083","vec__61084","seq__61085","first__61086","statements","G__61087","G__61088","ret-env","G__61089","G__61090","cljs.analyzer/analyze-let-binding-init","loop-lets","*loop-lets*-orig-val__61091","*loop-lets*-temp-val__61092","cljs.analyzer/get-let-tag","cljs.analyzer/analyze-let-bindings*","encl-env","vec__61097","col","p1__61093#","cljs.analyzer/analyze-let-bindings","*recur-frames*-orig-val__61100","*recur-frames*-temp-val__61101","cljs.analyzer/analyze-let-body*","G__61102","G__61103","cljs.analyzer/analyze-let-body","*recur-frames*-orig-val__61104","*loop-lets*-orig-val__61105","*recur-frames*-temp-val__61106","*loop-lets*-temp-val__61107","p__61108","vec__61109","seq__61110","first__61111","cljs.analyzer/analyze-let","is-loop","widened-tags","vec__61112","p__61115","vec__61116","widened-tag","G__61119","*cljs-warning-handlers*-orig-val__61120","*cljs-warning-handlers*-temp-val__61121","nil->any","cljs.core/identity","p__61123","vec__61124","seq__61125","first__61126","frame","add-implicit-target-object?","G__61127","*recur-frames*-orig-val__61128","*recur-frames*-temp-val__61129","p1__61122#","G__61130","G__61131","cljs.core/reset!","tags","cljs.analyzer/analyze-const","map__61132","G__61133","G__61134","p__61136","vec__61137","p__61141","vec__61142","seq__61143","first__61144","ctor","*recur-frames*-orig-val__61145","*recur-frames*-temp-val__61146","enve","ctorexpr","ctor-var","G__61148","fexpr__61147","record-args","argexprs","p1__61140#","known-num-fields","argc","fexpr__61150","p__61151","vec__61152","target","alt","vec__61155","*recur-frames*-orig-val__61158","*recur-frames*-temp-val__61159","*private-var-access-nowarn*-orig-val__61160","*private-var-access-nowarn*-temp-val__61161","texpr","G__61162","cljs.analyzer/analyze-symbol","*cljs-warnings*-orig-val__61163","*cljs-warnings*-temp-val__61164","cljs.analyzer/analyze-seq","vexpr","G__61165","meta","fexpr__61167","cljs.analyzer/foreign-dep?","js-index","vec__61168","map__61171","foreign","G__61175","cljs.analyzer/analyze-deps","lib","cljs.analyzer.analyze_deps","compiler","*cljs-dep-set*-orig-val__61176","*cljs-dep-set*-temp-val__61177","p1__61173#","cljs.core/str","cljs.core.interpose","seq__61178","chunk__61179","count__61180","i__61181","dep-name","cljs.analyzer/missing-use?","js-lib","cljs.analyzer/missing-rename?","cljs.analyzer/missing-use-macro?","the-ns","cljs.core/find-macros-ns","cljs.analyzer/missing-rename-macro?","cljs.analyzer/missing-uses","uses","p__61182","vec__61183","cljs.analyzer/missing-renames","renames","p__61186","vec__61187","qualified-sym","cljs.analyzer/missing-use-macros","use-macros","p__61190","vec__61191","cljs.analyzer/inferred-use-macros","p__61194","vec__61195","cljs.analyzer/inferred-rename-macros","rename-macros","p__61198","vec__61199","cljs.analyzer/check-uses","seq__61202","chunk__61203","count__61204","i__61205","vec__61212","vec__61215","G__61219","cljs.analyzer/check-use-macros","cljs.analyzer.check_use_macros","missing-uses","seq__61220","chunk__61221","count__61222","i__61223","vec__61230","vec__61233","p__61239","map__61240","cljs.analyzer/check-use-macros-inferring-missing","p1__61236#","maybe-macros","remove-missing-uses","ast'","p1__61237#","p1__61238#","p__61245","map__61246","cljs.analyzer/check-rename-macros-inferring-missing","p1__61242#","missing-renames","missing-rename-macros","remove-missing-renames","p1__61243#","p1__61244#","cljs.analyzer/parse-ns-error-msg","spec","cljs.analyzer/basic-validate-ns-spec","macros?","cljs.core/sequential?","cljs.core/odd?","fs","cljs.core/frequencies","cljs.analyzer/parse-ns-excludes","p__61249","vec__61250","seq__61251","first__61252","filters","valid-kws","xs","err","kw","refs","p1__61248#","cljs.core/nnext","cljs.core.merge_with","p__61254","vec__61255","seq__61256","first__61257","cljs.analyzer/use->require","only?","p1__61253#","cljs.analyzer/parse-require-spec","aliases","vec__61258","seq__61259","first__61260","vec__61261","map__61264","vec__61265","js-module-provides","js-module-name","alias","referred","renamed","referred-without-renamed","rk","uk","renk","alias-type","lib'","fexpr__61269","cljs.core.interleave","p__61270","vec__61271","original","cljs.analyzer/parse-import-spec","import-map","p1__61274#","seq__61275","chunk__61276","count__61277","i__61278","vec__61285","vec__61288","cljs.analyzer/macro-autoload-ns?","map__61291","require-macros","cljs.analyzer/clj-ns->cljs-ns","segs","cljs.analyzer/canonicalize-specs","specs","quoted-spec-or-kw","canonicalize","cljs.analyzer/canonicalize-import-specs","cljs.analyzer/desugar-ns-specs","map__61294","p1__61293#","require","indexed","p__61295","vec__61296","seq__61297","first__61298","sugar-keys","remove-from-spec","pred","vec__61300","l","r","cljs.core/split-with","cljs.core/complement","cljs.core.drop","replace-refer-macros","reload-spec?","fexpr__61303","to-macro-specs","remove-sugar","require-specs","vec__61304","cljs.analyzer/find-def-clash","segments","to-check","cljs.core.reductions","seq__61307","chunk__61308","count__61309","i__61310","vec__61317","vec__61320","cljs.analyzer/macro-ns-name","name-str","goog.string/endsWith","p__61325","vec__61326","seq__61327","first__61328","G__61329","segment","map__61330","map__61331","vec__61332","docstring","mdocstr","metadata","excludes","core-renames","p__61336","vec__61337","spec-parsers","valid-forms","reloads","requires","imports","p__61340","vec__61341","seq__61342","first__61343","libs","libspec","fexpr__61344","fexpr__61345","cljs.core/disj","p1__61323#","p1__61324#","cljs.core/merge-with","p__61346","vec__61347","spec-map","p__61351","vec__61352","G__61355","ns-info","G__61356","fexpr__61357","fexpr__61358","fexpr__61359","fexpr__61360","cljs.analyzer/check-duplicate-aliases","old","new","seq__61361","chunk__61362","count__61363","i__61364","old-aliases","new-aliases","p__61373","vec__61374","p__61377","vec__61378","entry","p__61384","vec__61385","quoted-specs","not-quoted","cljs.core/keyword?","p1__61381#","map__61388","map__61389","p__61391","vec__61392","p__61395","vec__61396","seq__61397","first__61398","p1__61382#","p1__61383#","p__61399","vec__61400","require-info","ns-info'","merge-keys","G__61404","fexpr__61405","fexpr__61406","fexpr__61407","fexpr__61408","p__61409","vec__61410","cljs.analyzer/parse-type","tsym","fields","pmasks","fld","protocols","G__61413","G__61414","p1__61415#","cljs.analyzer/property-symbol?","cljs.core/re-matches","p__61416","vec__61417","cljs.analyzer/classify-dot-form","member","js/cljs.analyzer.build-dot-form","fexpr__61421","p1__61420#","cljs.analyzer/build-dot-form","p__61422","vec__61423","prop","p__61426","vec__61427","cljs.analyzer/build-method-call","meth","p__61430","vec__61431","p__61434","vec__61435","p__61438","vec__61439","meth-expr","dot-form","cljs.core.list_STAR_","cljs.analyzer/analyze-dot","field","member+","map__61443","dot-action","targetexpr","target-tag","fexpr__61446","vec__61447","pre'","G__61450","G__61451","p1__61442#","p__61452","vec__61453","seq__61454","first__61455","vec__61456","seq__61457","first__61458","*recur-frames*-orig-val__61459","*recur-frames*-temp-val__61460","cljs.analyzer/get-js-tag","cljs.analyzer/js-star-interp","end","inner","cljs.core/LazySeq","G__61461","G__61462","cljs.analyzer/js-star-seg","G__61463","cljs.analyzer/NUMERIC_SET","cljs.analyzer/numeric-type?","cljs.analyzer/array-types","cljs.analyzer/array-type?","cljs.analyzer/analyze-js-star-args","js-op","p__61464","vec__61465","arg","cljs.analyzer/analyze-js-star*","jsform","numeric","validate","valid-types?","p1__61468#","op-match?","p1__61469#","cljs.analyzer/analyze-js-star","*recur-frames*-orig-val__61470","*recur-frames*-temp-val__61471","p__61472","vec__61473","seq__61474","first__61475","code","cljs.analyzer/unsorted-map?","cljs.core/sorted?","cljs.analyzer/analyzed","cljs.analyzer/analyzed?","cljs.analyzer/all-values?","p1__61476#","cljs.analyzer/valid-arity?","method-params","cljs.analyzer/record-tag?","cljs.analyzer/record-basis","positional-factory","cljs.analyzer/record-with-field?","cljs.analyzer/invalid-arity?","max-fixed-arity","p__61478","vec__61479","seq__61480","first__61481","cljs.analyzer/parse-invoke*","kw?","cur-ns","HO-invoke?","bind-f-expr?","bind-args?","map__61482","macro","deprecated?","no-warn?","arg-syms","cljs.core.repeatedly","cljs.core/gensym","f-sym","G__61484","G__61485","G__61486","p1__61477#","ana-expr","field-access-form","*cljs-warnings*-orig-val__61487","*cljs-warnings*-temp-val__61488","cljs.analyzer/parse-invoke","*recur-frames*-orig-val__61489","*recur-frames*-temp-val__61490","p__61491","map__61492","cljs.analyzer/desugar-dotted-expr","G__61494","G__61495","G__61496","map__61497","lcls","cljs.analyzer/excluded?","cljs.analyzer/used?","cljs.analyzer/get-expander-ns","nstr","G__61499","cljs.analyzer/get-expander*","nsym","mvar","cached-var","cljs.core/Delay","cljs.analyzer/get-macroexpand-check-var","cljs.core/find-ns-obj","cljs.analyzer/var->sym","cljs.analyzer/do-macroexpand-check","mac-var","mchk","e61500","G__61501","G__61502","cljs.analyzer/check-macro-arity","mac-sym","map__61504","variadic?","offset","cljs.core/ffirst","p1__61503#","cljs.core/nthrest","cljs.analyzer/macroexpand-1*","form'","e61509","sym'","mac-var-ns","mac-var-name","opname","vec__61506","seq__61507","first__61508","cljs.analyzer/macroexpand-1","err__60306__auto__","e61510","cljs.analyzer/analyze-seq*","cljs.analyzer/analyze-seq*-wrap","e61511","G__61513","cljs.analyzer.analyze_seq","cljs.analyzer/analyze-list","mform","cljs.analyzer/analyze-map","*recur-frames*-orig-val__61516","*recur-frames*-temp-val__61517","p1__61514#","vs","*recur-frames*-orig-val__61518","*recur-frames*-temp-val__61519","p1__61515#","G__61520","items","*recur-frames*-orig-val__61522","*recur-frames*-temp-val__61523","p1__61521#","G__61524","cljs.analyzer/analyze-vector","*recur-frames*-orig-val__61526","*recur-frames*-temp-val__61527","p1__61525#","G__61528","cljs.analyzer/analyze-set","*recur-frames*-orig-val__61530","*recur-frames*-temp-val__61531","p1__61529#","G__61532","cljs.analyzer/analyze-js-value","keys","vals","*recur-frames*-orig-val__61535","*recur-frames*-temp-val__61536","p1__61533#","*recur-frames*-orig-val__61537","*recur-frames*-temp-val__61538","p1__61534#","cljs.analyzer/record-ns+name","cljs.analyzer/analyze-record","vec__61540","_items_","*recur-frames*-orig-val__61543","*recur-frames*-temp-val__61544","G__61545","G__61546","cljs.analyzer/elide-reader-meta","cljs.analyzer/elide-analyzer-meta","cljs.analyzer/elide-irrelevant-meta","meta-expr","p__61548","map__61549","cljs.analyzer/infer-type","ms","p1__61547#","cljs.analyzer/repl-self-require?","cljs.analyzer/invoke-arg-type-validators","p1__61551#","p1__61552#","aget-validator","aset-validator","p__61553","map__61554","cljs.analyzer/check-invoke-arg-types","vec__61556","map__61559","valid?","cljs.analyzer/analyze-form","cljs.core/record?","cljs.tagged-literals/JSValue","G__61561","cljs.analyzer/default-passes","cljs.analyzer/analyze*","passes","pass","G__61563","cljs.analyzer.analyze","e61564","*cljs-warnings*-orig-val__61565","*cljs-warnings*-temp-val__61566","cljs.analyzer/add-consts","compiler-state","constants-map","cljs.core/reduce-kv","*passes*-orig-val__61567","*passes*-temp-val__61568","cljs.analyzer/resolve-symbol","*private-var-access-nowarn*-orig-val__61569","*private-var-access-nowarn*-temp-val__61570","registry-ref","speced-vars","cljs.analyzer/get-spec-vars","cljs.analyzer/dump-specs","spec-vars","ns-str","p__61571","vec__61572","cljs.analyzer/register-specs","cached-ns","map__61575","registry","vars","G__61578","cljs.analyzer/analyze-form-seq","forms","cljs.analyzer.analyze_form_seq","return-last?","*file-defs*-orig-val__61579","*cljs-ns*-orig-val__61580","*cljs-file*-orig-val__61581","*alias-map*-orig-val__61582","*file-defs*-temp-val__61583","*cljs-ns*-temp-val__61584","*cljs-file*-temp-val__61585","*alias-map*-temp-val__61586","cljs.tools.reader/*alias-map*","last-ast","cljs.analyzer/ensure-defs","p1__61587#"]],"~:used-vars",["^U",["~$cljs.analyzer/NUMERIC_SET","~$cljs.core/mapcat","~$cljs.analyzer/analyze-map","~$cljs.analyzer/confirm-var-exists","~$clojure.string/join","~$cljs.analyzer/missing-uses","~$cljs.core/symbol-identical?","~$cljs.analyzer/analyze-record","~$cljs.analyzer/missing-use?","~$cljs.analyzer/constants-ns-sym","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/comp","~$cljs.analyzer/analyze-let-bindings","~$js/cljs.analyzer","~$cljs.core/rest","~$cljs.analyzer/resolve-var","~$cljs.analyzer/resolve-alias","~$cljs.core/even?","~$cljs.analyzer/var->sym","~$cljs.analyzer/macroexpand-1*","~$cljs.analyzer/*cljs-dep-set*","~$cljs.core/str","~$cljs.core/char?","~$cljs.analyzer/analyzed?","~$cljs.analyzer/record-basis","~$cljs.analyzer/invalid-arity?","~$cljs.core/MultiFn","~$cljs.core/sequential?","~$cljs.analyzer/dotted-symbol?","~$cljs.core/odd?","~$clojure.string/starts-with?","~$cljs.analyzer/analyze-deps","~$cljs.analyzer/get-namespace","~$cljs.analyzer/*cljs-macros-is-classpath*","~$cljs.analyzer/elide-reader-meta","~$cljs.analyzer/handle-symbol-local","~$cljs.analyzer/resolve-invokeable-ns","~$cljs.analyzer/infer-type","~$cljs.analyzer/t_cljs$analyzer60770","~$cljs.analyzer/clj-ns->cljs-ns","~$cljs.analyzer/*fn-invoke-direct*","~$cljs.analyzer/js-tag?","~$cljs.analyzer/parse-invoke","~$cljs.analyzer/error-data","~$cljs.core/nthrest","~$cljs.analyzer/has-extern?*","~$cljs.analyzer/analyze-let","~$cljs.analyzer/constant-value?","~$clojure.string/split","~$cljs.analyzer/ensure-defs","~$cljs.core/vector?","~$cljs.analyzer/ast?","~$cljs.analyzer/foreign-dep?","~$js/cljs.analyzer.build-dot-form","~$cljs.core/filter","~$cljs.analyzer/checked-arrays","~$cljs.core/=","~$cljs.analyzer/hex-format","~$cljs.analyzer/analyze-js-star-args","~$cljs.analyzer/NEW_SYM","~$cljs.analyzer/es5-allowed","~$cljs.core/re-matches","~$cljs.analyzer/used?","~$cljs.analyzer/property-symbol?","~$cljs.core/doall","~$cljs.core/-write","~$cljs.analyzer/analyze","~$cljs.analyzer/analyze-fn-method","~$cljs.analyzer/source-info->error-data","~$cljs.analyzer/JS_STAR_SYM","~$cljs.analyzer/js-star-seg","~$cljs.analyzer/dep-has-global-exports?","~$cljs.analyzer/type?","~$js/cljs.analyzer.resolve*","~$cljs.analyzer/missing-use-macros","~$cljs.analyzer/register-specs","~$cljs.env/default-compiler-env","~$cljs.analyzer/-cljs-macros-loaded","~$cljs.core/count","~$cljs.analyzer/find-matching-method","~$cljs.core/deref","~$cljs.core/hash-map","~$cljs.analyzer/*cljs-warning-handlers*","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.analyzer/var-meta","~$cljs.analyzer/replay-accumulated-warnings","~$cljs.analyzer/desugar-ns-specs","~$cljs.core/apply","~$cljs.analyzer/analyze-seq*-wrap","~$cljs.analyzer/analyze-js-value","~$cljs.analyzer/topo-sort","~$cljs.analyzer/classify-dot-form","~$cljs.core/Keyword","~$cljs.analyzer/record-with-field?","~$goog.string/contains","~$cljs.analyzer/SENTINEL","~$cljs.core/last","~$cljs.analyzer/namespaces","~$cljs.analyzer/DOT_SYM","~$cljs.core/mapv","~$cljs.analyzer/*checked-arrays*","~$cljs.analyzer/valid-proto","~$cljs.analyzer/compile-syntax-error","~$cljs.core/not=","~$cljs.analyzer/ns->relpath","~$cljs.analyzer/js-reserved","~$cljs.core/ns-interns*","~$cljs.core/distinct","~$cljs.core/string?","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$cljs.analyzer/check-use-macros","~$cljs.core/LazySeq","~$cljs.core/chunk-rest","~$cljs.core/atom","~$cljs.analyzer/basic-validate-ns-spec","~$cljs.analyzer/parse-type","~$cljs.analyzer/has-error-data?","~$cljs.core/concat","~$cljs.analyzer/all-values?","~$cljs.analyzer/desugar-dotted-expr","~$cljs.analyzer/check-rename-macros-inferring-missing","~$cljs.analyzer/infer-invoke","~$cljs.core/pr-str","~$cljs.analyzer/array-type?","~$cljs.analyzer/get-line","~$cljs.analyzer/excluded?","~$cljs.analyzer/array-types","~$cljs.analyzer/*check-alias-dupes*","~$clojure.string/ends-with?","~$cljs.analyzer/add-types","~$cljs.analyzer/node-like?","~$cljs.analyzer/resolve-existing-var","~$cljs.analyzer/required?","~$cljs.analyzer/analyze-fn-method-body","~$cljs.analyzer/parse-invoke*","~$cljs.analyzer/IGNORE_SYM","~$clojure.string/includes?","~$cljs.core/set","~$cljs.analyzer/truth-induced-tag","~$cljs.analyzer/ast-children","~$cljs.analyzer/analyze-symbol","~$cljs.analyzer/analyze-seq*","~$cljs.analyzer/analyze-keyword","~$cljs.analyzer/predicate->tag","~$cljs.analyzer/elide-analyzer-meta","~$cljs.analyzer/*loop-lets*","~$cljs.core/empty?","~$cljs.analyzer/munge-global-export","~$cljs.core/memoize","~$cljs.analyzer/js-tag","~$cljs.core/fnil","~$cljs.core/merge-with","~$cljs.analyzer/get-expander","~$cljs.analyzer/->type-set","~$cljs.env/*compiler*","~$cljs.analyzer/analyze-let-body","~$cljs.analyzer/->t_cljs$analyzer60770","~$cljs.analyzer/check-use-macros-inferring-missing","~$cljs.analyzer/*load-tests*","~$cljs.analyzer/canonicalize-type","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/map?","~$cljs.analyzer/extern-pre","~$cljs.core/reset!","~$cljs.analyzer/get-col","~$js/cljs.analyzer.error-message","~$cljs.core/conj","~$cljs.analyzer/gets","~$cljs.analyzer/*cljs-warnings*","~$cljs.analyzer/alias->type","~$cljs.core/vary-meta","~$cljs.analyzer/error-message","~$cljs.core/zipmap","~$cljs.analyzer/analyze-const","~$cljs.core/update","~$js/require.resolve","~$cljs.analyzer/simple-predicate-induced-tag","~$cljs.core/run!","~$cljs.core/with-meta","~$cljs.core/namespace","~$cljs.analyzer/missing-rename?","~$cljs.analyzer/*allow-redef*","~$js/cljs","~$cljs.core/map","~$cljs.analyzer/*reload-macros*","~$cljs.analyzer/macro-ns-name","~$cljs.analyzer/parse-import-spec","~$cljs.analyzer/NOT_NATIVE","~$cljs.analyzer/dump-specs","~$cljs.analyzer/inferred-use-macros","~$cljs.analyzer/NUMBER_SYM","~$cljs.analyzer/compiler-options","~$cljs.analyzer/use->require","~$cljs.analyzer/CLJS_CORE_SYM","~$cljs.analyzer/earmuffed?","~$cljs.analyzer/public-name?","~$cljs.analyzer/*macro-infer*","~$cljs.core/PersistentVector","~$cljs.analyzer/analyze-js-star*","~$cljs.analyzer/default-warning-handler","~$cljs.analyzer/intern-macros","~$cljs.analyzer/const-expr->constant-value","~$cljs.analyzer/BOOLEAN_OR_SEQ","~$cljs.analyzer/parse-ns-error-msg","~$cljs.core/get-in","~$cljs.core/List","~$cljs.analyzer/CLJ_NIL_SYM","~$cljs.analyzer/record-ns+name","~$cljs.core/vals","~$cljs.core/swap!","~$js/cljs.analyzer.parse","~$cljs.core/-add-method","~$cljs.analyzer/missing-renames","~$cljs.analyzer/implicit-nses","~$cljs.core/number?","~$cljs.analyzer/check-macro-arity","~$cljs.analyzer/normalize-js-tag","~$cljs.core/get","~$cljs.analyzer/unchecked-arrays?","~$cljs.analyzer/repeat-char","~$cljs.analyzer/analyze-js-star","~$cljs.analyzer/cljs-map?","~$cljs.analyzer/analyze-do-statements*","~$cljs.analyzer/analyze-let-bindings*","~$cljs.analyzer/register-constant!","~$cljs.analyzer/do-macroexpand-check","~$cljs.analyzer/valid-arity?","~$cljs.core/partition","~$cljs.analyzer/core-name?","~$cljs.analyzer/*recur-frames*","~$cljs.analyzer/STRING_SYM","~$cljs.analyzer/*load-macros*","~$cljs.analyzer/resolve-macro-ns-alias","~$cljs.analyzer/get-let-tag","~$cljs.analyzer/macroexpand-1","~$cljs.analyzer/analyze-fn-methods-pass2*","~$clojure.set/difference","~$cljs.analyzer/empty-env","~$cljs.analyzer/analyze-let-body*","~$cljs.core/symbol","~$cljs.analyzer/canonicalize-import-specs","~$cljs.analyzer/loaded-js-ns?","~$cljs.analyzer/analyze-vector","~$cljs.analyzer/unwrap-quote","~$cljs.analyzer/resolve-ns-alias","~$cljs.analyzer/inferred-rename-macros","~$cljs.core/*unchecked-arrays*","~$cljs.core/record?","~$cljs.analyzer/gen-constant-id","~$cljs.analyzer/missing-use-macro?","~$cljs.core/nnext","~$cljs.analyzer/analyzed","~$cljs.analyzer/macro-autoload-ns?","~$cljs.analyzer/default-passes","~$cljs.analyzer/get-tag","~$cljs.analyzer/resolve*","~$cljs.analyzer/BOOLEAN_SYM","~$cljs.analyzer/confirm-var-exist-warning","~$cljs.core/set?","~$cljs.analyzer/cljs-set?","~$cljs.core/sorted?","~$cljs.analyzer/type-check-induced-tag","~$cljs.core/ex-info","~$cljs.core/meta","~$cljs.analyzer/analyze-do-statements","~$cljs.core/list?","~$cljs.core/second","~$cljs.core/find-ns-obj","~$cljs.analyzer/*allow-ns*","~$cljs.analyzer/private-var-access-exceptions","~$cljs.analyzer/get-expander*","~$cljs.analyzer/*cljs-static-fns*","~$cljs.analyzer/analyze-seq","~$cljs.core/println","~$clojure.string/replace","~$cljs.analyzer/find-def-clash","~$cljs.core/interleave","~$cljs.analyzer/resolve-macro-var","~$cljs.analyzer/munge-node-lib","~$cljs.core/*target*","~$cljs.analyzer/fn-name-var","~$cljs.core/next","~$cljs.core/vec","~$cljs.analyzer/internal-js-module-exists?","~$cljs.core/sorted-map","~$cljs.analyzer/munge-path","~$cljs.core/select-keys","~$cljs.analyzer/ns->module-type","~$cljs.analyzer/get-macroexpand-check-var","~$cljs.analyzer/analyze-set","~$cljs.analyzer/build-method-call","~$cljs.analyzer/analyze-fn-method-param","~$cljs.analyzer/has-extern?","~$cljs.core/*print-fn*","~$cljs.analyzer/js-module-exists?","~$cljs.analyzer/confirm-var-exists-throw","~$cljs.analyzer/missing-rename-macro?","~$cljs.analyzer/numeric-type?","~$cljs.analyzer/repl-self-require?","~$cljs.analyzer/elide-env","~$cljs.core/not","~$cljs.analyzer/confirm-bindings","~$cljs.analyzer/var-ast","~$cljs.analyzer/analyze-wrap-meta","~$cljs.core/disj","~$cljs.core/cons","~$cljs.analyzer/node-module-dep?","~$cljs.core/assoc","~$cljs.analyzer/get-js-tag","~$cljs.analyzer/cljs-seq?","~$cljs.analyzer/get-spec-vars","~$cljs.core/interpose","~$clojure.set/union","~$cljs.analyzer/parse","~$cljs.core/assoc-in","~$cljs.core/Symbol","~$cljs.core/symbol?","~$cljs.analyzer/warning","~$cljs.analyzer/implicit-import?","~$cljs.analyzer/get-externs","~$cljs.tools.reader/*alias-map*","~$cljs.analyzer/check-uses","~$cljs.analyzer/set-test-induced-tags","~$cljs.tagged-literals/JSValue","~$cljs.analyzer/*passes*","~$cljs.analyzer/invoke-arg-type-validators","~$cljs.core/ex-data","~$cljs.analyzer/get-expander-ns","~$cljs.core/reduce-kv","~$cljs.analyzer/*file-defs*","~$cljs.analyzer/*private-var-access-nowarn*","~$cljs.analyzer/*cljs-file*","~$cljs.core/repeat","~$cljs.analyzer/*verbose*","~$cljs.analyzer/message","~$cljs.analyzer/confirm-ns","~$cljs.core/*unchecked-if*","~$cljs.core/munge","~$cljs.core/some-fn","~$cljs.analyzer/default-namespaces","~$cljs.analyzer/accumulating-warning-handler","~$cljs.analyzer/canonicalize-specs","~$cljs.analyzer/source-info","~$cljs.analyzer/analyze-form","~$cljs.core/first","~$cljs.core/butlast","~$cljs.core/seq?","~$cljs.analyzer/analyze-form-seq","~$cljs.analyzer/js-module-exists?*","~$cljs.analyzer/resolve-symbol","~$cljs.analyzer/record-tag?","~$cljs.analyzer/invokeable-ns?","~$cljs.analyzer/add-consts","~$cljs.analyzer/error","~$cljs.analyzer/core-ns?","~$cljs.analyzer/*cljs-macros-path*","~$js/cljs.analyzer.t_cljs$analyzer60770","~$cljs.analyzer/ANY_SYM","~$cljs.analyzer/cljs-vector?","~$cljs.core/name","~$cljs.analyzer/analyze-dot","~$cljs.core/subs","~$cljs.core/merge","~$cljs.analyzer/parse-require-spec","~$cljs.core/every?","~$cljs.analyzer/*cljs-ns*","~$cljs.core/update-in","~$cljs.analyzer/*analyze-deps*","~$cljs.analyzer/replace-env-pass","~$cljs.analyzer/analysis-error?","~$js/Error","~$cljs.core/list*","~$cljs.core/find-macros-ns","~$cljs.core/boolean","~$cljs.analyzer/js-star-interp","~$cljs.analyzer/build-dot-form","~$cljs.core/type","~$cljs.analyzer/analyze-list","~$cljs.analyzer/analyze*","~$cljs.analyzer/parse-ns-excludes","~$cljs.analyzer/elide-irrelevant-meta","~$cljs.core/some","~$cljs.analyzer/analyze-fn-methods-pass2","~$cljs.analyzer/specials","~$cljs.analyzer/unsorted-map?","~$cljs.analyzer/CLJS_CORE_MACROS_SYM","~$cljs.analyzer/check-invoke-arg-types","~$cljs.analyzer/check-duplicate-aliases","~$goog.string/endsWith","~$cljs.analyzer/infer-tag","~$cljs.core/chunked-seq?","~$cljs.analyzer/analyze-let-binding-init","~$cljs.analyzer/infer-if"]]],"~:cache-keys",["~#cmap",[["^1T","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^1;","~$goog.dom.HtmlElement"]]],["^1T","cljs/tools/reader/impl/utils.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:","^1A","^16"]]],["^1T","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","~$goog.array","~$goog.asserts"]]],["^1T","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","cljs/env.cljc"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:"]]],["^1T","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;;","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1T","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;<","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^;?"]]],["^1T","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;<"]]],["^1T","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","cljs/tools/reader/edn.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:","~$cljs.tools.reader.impl.errors","^1<","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","^17","^16","~$goog.string.StringBuffer"]]],["^1T","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","cljs/tools/reader/impl/inspect.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:"]]],["^1T","cljs/tools/reader.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:","^1<","^;G","^;H","^;F","^;;","^16","^;I"]]],["^1T","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;<"]]],"~:SHADOW-TIMESTAMP",[1598571556000,1598571556000,1598571537000],["^1T","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;<","~$goog.reflect"]]],["^1T","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;<","~$goog.html.trustedtypes","^;B","^;C","^;D","^;E"]]],["^1T","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;;","^;<","~$goog.html.SafeUrl","^;D","^;E","^;?"]]],["^1T","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;<","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^;M","^;A","~$goog.html.uncheckedconversions","^;D","^;?"]]],["^1T","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1T","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;;","^;<","~$goog.dom.TagName","~$goog.dom.tags","^;Q","^;R","~$goog.html.SafeStyleSheet","^;M","^;A","^;L","^;B","^;C","~$goog.labs.userAgent.browser","^;>","^;D","^;E","^;?"]]],["^1T","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;>"]]],["^1T","cljs/reader.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:","^;>","^17","~$cljs.tools.reader.edn","^;I"]]],["^1T","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1T","cljs/tagged_literals.cljc"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:","^1B"]]],["^1T","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;;","^;<","^16","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1T","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",[]]],["^1T","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;;","^;>"]]],["^1T","cljs/tools/reader/impl/errors.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:","^1<","^1A","~$cljs.tools.reader.impl.inspect"]]],["^1T","clojure/string.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:","^16","^;I"]]],["^1T","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","~$goog.dom.safe","^;S","^;D","^;?"]]],["^1T","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;?"]]],["^1T","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","cljs/tools/reader/reader_types.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:","^;G","^16","^;I"]]],["^1T","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;;","^;<","^;O","~$goog.math"]]],["^1T","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;<","^;P","^;Q","^;R","^;X","^;M","^;A","^;D","^;?"]]],["^1T","cljs/tools/reader/impl/commons.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:","^;F","^1<","^;G"]]],["^1T","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;"]]],["^1T","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","~$goog.math.Long","~$goog.math.Integer","^16","^;>","^;;","~$goog.Uri","^;I"]]],["^1T","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;<","^;L","^;D","^;E"]]],["^1T","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;;","^;<","^;R","^;>","^;D","^;E","^;?"]]],["^1T","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;K"]]],["^1T","clojure/set.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:"]]],["^1T","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;;","^;<","^16"]]],["^1T","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^;<","^;E"]]],["^1T","cljs/analyzer.cljc"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^;6",["^ ","^;7",null,"^;8",["^U",[]],"^;9",["^1;","^1:","^16","^1A","^14","^1=","^19","^17","^1<","^1B"]]]]],"~:clj-info",["^ ","jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env/macros.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596724258000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/reader.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/defaults.clj",1596725445000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer/macros.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1598571537000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/analyzer.cljc","^7",9,"^8",5,"^9",9,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",["^ ","^K","^L","^M","^L","^N","^L","^O","^L","^P","^L","^Q","^L","^R","^S"],"^T",["^U",["^R","^V","^W","^X"]],"~:shadow/js-access-properties",["^U",["resolve"]],"^Y","^Z","^11",null,"^12",["^ ","^13","^14","^15","^16","^17","^17","^16","^16","^18","^19","^1:","^1:","^1;","^1;","^1<","^1<","^1=","^1=","^14","^14","^1>","^1<","^19","^19","^1?","^1=","^1@","^1A","^1A","^1A","^1B","^1B","^1C","^1B","^1D","^17"],"^1E",["^U",["^1F","^1G"]],"~:shadow/js-access-global",["^U",["require","Error"]],"^1H",null,"~:defs",["^ ","~$type?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1394,"^8",7,"^9",1394,"^:",12,"~:arglists",["^1J",["~$quote",["^1J",[["^1?","~$t"]]]]],"~:tag","~$boolean"],"^Y","^3P","^6","cljs/analyzer.cljc","^:",12,"~:method-params",["^1J",[["^1?","~$t"]]],"~:protocol-impl",null,"~:arglists-meta",["^1J",[null,null]],"^8",1,"~:variadic?",false,"^7",1394,"~:ret-tag","^=7","^9",1394,"~:max-fixed-arity",2,"^=6","^=7","~:fn-var",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$t"]]]]]],"~$invalid-arity?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3659,"^8",8,"^9",3659,"^:",22,"~:private",true,"^=4",["^1J",["^=5",["^1J",[["~$argc","~$method-params","~$variadic","~$max-fixed-arity"]]]]]],"^=@",true,"^Y","^2M","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^=A","^=B","^=C","^=D"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3659,"^=<",["^U",[null,"^=7"]],"^9",3659,"^==",4,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=A","^=B","^=C","^=D"]]]]]],"~$record-basis",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3648,"^8",8,"^9",3648,"^:",20,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["~$tag"]]]]]],"^=@",true,"^Y","^2L","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["^=F"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3648,"^=<",["^U",[null,"~$clj","~$any"]],"^9",3648,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=F"]]]]]],"~$get-namespace",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",613,"^8",7,"^9",613,"^:",20,"^=4",["^1J",["^=5",["^1J",[["~$key"],["~$cenv","^=J"]]]]],"~:top-fn",["^ ","^=;",false,"~:fixed-arity",2,"^==",2,"^=8",[["^=J"],["^=K","^=J"]],"^=4",["^1J",[["^=J"],["^=K","^=J"]]],"^=:",["^1J",[null,null]]]],"^Y","^2T","^6","cljs/analyzer.cljc","^:",20,"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^=J"],["^=K","^=J"]],"^=4",["^1J",[["^=J"],["^=K","^=J"]]],"^=:",["^1J",[null,null]]],"^=8",[["^=J"],["^=K","^=J"]],"^=9",null,"^=M",2,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"~:methods",[["^ ","^=M",1,"^=;",false,"^=6","^=H"],["^ ","^=M",2,"^=;",false,"^=6",["^U",[null,"^=H","~$cljs.core/IMap","~$clj-nil"]]]],"^7",613,"^9",613,"^==",2,"^=>",true,"^=4",["^1J",[["^=J"],["^=K","^=J"]]]],"~$error-message",["^ ","^Y","^62","^6","cljs/analyzer.cljc","^7",302,"^8",1,"^9",302,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",302,"^8",11,"^9",302,"^:",24],"^=6","^2N"],"~$elide-reader-meta",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4080,"^8",7,"^9",4080,"^:",24,"^=4",["^1J",["^=5",["^1J",[["~$m"]]]]]],"^Y","^2V","^6","cljs/analyzer.cljc","^:",24,"^=8",["^1J",[["~$m"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4080,"^=<",["^U",["^=G","^=P"]],"^9",4080,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$m"]]]]]],"~$missing-rename?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2650,"^8",7,"^9",2650,"^:",22,"^=4",["^1J",["^=5",["^1J",[["~$sym","^=K"]]]]]],"^Y","^6;","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^=T","^=K"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2650,"^=<","^=7","^9",2650,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=T","^=K"]]]]]],"~$resolve-invokeable-ns",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1153,"^8",7,"^9",1153,"^:",28,"^=4",["^1J",["^=5",["^1J",[["^1K","~$current-ns","^1?"]]]]]],"^Y","^2X","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["^1K","^=V","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1153,"^9",1153,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1K","^=V","^1?"]]]]]],"~$analyze-let",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2361,"^8",7,"^9",2361,"^:",18,"^=4",["^1J",["^=5",["^1J",[["~$encl-env",["~$_","~$bindings","~$&","~$exprs","^1O","~$form"],"~$is-loop","~$widened-tags"]]]]]],"^Y","^36","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["^=X","~$p__61108","^>0","^>1"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2361,"^=<","^=O","^9",2361,"^==",4,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=X",["~$_","^=Y","~$&","^=Z","^1O","^=["],"^>0","^>1"]]]]]],"~$var-meta",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1495,"^8",7,"^9",1495,"^:",15,"^=4",["^1J",["^=5",["^1J",[["~$var"],["^>4","~$expr-env"]]]]],"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^>4"],["^>4","^>5"]],"^=4",["^1J",[["^>4"],["^>4","^>5"]]],"^=:",["^1J",[null,null]]]],"^Y","^41","^6","cljs/analyzer.cljc","^:",15,"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^>4"],["^>4","^>5"]],"^=4",["^1J",[["^>4"],["^>4","^>5"]]],"^=:",["^1J",[null,null]]],"^=8",[["^>4"],["^>4","^>5"]],"^=9",null,"^=M",2,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",1,"^=;",false,"^=6","^=H"],["^ ","^=M",2,"^=;",false,"^=6",["^U",["^=H","^=P"]]]],"^7",1495,"^9",1495,"^==",2,"^=>",true,"^=4",["^1J",[["^>4"],["^>4","^>5"]]]],"~$desugar-ns-specs",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3006,"^8",7,"^9",3006,"^:",23,"^=4",["^1J",["^=5",["^1J",[["~$args"]]]]],"~:doc","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"^Y","^43","^6","cljs/analyzer.cljc","^:",23,"^=8",["^1J",[["^>7"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3006,"^=<",["^U",[null,"^4M"]],"^9",3006,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>7"]]]]],"^>8","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"~$replay-accumulated-warnings",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",741,"^8",8,"^9",741,"^:",35,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["~$warn-acc"]]]]]],"^=@",true,"^Y","^42","^6","cljs/analyzer.cljc","^:",35,"^=8",["^1J",[["^>:"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",741,"^=<","^=P","^9",741,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>:"]]]]]],"~$js-tag?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",925,"^8",7,"^9",925,"^:",14,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"^Y","^31","^6","cljs/analyzer.cljc","^:",14,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",925,"^=<","^=7","^9",925,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"~$classify-dot-form",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3342,"^8",8,"^9",3342,"^:",25,"^=@",true,"^=4",["^1J",["^=5",["^1J",[[["~$target","~$member","^>7"]]]]]]],"^=@",true,"^Y","^48","^6","cljs/analyzer.cljc","^:",25,"^=8",["^1J",[["~$p__61416"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3342,"^=<","~$cljs.core/IVector","^9",3342,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[["^>=","^>>","^>7"]]]]]]],"~$NUMBER_SYM",["^ ","^Y","^6E","^6","cljs/analyzer.cljc","^7",227,"^8",4,"^9",227,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",227,"^8",9,"^9",227,"^:",19],"^=6","^9>"],"~$ensure-defs",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4710,"^8",7,"^9",4710,"^:",18,"^=4",["^1J",["^=5",["^1J",[["^1K"]]]]],"^>8","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"^Y","^39","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["^1K"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4710,"^=<",["^U",[null,"^=H"]],"^9",4710,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1K"]]]]],"^>8","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"~$analyze-map",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4006,"^8",7,"^9",4006,"^:",18,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"^Y","^26","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["^1?","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4006,"^=<","^=H","^9",4006,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"~$NUMERIC_SET",["^ ","^Y","^24","^6","cljs/analyzer.cljc","^7",3501,"^8",1,"^9",3501,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3501,"^8",6,"^9",3501,"^:",17],"^=6","~$cljs.core/ISet"],"~$analyze-record",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4068,"^8",7,"^9",4068,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^1?","~$x"]]]]]],"^Y","^2;","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^1?","~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4068,"^=<","^=O","^9",4068,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$x"]]]]]],"~$analyze-seq*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3972,"^8",7,"^9",3972,"^:",19,"^=4",["^1J",["^=5",["^1J",[["~$op","^1?","^=[","~$name","~$opts"]]]]]],"^Y","^5?","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^>H","^1?","^=[","^>I","^>J"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3972,"^=<","^=H","^9",3972,"^==",5,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>H","^1?","^=[","^>I","^>J"]]]]]],"~$constants-ns-sym",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",68,"^8",6,"^9",68,"^:",22],"^Y","^2=","^6","cljs/analyzer.cljc","^:",22,"^8",1,"^7",68,"^9",68,"^=6","^9>","^>8","The namespace of the constants table as a symbol."],"~$resolve-alias",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1050,"^8",7,"^9",1050,"^:",20,"^=4",["^1J",["^=5",["^1J",[["^1K","^=T"]]]]],"^>8","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"^Y","^2D","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["^1K","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1050,"^=<",["^U",[null,"^=H"]],"^9",1050,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1K","^=T"]]]]],"^>8","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"~$*cljs-dep-set*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",58,"^8",16,"^9",58,"^:",30,"~:dynamic",true],"^Y","^2H","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^>N",true,"^7",58,"^9",58,"^=6","^=H"],"~$resolve-var",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1181,"^8",7,"^9",1181,"^:",18,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"],["^1?","^=T","~$confirm"],["^1?","^=T","^>P","~$default?"]]]]],"^>8","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.","^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^1?","^=T"],["^1?","^=T","^>P"],["^1?","^=T","^>P","^>Q"]],"^=4",["^1J",[["^1?","^=T"],["^1?","^=T","^>P"],["^1?","^=T","^>P","^>Q"]]],"^=:",["^1J",[null,null,null]]]],"^Y","^2C","^6","cljs/analyzer.cljc","^:",18,"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^1?","^=T"],["^1?","^=T","^>P"],["^1?","^=T","^>P","^>Q"]],"^=4",["^1J",[["^1?","^=T"],["^1?","^=T","^>P"],["^1?","^=T","^>P","^>Q"]]],"^=:",["^1J",[null,null,null]]],"^=8",[["^1?","^=T"],["^1?","^=T","^>P"],["^1?","^=T","^>P","^>Q"]],"^=9",null,"^=M",4,"^=:",["^1J",[null,null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",3,"^=;",false,"^=6","^=H"],["^ ","^=M",4,"^=;",false,"^=6",["^U",["^=G","^=H","^=O","^=P"]]]],"^7",1181,"^9",1181,"^==",4,"^=>",true,"^=4",["^1J",[["^1?","^=T"],["^1?","^=T","^>P"],["^1?","^=T","^>P","^>Q"]]],"^>8","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars."],"~$analyze-fn-method",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2067,"^8",8,"^9",2067,"^:",25,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$locals","^=[","~$type","~$analyze-body?"]]]]]],"^=@",true,"^Y","^3K","^6","cljs/analyzer.cljc","^:",25,"^=8",["^1J",[["^1?","^>S","^=[","^>T","^>U"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2067,"^=<",["^U",["^=H","^=P"]],"^9",2067,"^==",5,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^>S","^=[","^>T","^>U"]]]]]],"~$JS_STAR_SYM",["^ ","^Y","^3M","^6","cljs/analyzer.cljc","^7",235,"^8",4,"^9",235,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",235,"^8",9,"^9",235,"^:",20],"^=6","^9>"],"~$js-star-seg",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3491,"^8",7,"^9",3491,"^:",18,"^=4",["^1J",["^=5",["^1J",[["~$s"]]]]]],"^Y","^3N","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["~$s"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3491,"^=<","^=G","^9",3491,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$s"]]]]]],"~$dep-has-global-exports?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",842,"^8",7,"^9",842,"^:",30,"^=4",["^1J",["^=5",["^1J",[["~$module"]]]]]],"^Y","^3O","^6","cljs/analyzer.cljc","^:",30,"^=8",["^1J",[["^>Y"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",842,"^=<","^=7","^9",842,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>Y"]]]]]],"~$register-specs",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4620,"^8",7,"^9",4620,"^:",21,"^=4",["^1J",["^=5",["^1J",[["~$cached-ns"]]]]],"^>8","Registers speced vars found in a namespace analysis cache."],"^Y","^3S","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^>["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4620,"^=<",["^U",[null,"^=H","^=P"]],"^9",4620,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>["]]]]],"^>8","Registers speced vars found in a namespace analysis cache."],"~$get-externs",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",171,"^8",7,"^9",171,"^:",18,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"^Y","^9B","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[[]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",171,"^=<","^=H","^9",171,"^==",0,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"~$*passes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",64,"^8",16,"^9",64,"^:",24,"^>N",true],"^Y","^9G","^6","cljs/analyzer.cljc","^:",24,"^8",1,"^>N",true,"^7",64,"^9",64,"^=6","^=H"],"~$has-extern?*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",983,"^8",7,"^9",983,"^:",19,"^=4",["^1J",["^=5",["^1J",[["~$pre","~$externs"],["^?3","^?4","~$top"]]]]],"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^?3","^?4"],["^?3","^?4","^?5"]],"^=4",["^1J",[["^?3","^?4"],["^?3","^?4","^?5"]]],"^=:",["^1J",[null,null]]]],"^Y","^35","^6","cljs/analyzer.cljc","^:",19,"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^?3","^?4"],["^?3","^?4","^?5"]],"^=4",["^1J",[["^?3","^?4"],["^?3","^?4","^?5"]]],"^=:",["^1J",[null,null]]],"^=8",[["^?3","^?4"],["^?3","^?4","^?5"]],"^=9",null,"^=M",3,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",3,"^=;",false,"^=6",["^U",["^=7","^=H"]]]],"^7",983,"^9",983,"^==",3,"^=>",true,"^=4",["^1J",[["^?3","^?4"],["^?3","^?4","^?5"]]]],"~$handle-symbol-local",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1176,"^8",7,"^9",1176,"^:",26,"^=4",["^1J",["^=5",["^1J",[["^=T","~$lb"]]]]]],"^Y","^2W","^6","cljs/analyzer.cljc","^:",26,"^=8",["^1J",[["^=T","^?7"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1176,"^=<",["^U",[null,"^=O"]],"^9",1176,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=T","^?7"]]]]]],"~$get-expander-ns",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3821,"^8",7,"^9",3821,"^:",22,"^=4",["^1J",["^=5",["^1J",[["^1?","~$nstr"]]]]]],"^Y","^9J","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^1?","^?9"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3821,"^=<",["^U",["~$cljs.core/Namespace","^=H","^=P"]],"^9",3821,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^?9"]]]]]],"~$message",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",725,"^8",7,"^9",725,"^:",14,"^=4",["^1J",["^=5",["^1J",[["^1?","~$s"]]]]]],"^Y","^9Q","^6","cljs/analyzer.cljc","^:",14,"^=8",["^1J",[["^1?","~$s"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",725,"^=<","^1@","^9",725,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$s"]]]]]],"~$parse-invoke",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3728,"^8",7,"^9",3728,"^:",19,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"^Y","^32","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^1?","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3728,"^9",3728,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"~$*cljs-warning-handlers*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",528,"^8",16,"^9",528,"^:",39,"^>N",true],"^Y","^3Z","^6","cljs/analyzer.cljc","^:",39,"^8",1,"^>N",true,"^7",528,"^9",528,"^=6","^=H"],"~$analyze-seq*-wrap",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3977,"^8",7,"^9",3977,"^:",24,"^=4",["^1J",["^=5",["^1J",[["^>H","^1?","^=[","^>I","^>J"]]]]]],"^Y","^45","^6","cljs/analyzer.cljc","^:",24,"^=8",["^1J",[["^>H","^1?","^=[","^>I","^>J"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3977,"^9",3977,"^==",5,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>H","^1?","^=[","^>I","^>J"]]]]]],"~$confirm-bindings",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1301,"^8",7,"^9",1301,"^:",23,"^=4",["^1J",["^=5",["^1J",[["^1?","~$names"]]]]],"^>8","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"^Y","^90","^6","cljs/analyzer.cljc","^:",23,"^=8",["^1J",[["^1?","^?@"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1301,"^=<","^=P","^9",1301,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^?@"]]]]],"^>8","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"~$has-extern?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1009,"^8",7,"^9",1009,"^:",18,"^=4",["^1J",["^=5",["^1J",[["^?3"],["^?3","^?4"]]]]],"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^?3"],["^?3","^?4"]],"^=4",["^1J",[["^?3"],["^?3","^?4"]]],"^=:",["^1J",[null,null]]]],"^Y","^8S","^6","cljs/analyzer.cljc","^:",18,"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^?3"],["^?3","^?4"]],"^=4",["^1J",[["^?3"],["^?3","^?4"]]],"^=:",["^1J",[null,null]]],"^=8",[["^?3"],["^?3","^?4"]],"^=9",null,"^=M",2,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",1,"^=;",false,"^=6","^=H"],["^ ","^=M",2,"^=;",false,"^=6",["^U",["^=7","^=H"]]]],"^7",1009,"^9",1009,"^==",2,"^=>",true,"^=4",["^1J",[["^?3"],["^?3","^?4"]]]],"~$foreign-dep?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2597,"^8",7,"^9",2597,"^:",19,"^=4",["^1J",["^=5",["^1J",[["~$dep"]]]]],"^=6","^=7"],"^Y","^3<","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^?C"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2597,"^=<","^=7","^9",2597,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^?C"]]]]]],"~$missing-rename-macro?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2661,"^8",7,"^9",2661,"^:",28,"^=4",["^1J",["^=5",["^1J",[["^=T"]]]]]],"^Y","^8W","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2661,"^=<","^=7","^9",2661,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=T"]]]]]],"~$missing-uses",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2668,"^8",7,"^9",2668,"^:",19,"^=4",["^1J",["^=5",["^1J",[["~$uses","^1?"]]]]]],"^Y","^29","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^?F","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2668,"^=<",["^U",[null,"^=G","^=H"]],"^9",2668,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^?F","^1?"]]]]]],"~$get-macroexpand-check-var",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3873,"^8",12,"^9",3873,"^:",37,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"^Y","^8O","^6","cljs/analyzer.cljc","^:",37,"^=8",["^1J",[[]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",6,"^=;",false,"^7",3873,"^=<",["^U",["^=H","^=P"]],"^9",3873,"^==",0,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"~$missing-use?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2642,"^8",7,"^9",2642,"^:",19,"^=4",["^1J",["^=5",["^1J",[["~$lib","^=T","^=K"]]]]]],"^Y","^2<","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^?I","^=T","^=K"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2642,"^=<","^=7","^9",2642,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^?I","^=T","^=K"]]]]]],"~$hex-format",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",542,"^8",8,"^9",542,"^:",18,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["~$s","~$pad"]]]]]],"^=@",true,"^Y","^3A","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["~$s","^?K"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",542,"^=<","^1@","^9",542,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$s","^?K"]]]]]],"~$es5-allowed",["^ ","^Y","^3D","^6","cljs/analyzer.cljc","^7",197,"^8",1,"^9",197,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",197,"^8",6,"^9",197,"^:",17],"^=6","^>E"],"~$NEW_SYM",["^ ","^Y","^3C","^6","cljs/analyzer.cljc","^7",241,"^8",4,"^9",241,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",241,"^8",9,"^9",241,"^:",16],"^=6","^9>"],"~$source-info->error-data",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",706,"^8",8,"^9",706,"^:",31,"^=@",true,"^=4",["^1J",["^=5",["^1J",[[["^ ","~:keys",["~$file","~$line","~$column"]]]]]]]],"^=@",true,"^Y","^3L","^6","cljs/analyzer.cljc","^:",31,"^=8",["^1J",[["~$p__60786"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",706,"^=<","^=O","^9",706,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^?P","^?Q","^?R"]]]]]]]],"~$get-spec-vars",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4593,"^8",13,"^9",4593,"^:",26,"^=@",true,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"^=@",true,"^Y","^99","^6","cljs/analyzer.cljc","^:",26,"^=8",["^1J",[[]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",6,"^=;",false,"^7",4593,"^=<",["^U",["^=O","^=P"]],"^9",4593,"^==",0,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"~$analyze",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4246,"^8",7,"^9",4246,"^:",14,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["],["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]]]]],"^>8","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.","^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^1?","^=["],["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]],"^=4",["^1J",[["^1?","^=["],["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]]],"^=:",["^1J",[null,null,null]]]],"^Y","^3J","^6","cljs/analyzer.cljc","^:",14,"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^1?","^=["],["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]],"^=4",["^1J",[["^1?","^=["],["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]]],"^=:",["^1J",[null,null,null]]],"^=8",[["^1?","^=["],["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]],"^=9",null,"^=M",4,"^=:",["^1J",[null,null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",3,"^=;",false,"^=6","^=H"],["^ ","^=M",4,"^=;",false]],"^7",4246,"^9",4246,"^==",4,"^=>",true,"^=4",["^1J",[["^1?","^=["],["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]]],"^>8","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set."],"~$used?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3815,"^8",7,"^9",3815,"^:",12,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]],"^=6","^=7"],"^Y","^3F","^6","cljs/analyzer.cljc","^:",12,"^=8",["^1J",[["^1?","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3815,"^=<","^=7","^9",3815,"^==",2,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]]],"~$node-module-dep?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",830,"^8",7,"^9",830,"^:",23,"^=4",["^1J",["^=5",["^1J",[["^>Y"]]]]],"^=6","^=7"],"^Y","^95","^6","cljs/analyzer.cljc","^:",23,"^=8",["^1J",[["^>Y"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",830,"^=<","^=7","^9",830,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>Y"]]]]]],"~$parse-type",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3293,"^8",7,"^9",3293,"^:",17,"^=4",["^1J",["^=5",["^1J",[["^>H","^1?",["~$_","~$tsym","~$fields","~$pmasks","~$body","^1O","^=["]]]]]]],"^Y","^4Q","^6","cljs/analyzer.cljc","^:",17,"^=8",["^1J",[["^>H","^1?","~$p__61409"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3293,"^=<","^=O","^9",3293,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>H","^1?",["~$_","^?Y","^?Z","^?[","^@0","^1O","^=["]]]]]]],"~$gets",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",203,"^8",7,"^9",203,"^:",11,"^=4",["^1J",["^=5",["^1J",[["~$m","~$k0","~$k1"],["~$m","^@3","^@4","~$k2"],["~$m","^@3","^@4","^@5","~$k3"]]]]],"^=L",["^ ","^=;",false,"^=M",5,"^==",5,"^=8",[["~$m","^@3","^@4"],["~$m","^@3","^@4","^@5"],["~$m","^@3","^@4","^@5","^@6"]],"^=4",["^1J",[["~$m","^@3","^@4"],["~$m","^@3","^@4","^@5"],["~$m","^@3","^@4","^@5","^@6"]]],"^=:",["^1J",[null,null,null]]]],"^Y","^5Z","^6","cljs/analyzer.cljc","^:",11,"^=L",["^ ","^=;",false,"^=M",5,"^==",5,"^=8",[["~$m","^@3","^@4"],["~$m","^@3","^@4","^@5"],["~$m","^@3","^@4","^@5","^@6"]],"^=4",["^1J",[["~$m","^@3","^@4"],["~$m","^@3","^@4","^@5"],["~$m","^@3","^@4","^@5","^@6"]]],"^=:",["^1J",[null,null,null]]],"^=8",[["~$m","^@3","^@4"],["~$m","^@3","^@4","^@5"],["~$m","^@3","^@4","^@5","^@6"]],"^=9",null,"^=M",5,"^=:",["^1J",[null,null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",3,"^=;",false,"^=6",["^U",["^=H","^=P"]]],["^ ","^=M",4,"^=;",false,"^=6",["^U",["^=H","^=P"]]],["^ ","^=M",5,"^=;",false,"^=6",["^U",["^=H","^=P"]]]],"^7",203,"^9",203,"^==",5,"^=>",true,"^=4",["^1J",[["~$m","^@3","^@4"],["~$m","^@3","^@4","^@5"],["~$m","^@3","^@4","^@5","^@6"]]]],"~$check-rename-macros-inferring-missing",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2731,"^8",7,"^9",2731,"^:",44,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>I","~$renames"],"^1O","~$ast"],"^1?"]]]]]],"^Y","^4V","^6","cljs/analyzer.cljc","^:",44,"^=8",["^1J",[["~$p__61245","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2731,"^=<",["^U",["^=G","^=H"]],"^9",2731,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>I","^@8"],"^1O","^@9"],"^1?"]]]]]],"~$*allow-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1356,"^8",16,"^9",1356,"^:",26,"^>N",true],"^Y","^8;","^6","cljs/analyzer.cljc","^:",26,"^8",1,"^>N",true,"^7",1356,"^9",1356,"^=6","^=H"],"~$analyze-const",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2452,"^8",7,"^9",2452,"^:",20,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"^Y","^64","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["^1?","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2452,"^=<","^=O","^9",2452,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"~$simple-predicate-induced-tag",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1610,"^8",8,"^9",1610,"^:",36,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$test"]]]]],"^>8","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"^=@",true,"^Y","^67","^6","cljs/analyzer.cljc","^:",36,"^=8",["^1J",[["^1?","^@>"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1610,"^=<",["^U",["^>@","^=P"]],"^9",1610,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@>"]]]]],"^>8","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"~$infer-invoke",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1452,"^8",7,"^9",1452,"^:",19,"^=4",["^1J",["^=5",["^1J",[["^1?",["^ ","~$f","~:fn","^?O",["^>7"],"^1O","~$e"]]]]]]],"^Y","^4W","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^1?","~$p__60865"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1452,"^=<",["^U",["^=H","^9>","^=P"]],"^9",1452,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?",["^ ","~$f","^@@","^?O",["^>7"],"^1O","~$e"]]]]]]],"~$*cljs-static-fns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",54,"^8",16,"^9",54,"^:",33,"^>N",true],"^Y","^8>","^6","cljs/analyzer.cljc","^:",33,"^8",1,"^>N",true,"^7",54,"^9",54,"^=6","^=H"],"~$array-types",["^ ","^Y","^50","^6","cljs/analyzer.cljc","^7",3525,"^8",1,"^9",3525,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3525,"^8",6,"^9",3525,"^:",17],"^=6","^>E"],"~$*check-alias-dupes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",53,"^8",16,"^9",53,"^:",35,"^>N",true],"^Y","^51","^6","cljs/analyzer.cljc","^:",35,"^8",1,"^>N",true,"^7",53,"^9",53,"^=6","^=H"],"~$macro-ns-name",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3068,"^8",7,"^9",3068,"^:",20,"^=4",["^1J",["^=5",["^1J",[["^>I"]]]]]],"^Y","^6@","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["^>I"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3068,"^=<",["^U",[null,"^=H","^9>"]],"^9",3068,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>I"]]]]]],"~$*reload-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",62,"^8",16,"^9",62,"^:",31,"^>N",true],"^Y","^6?","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^>N",true,"^7",62,"^9",62,"^=6","^=H"],"~$compiler-options",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",168,"^8",7,"^9",168,"^:",23,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"^Y","^6F","^6","cljs/analyzer.cljc","^:",23,"^=8",["^1J",[[]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",168,"^=<",["^U",["^=H","^=P"]],"^9",168,"^==",0,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"~$resolve-existing-var",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1293,"^8",7,"^9",1293,"^:",27,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]],"^>8","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"^Y","^55","^6","cljs/analyzer.cljc","^:",27,"^=8",["^1J",[["^1?","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1293,"^=<","^=H","^9",1293,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]],"^>8","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"~$required?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1139,"^8",7,"^9",1139,"^:",16,"^=4",["^1J",["^=5",["^1J",[["^1K","^1?"]]]]]],"^Y","^56","^6","cljs/analyzer.cljc","^:",16,"^=8",["^1J",[["^1K","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1139,"^=<","^=7","^9",1139,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1K","^1?"]]]]]],"~$node-like?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1086,"^8",7,"^9",1086,"^:",17,"^=4",["^1J",["^=5",["^1J",[[],["^>J"]]]]],"^=L",["^ ","^=;",false,"^=M",1,"^==",1,"^=8",[[],["^>J"]],"^=4",["^1J",[[],["^>J"]]],"^=:",["^1J",[null,null]]]],"^Y","^54","^6","cljs/analyzer.cljc","^:",17,"^=L",["^ ","^=;",false,"^=M",1,"^==",1,"^=8",[[],["^>J"]],"^=4",["^1J",[[],["^>J"]]],"^=:",["^1J",[null,null]]],"^=8",[[],["^>J"]],"^=9",null,"^=M",1,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",0,"^=;",false,"^=6","^=H"],["^ ","^=M",1,"^=;",false,"^=6","^=7"]],"^7",1086,"^9",1086,"^==",1,"^=>",true,"^=4",["^1J",[[],["^>J"]]]],"~$NOT_NATIVE",["^ ","^Y","^6B","^6","cljs/analyzer.cljc","^7",1410,"^8",1,"^9",1410,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1410,"^8",6,"^9",1410,"^:",16],"^=6","^>E"],"~$IGNORE_SYM",["^ ","^Y","^59","^6","cljs/analyzer.cljc","^7",249,"^8",1,"^9",249,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",249,"^8",6,"^9",249,"^:",16],"^=6","^9>"],"~$parse-invoke*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3664,"^8",7,"^9",3664,"^:",20,"^=4",["^1J",["^=5",["^1J",[["^1?",["~$f","~$&","^>7","^1O","^=["]]]]]]],"^Y","^58","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["^1?","~$p__61478"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3664,"^=<",["^U",[null,"^=H","^=O"]],"^9",3664,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?",["~$f","~$&","^>7","^1O","^=["]]]]]]],"~$*checked-arrays*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",52,"^8",16,"^9",52,"^:",32,"^>N",true],"^Y","^4A","^6","cljs/analyzer.cljc","^:",32,"^8",1,"^>N",true,"^7",52,"^9",52,"^=6","^=H"],"~$ast-children",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1814,"^8",7,"^9",1814,"^:",19,"^=4",["^1J",["^=5",["^1J",[["^@9"]]]]]],"^Y","^5=","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^@9"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1814,"^=<","^=H","^9",1814,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^@9"]]]]]],"~$loaded-js-ns?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",803,"^8",7,"^9",803,"^:",20,"^=4",["^1J",["^=5",["^1J",[["^1?","~$prefix"]]]]],"^>8","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.","^=6","^=7"],"^Y","^7L","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["^1?","^@R"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",803,"^=<","^=7","^9",803,"^==",2,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@R"]]]]],"^>8","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked."],"~$analyze-vector",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4024,"^8",7,"^9",4024,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"^Y","^7M","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^1?","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4024,"^=<","^=H","^9",4024,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"~$unwrap-quote",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1414,"^8",7,"^9",1414,"^:",19,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>H"],"^1O","~$expr"]]]]]]],"^Y","^7N","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["~$p__60856"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1414,"^=<",["^U",[null,"^=H"]],"^9",1414,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>H"],"^1O","^@U"]]]]]]],"~$namespaces",["^ ","^Y","^4>","^6","cljs/analyzer.cljc","^7",599,"^8",1,"^9",599,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",599,"^8",6,"^9",599,"^:",16],"^=6","^2Z"],"~$predicate->tag",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1546,"^8",16,"^9",1546,"^:",30,"^=@",true],"^=@",true,"^Y","^5A","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^7",1546,"^9",1546,"^=6","^=O"],"~$record-with-field?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3654,"^8",8,"^9",3654,"^:",26,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^=F","~$field"]]]]]],"^=@",true,"^Y","^4:","^6","cljs/analyzer.cljc","^:",26,"^=8",["^1J",[["^=F","^@Z"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3654,"^=<","^=7","^9",3654,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=F","^@Z"]]]]]],"~$elide-analyzer-meta",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4083,"^8",7,"^9",4083,"^:",26,"^=4",["^1J",["^=5",["^1J",[["~$m"]]]]]],"^Y","^5B","^6","cljs/analyzer.cljc","^:",26,"^=8",["^1J",[["~$m"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4083,"^=<",["^U",["^=G","^=P"]],"^9",4083,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$m"]]]]]],"~$ns->relpath",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",274,"^8",10,"^9",274,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^1K"],["^1K","~$ext"]]]]],"^>8","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.","^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^1K"],["^1K","^A1"]],"^=4",["^1J",[["^1K"],["^1K","^A1"]]],"^=:",["^1J",[null,null]]]],"^Y","^4E","^6","cljs/analyzer.cljc","^:",21,"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^1K"],["^1K","^A1"]],"^=4",["^1J",[["^1K"],["^1K","^A1"]]],"^=:",["^1J",[null,null]]],"^=8",[["^1K"],["^1K","^A1"]],"^=9",null,"^=M",2,"^=:",["^1J",[null,null]],"^8",4,"^=;",false,"^=N",[["^ ","^=M",1,"^=;",false,"^=6","^=H"],["^ ","^=M",2,"^=;",false,"^=6","^1@"]],"^7",274,"^9",274,"^==",2,"^=>",true,"^=4",["^1J",[["^1K"],["^1K","^A1"]]],"^>8","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs."],"~$compile-syntax-error",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",753,"^8",8,"^9",753,"^:",28,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$msg","~$symbol"]]]]]],"^=@",true,"^Y","^4C","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["^1?","^A3","^A4"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",753,"^=<","~$cljs.core/ExceptionInfo","^9",753,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^A3","^A4"]]]]]],"~$analyze-let-body",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2356,"^8",7,"^9",2356,"^:",23,"^=4",["^1J",["^=5",["^1J",[["^1?","~$context","^=Z","~$recur-frames","~$loop-lets"]]]]]],"^Y","^5M","^6","cljs/analyzer.cljc","^:",23,"^=8",["^1J",[["^1?","^A7","^=Z","^A8","^A9"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2356,"^9",2356,"^==",5,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^A7","^=Z","^A8","^A9"]]]]]],"~$->t_cljs$analyzer60770",["^ ","^=3",null,"^5",["^ ","~:anonymous",true,"~:protocols",["^U",["~$cljs.core/IMeta","~$cljs.core/IDeref","~$cljs.core/IWithMeta"]],"~:skip-protocol-flag",["^U",["^A=","^A>","^A?"]],"~:factory","~:positional","^=4",["^1J",["^=5",["^1J",[["~$meta60771"]]]]],"^>8","Positional factory function for cljs.analyzer/t_cljs$analyzer60770.","^6",null],"^A<",["^U",["^A=","^A>","^A?"]],"^Y","^5N","^6","cljs/analyzer.cljc","^=8",["^1J",[["^AC"]]],"^=9",null,"^=:",["^1J",[null,null]],"^A;",true,"^8",6,"^=;",false,"^AA","^AB","^7",607,"^=<","^2Z","^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^AC"]]]]],"^A@",["^U",["^A=","^A>","^A?"]],"^>8","Positional factory function for cljs.analyzer/t_cljs$analyzer60770."],"~$cljs-set?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",266,"^8",19,"^9",266,"^:",28,"^=6","^=7","^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"^Y","^82","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",4,"^=;",false,"^7",266,"^=<","^=7","^9",266,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"~$extern-pre",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1079,"^8",7,"^9",1079,"^:",17,"^=4",["^1J",["^=5",["^1J",[["^=T","^=V"]]]]]],"^Y","^5U","^6","cljs/analyzer.cljc","^:",17,"^=8",["^1J",[["^=T","^=V"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1079,"^=<",["^U",[null,"^=G","^=H"]],"^9",1079,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=T","^=V"]]]]]],"~$get-col",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",637,"^8",7,"^9",637,"^:",14,"^=4",["^1J",["^=5",["^1J",[["~$x","^1?"]]]]]],"^Y","^5W","^6","cljs/analyzer.cljc","^:",14,"^=8",["^1J",[["~$x","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",637,"^=<","^=H","^9",637,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x","^1?"]]]]]],"~$type-check-induced-tag",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1627,"^8",8,"^9",1627,"^:",30,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@>"]]]]],"^>8","Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x)."],"^=@",true,"^Y","^84","^6","cljs/analyzer.cljc","^:",30,"^=8",["^1J",[["^1?","^@>"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1627,"^=<",["^U",["^>@","^=P"]],"^9",1627,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@>"]]]]],"^>8","Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x)."],"~$basic-validate-ns-spec",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2753,"^8",7,"^9",2753,"^:",29,"^=4",["^1J",["^=5",["^1J",[["^1?","~$macros?","~$spec"]]]]]],"^Y","^4P","^6","cljs/analyzer.cljc","^:",29,"^=8",["^1J",[["^1?","^AI","^AJ"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2753,"^=<","^=P","^9",2753,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^AI","^AJ"]]]]]],"~$*cljs-warnings*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",124,"^8",16,"^9",124,"^:",31,"^>N",true],"^Y","^5[","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^>N",true,"^7",124,"^9",124,"^=6","^=H"],"~$alias->type",["^ ","^Y","^60","^6","cljs/analyzer.cljc","^7",974,"^8",1,"^9",974,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",974,"^8",6,"^9",974,"^:",17],"^=6","^=O"],"~$analyzed?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3622,"^8",7,"^9",3622,"^:",16,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]],"^>8","Returns boolean if the form has already been marked as analyzed.","^=6","^=7"],"^Y","^2K","^6","cljs/analyzer.cljc","^:",16,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3622,"^=<","^=7","^9",3622,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]],"^>8","Returns boolean if the form has already been marked as analyzed."],"~$analyze-deps",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2605,"^8",7,"^9",2605,"^:",19,"^=4",["^1J",["^=5",["^1J",[["^?I","~$deps","^1?"],["^?I","^AO","^1?","^>J"]]]]],"^>8","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.","^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^?I","^AO","^1?"],["^?I","^AO","^1?","^>J"]],"^=4",["^1J",[["^?I","^AO","^1?"],["^?I","^AO","^1?","^>J"]]],"^=:",["^1J",[null,null]]]],"^Y","^2S","^6","cljs/analyzer.cljc","^:",19,"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^?I","^AO","^1?"],["^?I","^AO","^1?","^>J"]],"^=4",["^1J",[["^?I","^AO","^1?"],["^?I","^AO","^1?","^>J"]]],"^=:",["^1J",[null,null]]],"^=8",[["^?I","^AO","^1?"],["^?I","^AO","^1?","^>J"]],"^=9",null,"^=M",4,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",3,"^=;",false,"^=6","^=H"],["^ ","^=M",4,"^=;",false]],"^7",2605,"^9",2605,"^==",4,"^=>",true,"^=4",["^1J",[["^?I","^AO","^1?"],["^?I","^AO","^1?","^>J"]]],"^>8","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces."],"~$array-type?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3528,"^8",7,"^9",3528,"^:",18,"^=4",["^1J",["^=5",["^1J",[["~$t"]]]]],"^=6","^=7"],"^Y","^4Y","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["~$t"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3528,"^=<","^=7","^9",3528,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$t"]]]]]],"~$dotted-symbol?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1035,"^8",7,"^9",1035,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^=T"]]]]]],"^Y","^2P","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1035,"^=<","^=7","^9",1035,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=T"]]]]]],"~$*cljs-macros-is-classpath*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",57,"^8",16,"^9",57,"^:",42,"^>N",true],"^Y","^2U","^6","cljs/analyzer.cljc","^:",42,"^8",1,"^>N",true,"^7",57,"^9",57,"^=6","^=H"],"~$*allow-redef*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1355,"^8",16,"^9",1355,"^:",29,"^>N",true],"^Y","^6<","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^>N",true,"^7",1355,"^9",1355,"^=6","^=H"],"~$analyze-fn-method-body",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2063,"^8",7,"^9",2063,"^:",29,"^=4",["^1J",["^=5",["^1J",[["^1?","^=[","^A8"]]]]]],"^Y","^57","^6","cljs/analyzer.cljc","^:",29,"^=8",["^1J",[["^1?","^=[","^A8"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2063,"^9",2063,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=[","^A8"]]]]]],"~$t_cljs$analyzer60770",["^ ","~:num-fields",1,"^A<",["^U",["^A=","^A>","^A?"]],"^Y","^2Z","^6","cljs/analyzer.cljc","~:type",true,"^A;",true,"^8",6,"^7",607,"~:record",false,"^=6","~$function","^A@",["^U",["^A=","^A>","^A?"]]],"~$infer-type",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4100,"^8",7,"^9",4100,"^:",17,"^=4",["^1J",["^=5",["^1J",[["^1?",["^ ","^?O",["^=F"],"^1O","^@9"],"~$_"]]]]]],"^Y","^2Y","^6","cljs/analyzer.cljc","^:",17,"^=8",["^1J",[["^1?","~$p__61548","~$_"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4100,"^=<",["^U",[null,"^=G","^=H"]],"^9",4100,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?",["^ ","^?O",["^=F"],"^1O","^@9"],"~$_"]]]]]],"~$parse-import-spec",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2913,"^8",7,"^9",2913,"^:",24,"^=4",["^1J",["^=5",["^1J",[["^1?","^AO","^AJ"]]]]]],"^Y","^6A","^6","cljs/analyzer.cljc","^:",24,"^=8",["^1J",[["^1?","^AO","^AJ"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2913,"^=<","^=O","^9",2913,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^AO","^AJ"]]]]]],"~$clj-ns->cljs-ns",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2950,"^8",7,"^9",2950,"^:",22,"^=4",["^1J",["^=5",["^1J",[["^=T"]]]]],"^>8","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"^Y","^2[","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2950,"^=<",["^U",[null,"^=H","^9>"]],"^9",2950,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=T"]]]]],"^>8","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"~$constant-value?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1822,"^8",7,"^9",1822,"^:",22,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>H"],"^1O","^@9"]]]]]]],"^Y","^37","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["~$p__60989"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1822,"^=<",["^U",["^=7","^=H"]],"^9",1822,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>H"],"^1O","^@9"]]]]]]],"~$dump-specs",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4598,"^8",7,"^9",4598,"^:",17,"^=4",["^1J",["^=5",["^1J",[["^1K"]]]]],"^>8","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"^Y","^6C","^6","cljs/analyzer.cljc","^:",17,"^=8",["^1J",[["^1K"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4598,"^=<",["^U",[null,"^=H"]],"^9",4598,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1K"]]]]],"^>8","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"~$*fn-invoke-direct*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",55,"^8",16,"^9",55,"^:",34,"^>N",true],"^Y","^30","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^>N",true,"^7",55,"^9",55,"^=6","^=H"],"~$use->require",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2823,"^8",7,"^9",2823,"^:",19,"^=4",["^1J",["^=5",["^1J",[["^1?",["^?I","~$&","~$filters","^1O","^AJ"]]]]]]],"^Y","^6G","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^1?","~$p__61254"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2823,"^=<","^=H","^9",2823,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?",["^?I","~$&","^B7","^1O","^AJ"]]]]]]],"~$inferred-use-macros",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2684,"^8",7,"^9",2684,"^:",26,"^=4",["^1J",["^=5",["^1J",[["~$use-macros","^1?"]]]]]],"^Y","^6D","^6","cljs/analyzer.cljc","^:",26,"^=8",["^1J",[["^B:","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2684,"^=<",["^U",[null,"^=G","^=H"]],"^9",2684,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^B:","^1?"]]]]]],"~$error-data",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",744,"^8",8,"^9",744,"^:",18,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$phase"],["^1?","^B<","^A4"]]]]],"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^1?","^B<"],["^1?","^B<","^A4"]],"^=4",["^1J",[["^1?","^B<"],["^1?","^B<","^A4"]]],"^=:",["^1J",[null,null]]]],"^=@",true,"^Y","^33","^6","cljs/analyzer.cljc","^:",18,"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^1?","^B<"],["^1?","^B<","^A4"]],"^=4",["^1J",[["^1?","^B<"],["^1?","^B<","^A4"]]],"^=:",["^1J",[null,null]]],"^=8",[["^1?","^B<"],["^1?","^B<","^A4"]],"^=9",null,"^=M",3,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",3,"^=;",false,"^=6",["^U",["^=H","^=P"]]]],"^7",744,"^9",744,"^==",3,"^=>",true,"^=4",["^1J",[["^1?","^B<"],["^1?","^B<","^A4"]]]],"~$analyze-symbol",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3759,"^8",7,"^9",3759,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]],"^>8","Finds the var associated with sym"],"^Y","^5>","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^1?","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3759,"^=<",["^U",["^=H","^=P"]],"^9",3759,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]],"^>8","Finds the var associated with sym"],"~$truth-induced-tag",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1647,"^8",8,"^9",1647,"^:",25,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@>"]]]]],"^>8","Refine a tag to exclude clj-nil if the test is a local."],"^=@",true,"^Y","^5<","^6","cljs/analyzer.cljc","^:",25,"^=8",["^1J",[["^1?","^@>"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1647,"^=<",["^U",["^>@","^=P"]],"^9",1647,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@>"]]]]],"^>8","Refine a tag to exclude clj-nil if the test is a local."],"~$confirm-var-exists",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",848,"^8",7,"^9",848,"^:",25,"^=4",["^1J",["^=5",["^1J",[["^1?","^@R","~$suffix"],["^1?","^@R","^B@","~$missing-fn"]]]]],"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^1?","^@R","^B@"],["^1?","^@R","^B@","^BA"]],"^=4",["^1J",[["^1?","^@R","^B@"],["^1?","^@R","^B@","^BA"]]],"^=:",["^1J",[null,null]]]],"^Y","^27","^6","cljs/analyzer.cljc","^:",25,"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^1?","^@R","^B@"],["^1?","^@R","^B@","^BA"]],"^=4",["^1J",[["^1?","^@R","^B@"],["^1?","^@R","^B@","^BA"]]],"^=:",["^1J",[null,null]]],"^=8",[["^1?","^@R","^B@"],["^1?","^@R","^B@","^BA"]],"^=9",null,"^=M",4,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",3,"^=;",false,"^=6","^=H"],["^ ","^=M",4,"^=;",false,"^=6",["^U",["^=H","^=P"]]]],"^7",848,"^9",848,"^==",4,"^=>",true,"^=4",["^1J",[["^1?","^@R","^B@"],["^1?","^@R","^B@","^BA"]]]],"~$analyze-keyword",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1371,"^8",7,"^9",1371,"^:",22,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]]],"^Y","^5@","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^1?","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1371,"^=<","^=O","^9",1371,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]]],"~$SENTINEL",["^ ","^Y","^4<","^6","cljs/analyzer.cljc","^7",201,"^8",10,"^9",201,"^:",23,"^5",["^ ","^6","cljs/analyzer.cljc","^7",201,"^8",15,"^9",201,"^:",23],"^=6","~$object"],"~$analyze-let-bindings",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2350,"^8",7,"^9",2350,"^:",27,"^=4",["^1J",["^=5",["^1J",[["^=X","^=Y","^>H"]]]]]],"^Y","^2@","^6","cljs/analyzer.cljc","^:",27,"^=8",["^1J",[["^=X","^=Y","^>H"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2350,"^9",2350,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=X","^=Y","^>H"]]]]]],"~$munge-global-export",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1046,"^8",7,"^9",1046,"^:",26,"^=4",["^1J",["^=5",["^1J",[["^>I"]]]]]],"^Y","^5E","^6","cljs/analyzer.cljc","^:",26,"^=8",["^1J",[["^>I"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1046,"^=<","^1@","^9",1046,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>I"]]]]]],"~$*loop-lets*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1354,"^8",16,"^9",1354,"^:",27,"^>N",true],"^Y","^5C","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^>N",true,"^7",1354,"^9",1354,"^=6","^=H"],"~$->type-set",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",939,"^8",7,"^9",939,"^:",17,"^=4",["^1J",["^=5",["^1J",[["~$t"]]]]],"^>8","Ensures that a type tag is a set."],"^Y","^5K","^6","cljs/analyzer.cljc","^:",17,"^=8",["^1J",[["~$t"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",939,"^=<",["^U",[null,"^>E"]],"^9",939,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$t"]]]]],"^>8","Ensures that a type tag is a set."],"~$js-tag",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1020,"^8",7,"^9",1020,"^:",13,"^=4",["^1J",["^=5",["^1J",[["^?3"],["^?3","~$tag-type"],["^?3","^BJ","^?4"],["^?3","^BJ","^?4","^?5"]]]]],"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^?3"],["^?3","^BJ"],["^?3","^BJ","^?4"],["^?3","^BJ","^?4","^?5"]],"^=4",["^1J",[["^?3"],["^?3","^BJ"],["^?3","^BJ","^?4"],["^?3","^BJ","^?4","^?5"]]],"^=:",["^1J",[null,null,null,null]]]],"^Y","^5G","^6","cljs/analyzer.cljc","^:",13,"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^?3"],["^?3","^BJ"],["^?3","^BJ","^?4"],["^?3","^BJ","^?4","^?5"]],"^=4",["^1J",[["^?3"],["^?3","^BJ"],["^?3","^BJ","^?4"],["^?3","^BJ","^?4","^?5"]]],"^=:",["^1J",[null,null,null,null]]],"^=8",[["^?3"],["^?3","^BJ"],["^?3","^BJ","^?4"],["^?3","^BJ","^?4","^?5"]],"^=9",null,"^=M",4,"^=:",["^1J",[null,null,null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",1,"^=;",false,"^=6","^=H"],["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",3,"^=;",false,"^=6","^=H"],["^ ","^=M",4,"^=;",false,"^=6",["^U",["^=H","^9>","^=P"]]]],"^7",1020,"^9",1020,"^==",4,"^=>",true,"^=4",["^1J",[["^?3"],["^?3","^BJ"],["^?3","^BJ","^?4"],["^?3","^BJ","^?4","^?5"]]]],"^V",["^ ","^Y","^4F","^6","cljs/analyzer.cljc","^7",182,"^8",1,"^9",182,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",182,"^8",6,"^9",182,"^:",17],"^=6","^>E"],"~$*load-tests*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",60,"^8",16,"^9",60,"^:",28,"^>N",true],"^Y","^5P","^6","cljs/analyzer.cljc","^:",28,"^8",1,"^>N",true,"^7",60,"^9",60,"^=6","^=H"],"~$check-use-macros-inferring-missing",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2713,"^8",7,"^9",2713,"^:",41,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>I","^?F","^B:"],"^1O","^@9"],"^1?"]]]]]],"^Y","^5O","^6","cljs/analyzer.cljc","^:",41,"^=8",["^1J",[["~$p__61239","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2713,"^=<",["^U",["^=G","^=H"]],"^9",2713,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>I","^?F","^B:"],"^1O","^@9"],"^1?"]]]]]],"~$canonicalize-type",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",947,"^8",7,"^9",947,"^:",24,"^=4",["^1J",["^=5",["^1J",[["~$t"]]]]]],"^Y","^5Q","^6","cljs/analyzer.cljc","^:",24,"^=8",["^1J",[["~$t"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",947,"^=<",["^U",[null,"^=G","^=H","^9>","^=P"]],"^9",947,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$t"]]]]]],"~$macroexpand-1*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3904,"^8",7,"^9",3904,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"^Y","^2G","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^1?","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3904,"^=<",["^U",[null,"^=G","~$cljs.core/MetaFn","^=P"]],"^9",3904,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"~$var->sym",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3877,"^8",8,"^9",3877,"^:",16,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^>4"]]]]]],"^=@",true,"^Y","^2F","^6","cljs/analyzer.cljc","^:",16,"^=8",["^1J",[["^>4"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3877,"^=<","^=H","^9",3877,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>4"]]]]]],"~$check-use-macros",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2700,"^8",7,"^9",2700,"^:",23,"^=4",["^1J",["^=5",["^1J",[["^B:","^1?"],["^B:","^?E","^1?"]]]]],"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^B:","^1?"],["^B:","^?E","^1?"]],"^=4",["^1J",[["^B:","^1?"],["^B:","^?E","^1?"]]],"^=:",["^1J",[null,null]]]],"^Y","^4L","^6","cljs/analyzer.cljc","^:",23,"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^B:","^1?"],["^B:","^?E","^1?"]],"^=4",["^1J",[["^B:","^1?"],["^B:","^?E","^1?"]]],"^=:",["^1J",[null,null]]],"^=8",[["^B:","^1?"],["^B:","^?E","^1?"]],"^=9",null,"^=M",3,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",3,"^=;",false,"^=6",["^U",[null,"^=G","^=H"]]]],"^7",2700,"^9",2700,"^==",3,"^=>",true,"^=4",["^1J",[["^B:","^1?"],["^B:","^?E","^1?"]]]],"~$get-expander",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3861,"^8",7,"^9",3861,"^:",19,"^=4",["^1J",["^=5",["^1J",[["^=T","^1?"]]]]],"^>8","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"^Y","^5J","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^=T","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3861,"^=<",["^U",["^=H","^=P"]],"^9",3861,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=T","^1?"]]]]],"^>8","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"~$analyze-js-star",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3585,"^8",7,"^9",3585,"^:",22,"^=4",["^1J",["^=5",["^1J",[["^1?","~$jsform","^>7","^=["]]]]]],"^Y","^77","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^1?","^BU","^>7","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3585,"^9",3585,"^==",4,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^BU","^>7","^=["]]]]]],"~$cljs-map?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",258,"^8",19,"^9",258,"^:",28,"^=6","^=7","^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"^Y","^78","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",4,"^=;",false,"^7",258,"^=<","^=7","^9",258,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"~$do-macroexpand-check",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3881,"^8",8,"^9",3881,"^:",28,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=[","~$mac-var"]]]]]],"^=@",true,"^Y","^7<","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["^1?","^=[","^BX"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3881,"^=<",["^U",[null,"^=P"]],"^9",3881,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=[","^BX"]]]]]],"~$build-dot-form",["^ ","^Y","^:N","^6","cljs/analyzer.cljc","^7",3353,"^8",1,"^9",3353,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3353,"^8",11,"^9",3353,"^:",25],"^=6","^2N"],"~$register-constant!",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",571,"^8",8,"^9",571,"^:",26,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["~$val"],["^1?","^B["]]]]],"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^B["],["^1?","^B["]],"^=4",["^1J",[["^B["],["^1?","^B["]]],"^=:",["^1J",[null,null]]]],"^=@",true,"^Y","^7;","^6","cljs/analyzer.cljc","^:",26,"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^B["],["^1?","^B["]],"^=4",["^1J",[["^B["],["^1?","^B["]]],"^=:",["^1J",[null,null]]],"^=8",[["^B["],["^1?","^B["]],"^=9",null,"^=M",2,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",1,"^=;",false,"^=6","^=H"],["^ ","^=M",2,"^=;",false,"^=6",["^U",[null,"^=H"]]]],"^7",571,"^9",571,"^==",2,"^=>",true,"^=4",["^1J",[["^B["],["^1?","^B["]]]],"~$js-star-interp",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3479,"^8",7,"^9",3479,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^1?","~$s"]]]]]],"^Y","^:M","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^1?","~$s"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3479,"^=<","^=G","^9",3479,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$s"]]]]]],"~$*recur-frames*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1353,"^8",16,"^9",1353,"^:",30,"^>N",true],"^Y","^7@","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^>N",true,"^7",1353,"^9",1353,"^=6","^=H"],"~$STRING_SYM",["^ ","^Y","^7A","^6","cljs/analyzer.cljc","^7",230,"^8",4,"^9",230,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",230,"^8",9,"^9",230,"^:",19],"^=6","^9>"],"~$analyze-fn-methods-pass2*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2124,"^8",7,"^9",2124,"^:",32,"^=4",["^1J",["^=5",["^1J",[["~$menv","^>S","^>T","~$meths"]]]]]],"^Y","^7F","^6","cljs/analyzer.cljc","^:",32,"^=8",["^1J",[["^C4","^>S","^>T","^C5"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2124,"^=<","^=G","^9",2124,"^==",4,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^C4","^>S","^>T","^C5"]]]]]],"^W",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3964,"^8",7,"^9",3964,"^:",20,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]],"^>8","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"^Y","^7E","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["^1?","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3964,"^9",3964,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]],"^>8","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"~$resolve-macro-var",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1311,"^8",7,"^9",1311,"^:",24,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]],"^>8","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"^Y","^8D","^6","cljs/analyzer.cljc","^:",24,"^=8",["^1J",[["^1?","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1311,"^=<",["^U",[null,"^=H","^=P"]],"^9",1311,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]],"^>8","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"~$analyze-let-binding-init",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2295,"^8",7,"^9",2295,"^:",31,"^=4",["^1J",["^=5",["^1J",[["^1?","~$init","^A9"]]]]]],"^Y","^;2","^6","cljs/analyzer.cljc","^:",31,"^=8",["^1J",[["^1?","^C8","^A9"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2295,"^9",2295,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^C8","^A9"]]]]]],"~$infer-tag",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1464,"^8",7,"^9",1464,"^:",16,"^=4",["^1J",["^=5",["^1J",[["^1?","~$e"]]]]],"^>8","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"^Y","^;0","^6","cljs/analyzer.cljc","^:",16,"^=8",["^1J",[["^1?","~$e"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1464,"^=<",["^U",[null,"^=H"]],"^9",1464,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$e"]]]]],"^>8","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"~$canonicalize-import-specs",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2999,"^8",7,"^9",2999,"^:",32,"^=4",["^1J",["^=5",["^1J",[["~$specs"]]]]]],"^Y","^7K","^6","cljs/analyzer.cljc","^:",32,"^=8",["^1J",[["^C;"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2999,"^9",2999,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^C;"]]]]]],"~$analyze-form-seq",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4683,"^8",7,"^9",4683,"^:",23,"^=4",["^1J",["^=5",["^1J",[["~$forms"],["^C=","^>J"],["^C=","^>J","~$return-last?"]]]]],"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^C="],["^C=","^>J"],["^C=","^>J","^C>"]],"^=4",["^1J",[["^C="],["^C=","^>J"],["^C=","^>J","^C>"]]],"^=:",["^1J",[null,null,null]]]],"^Y","^:2","^6","cljs/analyzer.cljc","^:",23,"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^C="],["^C=","^>J"],["^C=","^>J","^C>"]],"^=4",["^1J",[["^C="],["^C=","^>J"],["^C=","^>J","^C>"]]],"^=:",["^1J",[null,null,null]]],"^=8",[["^C="],["^C=","^>J"],["^C=","^>J","^C>"]],"^=9",null,"^=M",3,"^=:",["^1J",[null,null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",1,"^=;",false,"^=6","^=H"],["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",3,"^=;",false]],"^7",4683,"^9",4683,"^==",3,"^=>",true,"^=4",["^1J",[["^C="],["^C=","^>J"],["^C=","^>J","^C>"]]]],"~$analyze-let-body*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2353,"^8",7,"^9",2353,"^:",24,"^=4",["^1J",["^=5",["^1J",[["^1?","^A7","^=Z"]]]]]],"^Y","^7I","^6","cljs/analyzer.cljc","^:",24,"^=8",["^1J",[["^1?","^A7","^=Z"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2353,"^=<","^=H","^9",2353,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^A7","^=Z"]]]]]],"~$analyze-js-star*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3556,"^8",7,"^9",3556,"^:",23,"^=4",["^1J",["^=5",["^1J",[["^1?","^BU","^>7","^=["]]]]]],"^Y","^6M","^6","cljs/analyzer.cljc","^:",23,"^=8",["^1J",[["^1?","^BU","^>7","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3556,"^=<","^=O","^9",3556,"^==",4,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^BU","^>7","^=["]]]]]],"~$inferred-rename-macros",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2689,"^8",7,"^9",2689,"^:",29,"^=4",["^1J",["^=5",["^1J",[["~$rename-macros","^1?"]]]]]],"^Y","^7P","^6","cljs/analyzer.cljc","^:",29,"^=8",["^1J",[["^CB","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2689,"^=<",["^U",[null,"^=G","^=H"]],"^9",2689,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^CB","^1?"]]]]]],"~$parse-ns-error-msg",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2750,"^8",7,"^9",2750,"^:",25,"^=4",["^1J",["^=5",["^1J",[["^AJ","^A3"]]]]]],"^Y","^6R","^6","cljs/analyzer.cljc","^:",25,"^=8",["^1J",[["^AJ","^A3"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2750,"^=<","^1@","^9",2750,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^AJ","^A3"]]]]]],"~$missing-use-macro?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2655,"^8",7,"^9",2655,"^:",25,"^=4",["^1J",["^=5",["^1J",[["^?I","^=T"]]]]]],"^Y","^7T","^6","cljs/analyzer.cljc","^:",25,"^=8",["^1J",[["^?I","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2655,"^=<",["^U",["^=7","^=P"]],"^9",2655,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^?I","^=T"]]]]]],"~$CLJ_NIL_SYM",["^ ","^Y","^6U","^6","cljs/analyzer.cljc","^7",224,"^8",4,"^9",224,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",224,"^8",9,"^9",224,"^:",20],"^=6","^9>"],"~$record-ns+name",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4060,"^8",7,"^9",4060,"^:",21,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"^Y","^6V","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4060,"^=<","^4M","^9",4060,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"~$analyzed",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3614,"^8",7,"^9",3614,"^:",15,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]],"^>8","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"^Y","^7V","^6","cljs/analyzer.cljc","^:",15,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3614,"^=<",["^U",["^=G","^=H","^BP","^=P"]],"^9",3614,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]],"^>8","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"~$resolve-symbol",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4288,"^8",7,"^9",4288,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^=T"]]]]]],"^Y","^:4","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4288,"^=<",["^U",[null,"^=H"]],"^9",4288,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=T"]]]]]],"~$missing-renames",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2674,"^8",7,"^9",2674,"^:",22,"^=4",["^1J",["^=5",["^1J",[["^@8","^1?"]]]]]],"^Y","^6[","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^@8","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2674,"^=<",["^U",[null,"^=G","^=H"]],"^9",2674,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^@8","^1?"]]]]]],"~$resolve*",["^ ","^Y","^7Z","^6","cljs/analyzer.cljc","^7",1071,"^8",1,"^9",1071,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1071,"^8",11,"^9",1071,"^:",19],"^=6","^2N"],"~$default-passes",["^ ","^Y","^7X","^6","cljs/analyzer.cljc","^7",4231,"^8",1,"^9",4231,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4231,"^8",6,"^9",4231,"^:",20],"^=6","^>@"],"~$*cljs-macros-path*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",56,"^8",16,"^9",56,"^:",34,"^>N",true],"^Y","^::","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^>N",true,"^7",56,"^9",56,"^=6","^=H"],"~$confirm-var-exist-warning",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",796,"^8",7,"^9",796,"^:",32,"^=4",["^1J",["^=5",["^1J",[["^1?","^@R","^B@"]]]]]],"^Y","^80","^6","cljs/analyzer.cljc","^:",32,"^=8",["^1J",[["^1?","^@R","^B@"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",796,"^=<","^AY","^9",796,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@R","^B@"]]]]]],"~$repeat-char",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",536,"^8",8,"^9",536,"^:",19,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["~$c","~$n"]]]]]],"^=@",true,"^Y","^76","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["~$c","~$n"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",536,"^9",536,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$c","~$n"]]]]]],"~$unchecked-arrays?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",165,"^8",7,"^9",165,"^:",24,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"^Y","^75","^6","cljs/analyzer.cljc","^:",24,"^=8",["^1J",[[]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",165,"^=<","^=7","^9",165,"^==",0,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"~$core-ns?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1843,"^8",8,"^9",1843,"^:",16,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["~$ns-sym"]]]]]],"^=@",true,"^Y","^:9","^6","cljs/analyzer.cljc","^:",16,"^=8",["^1J",[["^CQ"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1843,"^=<","^=7","^9",1843,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^CQ"]]]]]],"~$analyze-dot",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3405,"^8",7,"^9",3405,"^:",18,"^=4",["^1J",["^=5",["^1J",[["^1?","^>=","^@Z","~$member+","^=["]]]]]],"^Y","^:?","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["^1?","^>=","^@Z","^CS","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3405,"^9",3405,"^==",5,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^>=","^@Z","^CS","^=["]]]]]],"~$analyze-do-statements",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2269,"^8",7,"^9",2269,"^:",28,"^=4",["^1J",["^=5",["^1J",[["^1?","^=Z"]]]]]],"^Y","^87","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["^1?","^=Z"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2269,"^9",2269,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=Z"]]]]]],"~$get-line",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",634,"^8",7,"^9",634,"^:",15,"^=4",["^1J",["^=5",["^1J",[["~$x","^1?"]]]]]],"^Y","^4Z","^6","cljs/analyzer.cljc","^:",15,"^=8",["^1J",[["~$x","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",634,"^=<","^=H","^9",634,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x","^1?"]]]]]],"~$analyze-do-statements*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2266,"^8",7,"^9",2266,"^:",29,"^=4",["^1J",["^=5",["^1J",[["^1?","^=Z"]]]]]],"^Y","^79","^6","cljs/analyzer.cljc","^:",29,"^=8",["^1J",[["^1?","^=Z"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2266,"^=<","^=G","^9",2266,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=Z"]]]]]],"~$analyze-seq",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3981,"^8",7,"^9",3981,"^:",18,"^=4",["^1J",["^=5",["^1J",[["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]]]]],"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]],"^=4",["^1J",[["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]]],"^=:",["^1J",[null,null]]]],"^Y","^8?","^6","cljs/analyzer.cljc","^:",18,"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]],"^=4",["^1J",[["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]]],"^=:",["^1J",[null,null]]],"^=8",[["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]],"^=9",null,"^=M",4,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",3,"^=;",false,"^=6","^=H"],["^ ","^=M",4,"^=;",false,"^=6","^=H"]],"^7",3981,"^9",3981,"^==",4,"^=>",true,"^=4",["^1J",[["^1?","^=[","^>I"],["^1?","^=[","^>I","^>J"]]]],"~$desugar-dotted-expr",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3732,"^8",7,"^9",3732,"^:",26,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>H"],"^1O","^@U"]]]]]]],"^Y","^4U","^6","cljs/analyzer.cljc","^:",26,"^=8",["^1J",[["~$p__61491"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3732,"^9",3732,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>H"],"^1O","^@U"]]]]]]],"~$private-var-access-exceptions",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1117,"^8",16,"^9",1117,"^:",45,"^=@",true],"^=@",true,"^Y","^8<","^6","cljs/analyzer.cljc","^:",45,"^8",1,"^7",1117,"^9",1117,"^=6","^>E","^>8","Specially-treated symbols for which we don't trigger :private-var-access warnings."],"~$all-values?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3631,"^8",8,"^9",3631,"^:",19,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^=Z"]]]]],"^=6","^=7"],"^=@",true,"^Y","^4T","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^=Z"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3631,"^=<","^=7","^9",3631,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=Z"]]]]]],"~$find-def-clash",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3057,"^8",7,"^9",3057,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^1?","^1K","~$segments"]]]]]],"^Y","^8B","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^1?","^1K","^D1"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3057,"^=<","^=P","^9",3057,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^1K","^D1"]]]]]],"~$has-error-data?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",771,"^8",7,"^9",771,"^:",22,"^=4",["^1J",["^=5",["^1J",[["~$ex"]]]]],"^=6","^=7"],"^Y","^4R","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^D3"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",771,"^=<","^=7","^9",771,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^D3"]]]]]],"~$get-expander*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3836,"^8",7,"^9",3836,"^:",20,"^=4",["^1J",["^=5",["^1J",[["^=T","^1?"]]]]]],"^Y","^8=","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["^=T","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3836,"^=<",["^U",["^=H","^=P"]],"^9",3836,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=T","^1?"]]]]]],"~$fn-name-var",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2105,"^8",7,"^9",2105,"^:",18,"^=4",["^1J",["^=5",["^1J",[["^1?","^>S","^>I"]]]]]],"^Y","^8G","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["^1?","^>S","^>I"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2105,"^=<",["^U",["^=H","^=P"]],"^9",2105,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^>S","^>I"]]]]]],"~$munge-node-lib",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1042,"^8",7,"^9",1042,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^>I"]]]]]],"^Y","^8E","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^>I"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1042,"^=<","^1@","^9",1042,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>I"]]]]]],"~$internal-js-module-exists?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",813,"^8",8,"^9",813,"^:",34,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["~$js-module-index","^>Y"]]]]]],"^=@",true,"^Y","^8J","^6","cljs/analyzer.cljc","^:",34,"^=8",["^1J",[["^D8","^>Y"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",813,"^=<","^=7","^9",813,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^D8","^>Y"]]]]]],"~$*load-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",61,"^8",16,"^9",61,"^:",29,"^>N",true],"^Y","^7B","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^>N",true,"^7",61,"^9",61,"^=6","^=H"],"~$add-types",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",961,"^8",7,"^9",961,"^:",16,"^=4",["^1J",["^=5",["^1J",[[],["~$t1"],["^D;","~$t2"],["^D;","^D<","~$&","~$ts"]]]]],"^>8","Produces a union of types.","^=L",["^ ","^=;",true,"^=M",2,"^==",2,"^=8",[[],["^D;"],["^D;","^D<"]],"^=4",["^1J",[[],["^D;"],["^D;","^D<"],["^D;","^D<","~$&","^D="]]],"^=:",["^1J",[null,null,null,null]]]],"^Y","^53","^6","cljs/analyzer.cljc","^:",16,"^=L",["^ ","^=;",true,"^=M",2,"^==",2,"^=8",[[],["^D;"],["^D;","^D<"]],"^=4",["^1J",[[],["^D;"],["^D;","^D<"],["^D;","^D<","~$&","^D="]]],"^=:",["^1J",[null,null,null,null]]],"^=8",[[],["^D;"],["^D;","^D<"]],"^=9",null,"^=M",2,"^=:",["^1J",[null,null,null,null]],"^8",1,"^=;",true,"^=N",[["^ ","^=M",0,"^=;",false,"^=6","^9>"],["^ ","^=M",1,"^=;",false],["^ ","^=M",2,"^=;",false,"^=6",["^U",[null,"^=G","^=H","^9>","^=P"]]],["^ ","^=M",2,"^=;",true,"^=6","^=H"]],"^7",961,"^9",961,"^==",2,"^=>",true,"^=4",["^1J",[[],["^D;"],["^D;","^D<"],["^D;","^D<","~$&","^D="]]],"^>8","Produces a union of types."],"~$excluded?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3809,"^8",7,"^9",3809,"^:",16,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]],"^=6","^=7"],"^Y","^4[","^6","cljs/analyzer.cljc","^:",16,"^=8",["^1J",[["^1?","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3809,"^=<","^=7","^9",3809,"^==",2,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]]],"~$empty-env",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",692,"^8",7,"^9",692,"^:",16,"^=4",["^1J",["^=5",["^1J",[[]]]]],"^>8","Construct an empty analysis environment. Required to analyze forms."],"^Y","^7H","^6","cljs/analyzer.cljc","^:",16,"^=8",["^1J",[[]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",692,"^9",692,"^==",0,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[]]]]],"^>8","Construct an empty analysis environment. Required to analyze forms."],"~$public-name?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",914,"^8",7,"^9",914,"^:",19,"^=4",["^1J",["^=5",["^1J",[["^1K","^=T"]]]]],"^>8","Is sym public?","^=6","^=7"],"^Y","^6J","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^1K","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",914,"^=<","^=7","^9",914,"^==",2,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1K","^=T"]]]]],"^>8","Is sym public?"],"~$default-warning-handler",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",520,"^8",7,"^9",520,"^:",30,"^=4",["^1J",["^=5",["^1J",[["~$warning-type","^1?","~$extra"]]]]]],"^Y","^6N","^6","cljs/analyzer.cljc","^:",30,"^=8",["^1J",[["^DB","^1?","^DC"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",520,"^=<",["^U",[null,"^=P"]],"^9",520,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^DB","^1?","^DC"]]]]]],"~$resolve-ns-alias",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",874,"^8",7,"^9",874,"^:",23,"^=4",["^1J",["^=5",["^1J",[["^1?","^>I"],["^1?","^>I","~$not-found"]]]]],"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^1?","^>I"],["^1?","^>I","^DE"]],"^=4",["^1J",[["^1?","^>I"],["^1?","^>I","^DE"]]],"^=:",["^1J",[null,null]]]],"^Y","^7O","^6","cljs/analyzer.cljc","^:",23,"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^1?","^>I"],["^1?","^>I","^DE"]],"^=4",["^1J",[["^1?","^>I"],["^1?","^>I","^DE"]]],"^=:",["^1J",[null,null]]],"^=8",[["^1?","^>I"],["^1?","^>I","^DE"]],"^=9",null,"^=M",3,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",3,"^=;",false,"^=6",["^U",[null,"^=H"]]]],"^7",874,"^9",874,"^==",3,"^=>",true,"^=4",["^1J",[["^1?","^>I"],["^1?","^>I","^DE"]]]],"~$intern-macros",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",640,"^8",7,"^9",640,"^:",20,"^=4",["^1J",["^=5",["^1J",[["^1K"],["^1K","~$reload"]]]]],"^>8","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.","^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^1K"],["^1K","^DG"]],"^=4",["^1J",[["^1K"],["^1K","^DG"]]],"^=:",["^1J",[null,null]]]],"^Y","^6O","^6","cljs/analyzer.cljc","^:",20,"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^1K"],["^1K","^DG"]],"^=4",["^1J",[["^1K"],["^1K","^DG"]]],"^=:",["^1J",[null,null]]],"^=8",[["^1K"],["^1K","^DG"]],"^=9",null,"^=M",2,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",1,"^=;",false,"^=6","^=H"],["^ ","^=M",2,"^=;",false,"^=6",["^U",[null,"^=H","^=P"]]]],"^7",640,"^9",640,"^==",2,"^=>",true,"^=4",["^1J",[["^1K"],["^1K","^DG"]]],"^>8","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment."],"~$const-expr->constant-value",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1828,"^8",7,"^9",1828,"^:",33,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>H"],"^1O","~$e"]]]]]]],"^Y","^6P","^6","cljs/analyzer.cljc","^:",33,"^=8",["^1J",[["~$p__60997"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1828,"^9",1828,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[["^ ","^?O",["^>H"],"^1O","~$e"]]]]]]],"~$BOOLEAN_OR_SEQ",["^ ","^Y","^6Q","^6","cljs/analyzer.cljc","^7",1412,"^8",1,"^9",1412,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1412,"^8",6,"^9",1412,"^:",20],"^=6","^>E"],"~$*macro-infer*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",63,"^8",16,"^9",63,"^:",29,"^>N",true],"^Y","^6K","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^>N",true,"^7",63,"^9",63,"^=6","^=H"],"~$DOT_SYM",["^ ","^Y","^4?","^6","cljs/analyzer.cljc","^7",238,"^8",4,"^9",238,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",238,"^8",9,"^9",238,"^:",16],"^=6","^9>"],"~$gen-constant-id",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",551,"^8",7,"^9",551,"^:",22,"^=4",["^1J",["^=5",["^1J",[["~$value"]]]]]],"^Y","^7S","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^DN"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",551,"^=<",["^U",["^=H","^9>"]],"^9",551,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^DN"]]]]]],"~$BOOLEAN_SYM",["^ ","^Y","^7[","^6","cljs/analyzer.cljc","^7",232,"^8",1,"^9",232,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",232,"^8",6,"^9",232,"^:",17],"^=6","^9>"],"~$macro-autoload-ns?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2935,"^8",7,"^9",2935,"^:",25,"^=4",["^1J",["^=5",["^1J",[["^=["]]]]],"^>8","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.","^=6","^=7"],"^Y","^7W","^6","cljs/analyzer.cljc","^:",25,"^=8",["^1J",[["^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2935,"^=<","^=7","^9",2935,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=["]]]]],"^>8","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true."],"~$get-tag",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1376,"^8",7,"^9",1376,"^:",14,"^=4",["^1J",["^=5",["^1J",[["~$e"]]]]]],"^Y","^7Y","^6","cljs/analyzer.cljc","^:",14,"^=8",["^1J",[["~$e"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1376,"^=<","^=H","^9",1376,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$e"]]]]]],"~$implicit-nses",["^ ","^Y","^70","^6","cljs/analyzer.cljc","^7",787,"^8",1,"^9",787,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",787,"^8",6,"^9",787,"^:",19],"^=6","^>E"],"~$valid-proto",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1804,"^8",7,"^9",1804,"^:",18,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"^Y","^4B","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1804,"^=<",["^U",["^9>","^=P"]],"^9",1804,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"~$normalize-js-tag",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",930,"^8",7,"^9",930,"^:",23,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"^Y","^73","^6","cljs/analyzer.cljc","^:",23,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",930,"^=<",["^U",[null,"^=G","^BP","^=P"]],"^9",930,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"~$analyze-list",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4018,"^8",7,"^9",4018,"^:",19,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"^Y","^:P","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^1?","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4018,"^=<","^=H","^9",4018,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"~$warning",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",732,"^8",7,"^9",732,"^:",14,"^=4",["^1J",["^=5",["^1J",[["^DB","^1?","^DC"]]]]]],"^Y","^9@","^6","cljs/analyzer.cljc","^:",14,"^=8",["^1J",[["^DB","^1?","^DC"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",732,"^=<","^=P","^9",732,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^DB","^1?","^DC"]]]]]],"~$implicit-import?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",789,"^8",7,"^9",789,"^:",23,"^=4",["^1J",["^=5",["^1J",[["^1?","^@R","^B@"]]]]],"^=6","^=7"],"^Y","^9A","^6","cljs/analyzer.cljc","^:",23,"^=8",["^1J",[["^1?","^@R","^B@"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",789,"^=<","^=7","^9",789,"^==",3,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@R","^B@"]]]]]],"~$missing-use-macros",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2679,"^8",7,"^9",2679,"^:",25,"^=4",["^1J",["^=5",["^1J",[["^B:","^1?"]]]]]],"^Y","^3R","^6","cljs/analyzer.cljc","^:",25,"^=8",["^1J",[["^B:","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2679,"^=<",["^U",[null,"^=G","^=H"]],"^9",2679,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^B:","^1?"]]]]]],"~$analyze*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4235,"^8",7,"^9",4235,"^:",15,"^=4",["^1J",["^=5",["^1J",[["^1?","^=[","^>I","^>J"]]]]]],"^Y","^:Q","^6","cljs/analyzer.cljc","^:",15,"^=8",["^1J",[["^1?","^=[","^>I","^>J"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4235,"^=<",["^U",[null,"^=H"]],"^9",4235,"^==",4,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=[","^>I","^>J"]]]]]],"~$-cljs-macros-loaded",["^ ","^Y","^3U","^6","cljs/analyzer.cljc","^7",122,"^8",1,"^9",122,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",122,"^8",6,"^9",122,"^:",25],"^=6","~$cljs.core/Atom"],"~$check-uses",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2692,"^8",7,"^9",2692,"^:",17,"^=4",["^1J",["^=5",["^1J",[["^?F","^1?"]]]]]],"^Y","^9D","^6","cljs/analyzer.cljc","^:",17,"^=8",["^1J",[["^?F","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2692,"^=<","^=P","^9",2692,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^?F","^1?"]]]]]],"~$set-test-induced-tags",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1659,"^8",8,"^9",1659,"^:",29,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@>"]]]]],"^>8","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"^=@",true,"^Y","^9E","^6","cljs/analyzer.cljc","^:",29,"^=8",["^1J",[["^1?","^@>"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1659,"^=<",["^U",[null,"^=G","^=H"]],"^9",1659,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@>"]]]]],"^>8","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"~$find-matching-method",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1383,"^8",7,"^9",1383,"^:",27,"^=4",["^1J",["^=5",["^1J",[["~$f","~$params"]]]]]],"^Y","^3W","^6","cljs/analyzer.cljc","^:",27,"^=8",["^1J",[["~$f","^E3"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1383,"^=<",["^U",["^=H","^=P"]],"^9",1383,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$f","^E3"]]]]]],"~$*private-var-access-nowarn*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",66,"^8",16,"^9",66,"^:",43,"^>N",true],"^Y","^9M","^6","cljs/analyzer.cljc","^:",43,"^8",1,"^>N",true,"^7",66,"^9",66,"^=6","^=H"],"~$invoke-arg-type-validators",["^ ","^Y","^9H","^6","cljs/analyzer.cljc","^7",4161,"^8",1,"^9",4161,"^:",32,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4161,"^8",6,"^9",4161,"^:",32],"^=6","^=O"],"~$*cljs-file*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",51,"^8",16,"^9",51,"^:",27,"^>N",true],"^Y","^9N","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^>N",true,"^7",51,"^9",51,"^=6","^=H"],"~$CLJS_CORE_MACROS_SYM",["^ ","^Y","^:X","^6","cljs/analyzer.cljc","^7",247,"^8",4,"^9",247,"^:",29,"^5",["^ ","^6","cljs/analyzer.cljc","^7",247,"^8",9,"^9",247,"^:",29],"^=6","^9>"],"~$*file-defs*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",65,"^8",16,"^9",65,"^:",27,"^>N",true],"^Y","^9L","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^>N",true,"^7",65,"^9",65,"^=6","^=H"],"~$infer-if",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1420,"^8",7,"^9",1420,"^:",15,"^=4",["^1J",["^=5",["^1J",[["^1?","~$e"]]]]]],"^Y","^;3","^6","cljs/analyzer.cljc","^:",15,"^=8",["^1J",[["^1?","~$e"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1420,"^=<",["^U",[null,"^=G","^=H","^9>"]],"^9",1420,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$e"]]]]]],"~$topo-sort",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",282,"^8",10,"^9",282,"^:",19,"^=4",["^1J",["^=5",["^1J",[["~$x","~$get-deps"],["~$x","~$depth","~$state","~$memo-get-deps"]]]]],"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["~$x","^E;"],["~$x","^E<","^E=","^E>"]],"^=4",["^1J",[["~$x","^E;"],["~$x","^E<","^E=","^E>"]]],"^=:",["^1J",[null,null]]]],"^Y","^47","^6","cljs/analyzer.cljc","^:",19,"^=L",["^ ","^=;",false,"^=M",4,"^==",4,"^=8",[["~$x","^E;"],["~$x","^E<","^E=","^E>"]],"^=4",["^1J",[["~$x","^E;"],["~$x","^E<","^E=","^E>"]]],"^=:",["^1J",[null,null]]],"^=8",[["~$x","^E;"],["~$x","^E<","^E=","^E>"]],"^=9",null,"^=M",4,"^=:",["^1J",[null,null]],"^8",4,"^=;",false,"^=N",[["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",4,"^=;",false,"^=6",["^U",["^4M","^=P"]]]],"^7",282,"^9",282,"^==",4,"^=>",true,"^=4",["^1J",[["~$x","^E;"],["~$x","^E<","^E=","^E>"]]]],"~$*verbose*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",120,"^8",16,"^9",120,"^:",25,"^>N",true],"^Y","^9P","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^>N",true,"^7",120,"^9",120,"^=6","^=H"],"~$analyze-js-value",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4036,"^8",7,"^9",4036,"^:",23,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"^Y","^46","^6","cljs/analyzer.cljc","^:",23,"^=8",["^1J",[["^1?","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4036,"^=<","^=O","^9",4036,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"~$ns->module-type",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1065,"^8",7,"^9",1065,"^:",22,"^=4",["^1J",["^=5",["^1J",[["^1K"]]]]]],"^Y","^8N","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^1K"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1065,"^=<",["^U",["^49","^=P"]],"^9",1065,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1K"]]]]]],"~$source-info",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",712,"^8",7,"^9",712,"^:",18,"^=4",["^1J",["^=5",["^1J",[["^1?"],["^>I","^1?"]]]]],"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^1?"],["^>I","^1?"]],"^=4",["^1J",[["^1?"],["^>I","^1?"]]],"^=:",["^1J",[null,null]]]],"^Y","^9Y","^6","cljs/analyzer.cljc","^:",18,"^=L",["^ ","^=;",false,"^=M",2,"^==",2,"^=8",[["^1?"],["^>I","^1?"]],"^=4",["^1J",[["^1?"],["^>I","^1?"]]],"^=:",["^1J",[null,null]]],"^=8",[["^1?"],["^>I","^1?"]],"^=9",null,"^=M",2,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",1,"^=;",false,"^=6",["^U",["^=H","^=P"]]],["^ ","^=M",2,"^=;",false,"^=6",["^U",["^=H","^=O","^=P"]]]],"^7",712,"^9",712,"^==",2,"^=>",true,"^=4",["^1J",[["^1?"],["^>I","^1?"]]]],"~$analyze-fn-method-param",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2035,"^8",7,"^9",2035,"^:",30,"^=4",["^1J",["^=5",["^1J",[["^1?"]]]]]],"^Y","^8R","^6","cljs/analyzer.cljc","^:",30,"^=8",["^1J",[["^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2035,"^=<","^AY","^9",2035,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?"]]]]]],"~$repl-self-require?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4113,"^8",8,"^9",4113,"^:",26,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^AO"]]]]]],"^=@",true,"^Y","^8Y","^6","cljs/analyzer.cljc","^:",26,"^=8",["^1J",[["^1?","^AO"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4113,"^=<",["^U",["^=H","^=P"]],"^9",4113,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^AO"]]]]]],"~$analyze-set",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4030,"^8",7,"^9",4030,"^:",18,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"^Y","^8P","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["^1?","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4030,"^=<","^=H","^9",4030,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=["]]]]]],"~$numeric-type?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3503,"^8",7,"^9",3503,"^:",20,"^=4",["^1J",["^=5",["^1J",[["~$t"]]]]],"^=6","^=7"],"^Y","^8X","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["~$t"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3503,"^=<","^=7","^9",3503,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$t"]]]]]],"~$munge-path",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",270,"^8",10,"^9",270,"^:",20,"^=4",["^1J",["^=5",["^1J",[["~$ss"]]]]]],"^Y","^8L","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["^EH"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",4,"^=;",false,"^7",270,"^=<",["^U",["^=H","^1@","^9>"]],"^9",270,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^EH"]]]]]],"~$ast?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",297,"^8",7,"^9",297,"^:",11,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]],"^=6","^=7"],"^Y","^3;","^6","cljs/analyzer.cljc","^:",11,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",297,"^=<","^=7","^9",297,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"~$checked-arrays",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",174,"^8",7,"^9",174,"^:",21,"^=4",["^1J",["^=5",["^1J",[[]]]]],"^>8","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"^Y","^3?","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[[]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",174,"^=<",["^U",["^=H","^=P"]],"^9",174,"^==",0,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[]]]]],"^>8","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"~$elide-env",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1807,"^8",7,"^9",1807,"^:",16,"^=4",["^1J",["^=5",["^1J",[["^1?","^@9","^>J"]]]]]],"^Y","^8Z","^6","cljs/analyzer.cljc","^:",16,"^=8",["^1J",[["^1?","^@9","^>J"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1807,"^=<",["^U",["^=G","^=P"]],"^9",1807,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^@9","^>J"]]]]]],"~$js-module-exists?*",["^ ","^Y","^:3","^6","cljs/analyzer.cljc","^7",824,"^8",1,"^9",824,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",824,"^8",6,"^9",824,"^:",24],"^=6","^AY"],"~$parse-require-spec",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2857,"^8",7,"^9",2857,"^:",25,"^=4",["^1J",["^=5",["^1J",[["^1?","^AI","^AO","~$aliases","^AJ"]]]]]],"^Y","^:B","^6","cljs/analyzer.cljc","^:",25,"^=8",["^1J",[["^1?","^AI","^AO","^EN","^AJ"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2857,"^=<",["^U",["^=H","^=P"]],"^9",2857,"^==",5,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^AI","^AO","^EN","^AJ"]]]]]],"~$analyze-wrap-meta",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4089,"^8",7,"^9",4089,"^:",24,"^=4",["^1J",["^=5",["^1J",[["^@U"]]]]]],"^Y","^92","^6","cljs/analyzer.cljc","^:",24,"^=8",["^1J",[["^@U"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4089,"^=<",["^U",[null,"^=O"]],"^9",4089,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^@U"]]]]]],"~$ANY_SYM",["^ ","^Y","^:<","^6","cljs/analyzer.cljc","^7",251,"^8",1,"^9",251,"^:",13,"^5",["^ ","^6","cljs/analyzer.cljc","^7",251,"^8",6,"^9",251,"^:",13],"^=6","^9>"],"~$property-symbol?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3340,"^8",16,"^9",3340,"^:",32,"^=@",true],"^=@",true,"^Y","^3G","^6","cljs/analyzer.cljc","^:",32,"^=8",["^1J",[["~$p1__61415#"]]],"^=9",null,"^=:",["^1J",[]],"^8",1,"^=;",false,"^7",3340,"^=<","^=7","^9",3340,"^==",1,"^=>",true,"^=4",null],"~$analyze-js-star-args",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3546,"^8",8,"^9",3546,"^:",28,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["~$js-op","^1?","^>7"]]]]]],"^=@",true,"^Y","^3B","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["^ET","^1?","^>7"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3546,"^=<",["^U",["^=H","^=P"]],"^9",3546,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^ET","^1?","^>7"]]]]]],"~$cljs-seq?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",254,"^8",19,"^9",254,"^:",28,"^=6","^=7","^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"^Y","^98","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",4,"^=;",false,"^7",254,"^=<","^=7","^9",254,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"~$get-js-tag",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3472,"^8",7,"^9",3472,"^:",17,"^=4",["^1J",["^=5",["^1J",[["^=["]]]]]],"^Y","^97","^6","cljs/analyzer.cljc","^:",17,"^=8",["^1J",[["^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3472,"^=<",["^U",["^=H","^9>","^=P"]],"^9",3472,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=["]]]]]],"~$parse",["^ ","^Y","^9<","^6","cljs/analyzer.cljc","^7",1493,"^8",1,"^9",1493,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1493,"^8",11,"^9",1493,"^:",16],"^=6","^2N"],"~$*analyze-deps*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",59,"^8",16,"^9",59,"^:",30,"^>N",true],"^Y","^:F","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^>N",true,"^7",59,"^9",59,"^=6","^=H"],"~$analyze-let-bindings*",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2306,"^8",7,"^9",2306,"^:",28,"^=4",["^1J",["^=5",["^1J",[["^=X","^=Y","^>H"]]]]]],"^Y","^7:","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["^=X","^=Y","^>H"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2306,"^=<","^>@","^9",2306,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=X","^=Y","^>H"]]]]]],"~$analysis-error?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",766,"^8",7,"^9",766,"^:",22,"^=4",["^1J",["^=5",["^1J",[["^D3"]]]]],"^=6","^=7"],"^Y","^:H","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^D3"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",766,"^=<","^=7","^9",766,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^D3"]]]]]],"~$replace-env-pass",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1810,"^8",7,"^9",1810,"^:",23,"^=4",["^1J",["^=5",["^1J",[["~$new-env"]]]]]],"^Y","^:G","^6","cljs/analyzer.cljc","^:",23,"^=8",["^1J",[["^F0"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1810,"^=<","^AY","^9",1810,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^F0"]]]]]],"~$valid-arity?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3636,"^8",8,"^9",3636,"^:",20,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^=A","^=B"]]]]],"^=6","^=7"],"^=@",true,"^Y","^7=","^6","cljs/analyzer.cljc","^:",20,"^=8",["^1J",[["^=A","^=B"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3636,"^=<","^=7","^9",3636,"^==",2,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=A","^=B"]]]]]],"~$parse-ns-excludes",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2783,"^8",7,"^9",2783,"^:",24,"^=4",["^1J",["^=5",["^1J",[["^1?","^>7"]]]]]],"^Y","^:R","^6","cljs/analyzer.cljc","^:",24,"^=8",["^1J",[["^1?","^>7"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2783,"^=<",["^U",[null,"^=H"]],"^9",2783,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^>7"]]]]]],"~$analyze-fn-methods-pass2",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2127,"^8",7,"^9",2127,"^:",31,"^=4",["^1J",["^=5",["^1J",[["^C4","^>S","^>T","^C5"]]]]]],"^Y","^:U","^6","cljs/analyzer.cljc","^:",31,"^=8",["^1J",[["^C4","^>S","^>T","^C5"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2127,"^=<","^=G","^9",2127,"^==",4,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^C4","^>S","^>T","^C5"]]]]]],"~$core-name?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",903,"^8",7,"^9",903,"^:",17,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]],"^>8","Is sym visible from core in the current compilation namespace?","^=6","^=7"],"^Y","^7?","^6","cljs/analyzer.cljc","^:",17,"^=8",["^1J",[["^1?","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",903,"^=<","^=7","^9",903,"^==",2,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]],"^>8","Is sym visible from core in the current compilation namespace?"],"~$get-let-tag",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2299,"^8",7,"^9",2299,"^:",18,"^=4",["^1J",["^=5",["^1J",[["^>I","~$init-expr"]]]]]],"^Y","^7D","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["^>I","^F6"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2299,"^=<","^=H","^9",2299,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>I","^F6"]]]]]],"~$specials",["^ ","^Y","^:V","^6","cljs/analyzer.cljc","^7",1350,"^8",1,"^9",1350,"^:",14,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1350,"^8",6,"^9",1350,"^:",14],"^=6","^>E"],"~$elide-irrelevant-meta",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4086,"^8",7,"^9",4086,"^:",28,"^=4",["^1J",["^=5",["^1J",[["~$m"]]]]]],"^Y","^:S","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["~$m"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4086,"^=<",["^U",["^=G","^=P"]],"^9",4086,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$m"]]]]]],"~$resolve-macro-ns-alias",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",881,"^8",7,"^9",881,"^:",29,"^=4",["^1J",["^=5",["^1J",[["^1?","^>I"],["^1?","^>I","^DE"]]]]],"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^1?","^>I"],["^1?","^>I","^DE"]],"^=4",["^1J",[["^1?","^>I"],["^1?","^>I","^DE"]]],"^=:",["^1J",[null,null]]]],"^Y","^7C","^6","cljs/analyzer.cljc","^:",29,"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^1?","^>I"],["^1?","^>I","^DE"]],"^=4",["^1J",[["^1?","^>I"],["^1?","^>I","^DE"]]],"^=:",["^1J",[null,null]]],"^=8",[["^1?","^>I"],["^1?","^>I","^DE"]],"^=9",null,"^=M",3,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",3,"^=;",false,"^=6",["^U",[null,"^=H"]]]],"^7",881,"^9",881,"^==",3,"^=>",true,"^=4",["^1J",[["^1?","^>I"],["^1?","^>I","^DE"]]]],"~$unsorted-map?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3610,"^8",8,"^9",3610,"^:",21,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"^=@",true,"^Y","^:W","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3610,"^=<","^=7","^9",3610,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"~$check-invoke-arg-types",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4173,"^8",7,"^9",4173,"^:",29,"^=4",["^1J",["^=5",["^1J",[["^1?",["^ ","^?O",["^>H"],"^1O","^@9"],"^>J"]]]]]],"^Y","^:Y","^6","cljs/analyzer.cljc","^:",29,"^=8",["^1J",[["^1?","~$p__61553","^>J"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4173,"^=<",["^U",["^=G","^=H","^BP","^=P"]],"^9",4173,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?",["^ ","^?O",["^>H"],"^1O","^@9"],"^>J"]]]]]],"~$check-duplicate-aliases",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3183,"^8",8,"^9",3183,"^:",31,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^1?","~$old","~$new"]]]]]],"^=@",true,"^Y","^:Z","^6","cljs/analyzer.cljc","^:",31,"^=8",["^1J",[["^1?","^F>","^F?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3183,"^=<","^=P","^9",3183,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^F>","^F?"]]]]]],"~$confirm-ns",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",888,"^8",7,"^9",888,"^:",17,"^=4",["^1J",["^=5",["^1J",[["^1?","^CQ"]]]]],"^>8","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"^Y","^9R","^6","cljs/analyzer.cljc","^:",17,"^=8",["^1J",[["^1?","^CQ"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",888,"^=<","^=P","^9",888,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^CQ"]]]]],"^>8","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"~$default-namespaces",["^ ","^Y","^9V","^6","cljs/analyzer.cljc","^7",591,"^8",1,"^9",591,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",591,"^8",6,"^9",591,"^:",24],"^=6","^=O"],"~$CLJS_CORE_SYM",["^ ","^Y","^6H","^6","cljs/analyzer.cljc","^7",244,"^8",4,"^9",244,"^:",22,"^5",["^ ","^6","cljs/analyzer.cljc","^7",244,"^8",9,"^9",244,"^:",22],"^=6","^9>"],"~$earmuffed?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1837,"^8",8,"^9",1837,"^:",18,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^=T"]]]]]],"^=@",true,"^Y","^6I","^6","cljs/analyzer.cljc","^:",18,"^=8",["^1J",[["^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1837,"^=<","^=7","^9",1837,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=T"]]]]]],"~$accumulating-warning-handler",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",736,"^8",8,"^9",736,"^:",36,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^>:"]]]]]],"^=@",true,"^Y","^9W","^6","cljs/analyzer.cljc","^:",36,"^=8",["^1J",[["^>:"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",736,"^=<","^AY","^9",736,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>:"]]]]]],"~$canonicalize-specs",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2991,"^8",7,"^9",2991,"^:",25,"^=4",["^1J",["^=5",["^1J",[["^C;"]]]]]],"^Y","^9X","^6","cljs/analyzer.cljc","^:",25,"^=8",["^1J",[["^C;"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",2991,"^9",2991,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^C;"]]]]]],"~$build-method-call",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3368,"^8",8,"^9",3368,"^:",25,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^>=","~$meth","^>7"]]]]],"^>8","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"^=@",true,"^Y","^8Q","^6","cljs/analyzer.cljc","^:",25,"^=8",["^1J",[["^>=","^FG","^>7"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3368,"^=<","^=O","^9",3368,"^==",3,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>=","^FG","^>7"]]]]],"^>8","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"~$confirm-var-exists-throw",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",868,"^8",7,"^9",868,"^:",31,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"^Y","^8V","^6","cljs/analyzer.cljc","^:",31,"^=8",["^1J",[[]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",868,"^=<","^AY","^9",868,"^==",0,"^=>",true,"^=4",["^1J",["^=5",["^1J",[[]]]]]],"~$js-module-exists?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",826,"^8",7,"^9",826,"^:",24,"^=4",["^1J",["^=5",["^1J",[["^>Y"]]]]]],"^Y","^8U","^6","cljs/analyzer.cljc","^:",24,"^=8",["^1J",[["^>Y"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",826,"^=<","^=H","^9",826,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^>Y"]]]]]],"~$analyze-form",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4210,"^8",10,"^9",4210,"^:",22,"^=4",["^1J",["^=5",["^1J",[["^1?","^=[","^>I","^>J"]]]]]],"^Y","^9Z","^6","cljs/analyzer.cljc","^:",22,"^=8",["^1J",[["^1?","^=[","^>I","^>J"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",4,"^=;",false,"^7",4210,"^=<",["^U",["^=G","^=H","^=O","^=P"]],"^9",4210,"^==",4,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=[","^>I","^>J"]]]]]],"~$var-ast",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1520,"^8",7,"^9",1520,"^:",14,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]]],"^Y","^91","^6","cljs/analyzer.cljc","^:",14,"^=8",["^1J",[["^1?","^=T"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1520,"^9",1520,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1?","^=T"]]]]]],"~$add-consts",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4265,"^8",7,"^9",4265,"^:",17,"^=4",["^1J",["^=5",["^1J",[["~$compiler-state","~$constants-map"]]]]],"^>8","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"^Y","^:7","^6","cljs/analyzer.cljc","^:",17,"^=8",["^1J",[["^FM","^FN"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",4265,"^=<",["^U",[null,"^=H"]],"^9",4265,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^FM","^FN"]]]]],"^>8","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"~$error",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",758,"^8",7,"^9",758,"^:",12,"^=4",["^1J",["^=5",["^1J",[["^1?","^A3"],["^1?","^A3","~$cause"]]]]],"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^1?","^A3"],["^1?","^A3","^FP"]],"^=4",["^1J",[["^1?","^A3"],["^1?","^A3","^FP"]]],"^=:",["^1J",[null,null]]]],"^Y","^:8","^6","cljs/analyzer.cljc","^:",12,"^=L",["^ ","^=;",false,"^=M",3,"^==",3,"^=8",[["^1?","^A3"],["^1?","^A3","^FP"]],"^=4",["^1J",[["^1?","^A3"],["^1?","^A3","^FP"]]],"^=:",["^1J",[null,null]]],"^=8",[["^1?","^A3"],["^1?","^A3","^FP"]],"^=9",null,"^=M",3,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^=N",[["^ ","^=M",2,"^=;",false,"^=6","^=H"],["^ ","^=M",3,"^=;",false,"^=6","^A5"]],"^7",758,"^9",758,"^==",3,"^=>",true,"^=4",["^1J",[["^1?","^A3"],["^1?","^A3","^FP"]]]],"~$record-tag?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3642,"^8",8,"^9",3642,"^:",19,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^=F"]]]]]],"^=@",true,"^Y","^:5","^6","cljs/analyzer.cljc","^:",19,"^=8",["^1J",[["^=F"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",3642,"^=<","^=7","^9",3642,"^==",1,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^=F"]]]]]],"~$invokeable-ns?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1143,"^8",7,"^9",1143,"^:",21,"^=4",["^1J",["^=5",["^1J",[["^1K","^1?"]]]]],"^>8","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"^Y","^:6","^6","cljs/analyzer.cljc","^:",21,"^=8",["^1J",[["^1K","^1?"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",1,"^=;",false,"^7",1143,"^=<",["^U",["^=7","^=H"]],"^9",1143,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^1K","^1?"]]]]],"^>8","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"~$cljs-vector?",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",262,"^8",19,"^9",262,"^:",31,"^=6","^=7","^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"^Y","^:=","^6","cljs/analyzer.cljc","^:",31,"^=8",["^1J",[["~$x"]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",4,"^=;",false,"^7",262,"^=<","^=7","^9",262,"^==",1,"^=6","^=7","^=>",true,"^=4",["^1J",["^=5",["^1J",[["~$x"]]]]]],"~$*cljs-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",50,"^8",16,"^9",50,"^:",25,"^>N",true],"^Y","^:D","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^>N",true,"^7",50,"^9",50,"^=6","^=H"],"~$check-macro-arity",["^ ","^=3",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3894,"^8",11,"^9",3894,"^:",28,"^=@",true,"^=4",["^1J",["^=5",["^1J",[["^BX","^=["]]]]]],"^=@",true,"^Y","^72","^6","cljs/analyzer.cljc","^:",28,"^=8",["^1J",[["^BX","^=["]]],"^=9",null,"^=:",["^1J",[null,null]],"^8",4,"^=;",false,"^7",3894,"^=<","^=P","^9",3894,"^==",2,"^=>",true,"^=4",["^1J",["^=5",["^1J",[["^BX","^=["]]]]]]],"^1G",["^ ","^L","^L","^S","^S","^1:","^1:","^1B","^1B","^1C","^1B"],"~:cljs.analyzer/constants",["^ ","^1E",["^U",["~$cljs.core/array?","~:args","~$cljs.core/IRecord","~:invoke-ctor","~$&","~$seq","~:ns*","^3","~$console","^4","~$case*","~:extending-base-js-type","~:case-then","~$Window","~:cljs.analyzer/namespaces","~:tags","~:unsupported-preprocess-value","~$defrecord*","~:argc","~:finally","~:statement","~$cljs.spec.alpha$macros","~$js/Function","~$cljs.core/boolean?","~:suffix","^2J","~$cljs.core/PersistentHashMap","~:deftype","~$try","~$checked-aget'","~:fns","~$Object","~:defined","~:ret","^2O","~$cljs.core/checked-aset'","~:redef","~:fexpr","~:existing","~:children","~:fdef-ns","^1M","~$js/RegExp","~$cljs.core/when","~$cljs.core/keyword?","~:ctor","~$aget","~:recurs","~$cljs.core/implements?","~:body?","^1","~:fname","^=G","^=7","~:js-shadowed-by-local","^>@","~$cljs.core/simple-symbol?","~$location","~:let","^=3","~$cljs.core/Reduced","^@@","~$cljs.core/qualified-symbol?","~:unsupported-js-module-type","^BD","~:goog","~:only","~:invalid-protocol-symbol","~:done","~:group","^5","~:ev","~$cljs.core$macros","~:host-field","~:frame","~$cljs.core/IList","~$Symbol","~:valid?","~:externs","~$cljs.core/checked-aget'","~:fn-scope","~:do","~:private-var-access","~$String","~$registry-ref","~:macros-ns","~:macro-syntax-check","~$cljs.core/var?","~:pmasks","~:protocol-method","~:init","~:cljs.analyzer/property","~:numeric","^=@","~:exprs","~:else","~:protocol-duped-method","~:protocol-symbol","~:cblocks","~:clojure.error/phase","^=H","~$floats","~:protocol","~:cljs.analyzer/symbol","~$*warn-on-infer*","~:cljs.analyzer/externs","~$ns*","~$checked-aset'","~:if","~:fn-method","~$escape","~:global","~$cljs.core/Volatile","^J","^T","~:macros","~:locals","~:tests","~:js-globals","~:return","~$finally","^49","~:method","~:use","~:segs","~$Function","~:default","~:repl-env","^AV","^16","~:cljs.analyzer/call","~:new","~$loop*","~:property","~:case-test","^A<","~$cljs.core/map-entry?","^10","~:bindings","~:warn","~:global-exports","~:def-emits-var","^Y","~:munged-namespace","~:binding-form?","~$cljs.core/double?","^1O","~$&form","~$cljs.core/Object","^4I","~$Array","~$cljs.core/Delay","~$*unchecked-arrays*","~:flag","~:loop-lets","~$cljs.core/qualified-ident?","~:clojure.error/symbol","~:unchecked","~$cljs.core.constants","^1:","~$cljs.core/qualified-keyword?","^6","~:fields","~:spec-skip-macros","~:extend-type","~$js","^>E","~:undeclared-macros-ns","~$long","~$double","^:","~:single-segment-namespace","~$cljs.core/Var","~$__hash","~:start","~$screen","~:inferred-ret-tag","~:fn-arity","^=L","~$cljs.core/Inst","^1F","~:params","~:warning-type","~:macro-present?","^1;","~:dblock","~:js-module-index","~:fn-self-name","~:nodejs","~$js/Boolean","~:val","~:advanced","~$longs","~:compile-syntax-check","~:recur","~:field","~:with-meta","^AW","~$.-cljs$lang$test","^;>","~$js/String","~$do","~$__meta","~:const-expr","~$-speced-vars","~:state","^=8","~:rename","~$number","~$objects","~:vals","~:js-dependency-index","~:ns-name","^=9","^=M","^[","~:current-symbol","^1X","~:js-provide","~:env","~:cljs.analyzer/type","~:letfn","~:node","~:infer-warning","~:vector","~:variadic-max-arity","~$cljs.core/inst?","~$letfn*","~:export","~:cljs.analyzer/analyzed","~:protocol-with-variadic-method","~$if","^=:","^11","~:cljs.analyzer/protocol-inline","~$global","~:cljs.analyzer/constant-table","^F?","~:fn-deprecated","~$cljs.core/float?","^1K","^A4","~:literal?","~:sym","^A;","~:no-op","~:catches","~:prefix","^8","~$unquote","~:types","~:cljs.analyzer/protocol-impl","~:loop","~:dot-action","~:undeclared-var","~$cljs.core/true?","~:internal-ctor","~:module-type","~:case-node","^6T","~:root-source-info","~$cljs.core/let","~$process","~:nodejs-rt","~:declared-arglists-mismatch","~:cljs.analyzer/expr","~:include-macros","~$cljs.core/checked-aget","^71","~:clojure.error/column","^12","~:preamble-missing","~:clojure.error/line","~$cljs.core/volatile?","~:binding","~$cljs.core/ns-special-form","~$require","~$cljs.core/cond","^=;","~:unsynchronized-mutable","~$cljs.core/integer?","~:const","~:js-fn-var","~:cljs.analyzer/access","^?O","~$deftype*","~$let*","~$js/Array","~$cljs.core/infinite?","~:set!","^=N","~$not-native","~$js*","~$cljs.core/undefined?","~$cljs.core/ISeqable","~:undeclared-protocol-symbol","~$alert","~:build-options","~:protocol-with-overwriting-method","~:nodes","~:cljs.spec/speced-vars","^1E","~:js-array","^>N","~:clojure.error/source","^7","~:expr","~$Boolean","~:arg","~:list","~:var","~$history","~$fn*","~:cljs/analysis-error","~:protocol-info","~:quote","~$recur","~:macro","~$cljs.core/IMapEntry","~:invalid-array-access","~:unprovided","~:deprecation-nowarn","~$Math","~:ns-var-clash","~$cljs.core/uuid?","~:deprecated","^1H","~:case","~:undeclared-ns","^7R","~:class","~:preprocess","~:catch","~:arg-id","~:recur-frames","~$window","^AX","~$array","^=1","~$cljs.core/reduced?","~$cljs.core/tagged-literal?","~$cljs.core/nil?","~:cljs.spec/registry-ref","^1@","~:non-dynamic-earmuffed-var","~:quoted?","~:declared","~$cljs.core/zero?","~$cljs.core/false?","^AC","~:cljs.analyzer/not-found","~:defrecord","~:lib","^>Y","^88","~:info","~:code","~$cljs.core/simple-ident?","^=<","~:cljs.analyzer/error","^AY","~:then","~$ignore","~:js-object","~:def-var","^9","~:cljs.analyzer/no-resolve","~:js-op","~$exports","~:var-ast","~:context","~$Number","~:invoke","~:throw","~:reload","~:undeclared-ns-form","~$doubles","~:order","~:no-such-method","^1L","~:error","~$document","~$checked-aset","~:def","~:reload-all","^1G","~:exception","^==","~:t","~:options","~$set!","^1I","~:missing","^=6","~:invalid-arithmetic","^1[","~:protocol-deprecated","~:target","^E","~$.","~$cljs.core/simple-keyword?","^>4","~:mutable","~:reloads","~$cljs.core/ITaggedLiteral","~$cljs.core/seqable?","~$aset","^=5","^FV","~:try","^9>","^9?","~:set","~:items","~:in-loop","~$prototype","~$chars","^=>","~:js-var","^=4","~:protocol-impl-recur-with-target","~:volatile-mutable","~:import","~$macroexpand-check","~$ints","~$cljs.core/and","~:impls","~:hierarchy","~$catch","~:shadow","~$js/Object","~:body","~:host-call","~:ns-sym","~:macroexpansion","^>8","^G","~:overload-arity","~:speced-vars","~:local","~:closure-lib","~:cljs.analyzer/numeric","^;;","^:1","~$cljs.core/IChunkedSeq","~:protocol-multiple-impls","~$navigator","~:jsdoc","~$js/Number","~$cljs.core/ISequential","~$cljs.core/delay?","~:redef-in-file","~:clj","~$constructor","~:protocol-invalid-method","~:invalid-arity","~$cljs.core/regexp?","^1Z","~:extend-type-invalid-method-shape","~:the-var","~:suggested-symbol","~:map","~$cljs.core/IUUID","~$__extmap","~:cljs.analyzer/list","~:object","~:test","~:foreign","~:multiple-variadic-overloads","~:warn-type","~$checked-aget","~$shorts","~$*unchecked-if*","~$throw","~:forms","~:fblock","^=O","~:dep-path","^=P","~:registry-ref","~$cljs.core/instance?","^1R","~$cljs.core/checked-aset","^1N","~:statements","~:goog-define","~$def","~:compilation","~$cljs.core/ident?","~:refer-macros","~$cljs.user","^;1","~$unescape","~:protocol-impl-with-variadic-method","~$bytes"]],"^MY",["^OY","^OO","^IW","^FZ","^G3","^G8","^GJ","^GX","^H2","^H5","^HC","^HP","^IJ","^J4","^J:","^K2","^K4","^K9","^K>","^KJ","^KS","^KX","^LA","^LD","^>N","^LV","^LW","^LZ","^M2","^M>","^MW","^N8","^N9","^=>","^NH","^NW","^O1","^O7","^O:","^O=","^OG","^O[","^N5","^HX","^JE","^=P","^JS","^1@","^=7","^L>","~~~:t~:ns-specs",["^ "],"~:ns-spec-vars",["^U",[]],"~:compiler-options",["^;5",[["^P3","~:static-fns"],true,["^P3","~:shadow-tweaks"],null,["^P3","~:source-map-inline"],null,["^P3","~:elide-asserts"],false,["^P3","~:optimize-constants"],null,["^P3","^1W"],null,["^P3","~:external-config"],null,["^P3","~:tooling-config"],null,["^P3","~:emit-constants"],null,["^P3","~:load-tests"],null,["^P3","~:form-size-threshold"],null,["^P3","~:infer-externs"],true,["^P3","^1Y"],null,["~:js-options","~:js-provider"],"^NQ",["~:mode"],"~:dev",["^P3","~:fn-invoke-direct"],null,["^P3","~:source-map"],"/dev/null"]]]