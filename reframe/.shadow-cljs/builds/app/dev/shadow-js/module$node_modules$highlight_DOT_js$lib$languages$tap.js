["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/tap.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$tap=function(global,require,module,exports){module.exports=function(hljs){return{case_insensitive:!0,contains:[hljs.HASH_COMMENT_MODE,{className:\"meta\",variants:[{begin:\"^TAP version (\\\\d+)$\"},{begin:\"^1\\\\.\\\\.(\\\\d+)$\"}]},{begin:\"(s+)?---$\",end:\"\\\\.\\\\.\\\\.$\",subLanguage:\"yaml\",relevance:0},{className:\"number\",begin:\" (\\\\d+) \"},{className:\"symbol\",variants:[{begin:\"^ok\"},{begin:\"^not ok\"}]}]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$tap\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  return {\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      // version of format and total amount of testcases\n      {\n        className: 'meta',\n        variants: [\n          { begin: '^TAP version (\\\\d+)$' },\n          { begin: '^1\\\\.\\\\.(\\\\d+)$' }\n        ],\n      },\n      // YAML block\n      {\n        begin: '(\\s+)?---$', end: '\\\\.\\\\.\\\\.$',\n        subLanguage: 'yaml',\n        relevance: 0\n      },\n\t  // testcase number\n      {\n        className: 'number',\n        begin: ' (\\\\d+) '\n      },\n\t  // testcase status and description\n      {\n        className: 'symbol',\n        variants: [\n          { begin: '^ok' },\n          { begin: '^not ok' }\n        ],\n      },\n    ]\n  };\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["case_insensitive","variants","begin","subLanguage","className","contains","relevance","end"]],"~:compiled-at",1598576871405,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$tap.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACnHD,MAAAC,QAAA,CAAiBC,QAAQ,CAACC,IAAD,CAAO,CAC9B,MAAO,CACLC,iBAAkB,CAAA,CADb,CAELC,SAAU,CACRF,IAAAG,kBADQ,CAGR,CACEC,UAAW,MADb,CAEEC,SAAU,CACR,CAAEC,MAAO,sBAAT,CADQ,CAER,CAAEA,MAAO,iBAAT,CAFQ,CAFZ,CAHQ,CAWR,CACEA,MAAO,WADT,CACuBC,IAAK,YAD5B,CAEEC,YAAa,MAFf,CAGEC,UAAW,CAHb,CAXQ,CAiBR,CACEL,UAAW,QADb,CAEEE,MAAO,UAFT,CAjBQ,CAsBR,CACEF,UAAW,QADb,CAEEC,SAAU,CACR,CAAEC,MAAO,KAAT,CADQ,CAER,CAAEA,MAAO,SAAT,CAFQ,CAFZ,CAtBQ,CAFL,CADuB,CADmF;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/tap.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$tap\\\"] = function(global,require,module,exports) {\\nmodule.exports = function(hljs) {\\n  return {\\n    case_insensitive: true,\\n    contains: [\\n      hljs.HASH_COMMENT_MODE,\\n      // version of format and total amount of testcases\\n      {\\n        className: 'meta',\\n        variants: [\\n          { begin: '^TAP version (\\\\\\\\d+)$' },\\n          { begin: '^1\\\\\\\\.\\\\\\\\.(\\\\\\\\d+)$' }\\n        ],\\n      },\\n      // YAML block\\n      {\\n        begin: '(\\\\s+)?---$', end: '\\\\\\\\.\\\\\\\\.\\\\\\\\.$',\\n        subLanguage: 'yaml',\\n        relevance: 0\\n      },\\n\\t  // testcase number\\n      {\\n        className: 'number',\\n        begin: ' (\\\\\\\\d+) '\\n      },\\n\\t  // testcase status and description\\n      {\\n        className: 'symbol',\\n        variants: [\\n          { begin: '^ok' },\\n          { begin: '^not ok' }\\n        ],\\n      },\\n    ]\\n  };\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"module.exports\",\"hljs\",\"case_insensitive\",\"contains\",\"HASH_COMMENT_MODE\",\"className\",\"variants\",\"begin\",\"end\",\"subLanguage\",\"relevance\"]\n}\n"]