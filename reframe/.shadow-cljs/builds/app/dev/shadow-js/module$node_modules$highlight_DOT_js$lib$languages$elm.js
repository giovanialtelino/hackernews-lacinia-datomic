["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/elm.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$elm=function(global,require,module,exports){module.exports=function(hljs){var COMMENT={variants:[hljs.COMMENT(\"--\",\"$\"),hljs.COMMENT(\"{-\",\"-}\",{contains:[\"self\"]})]},CONSTRUCTOR={className:\"type\",begin:\"\\\\b[A-Z][\\\\w']*\",relevance:0},LIST={begin:\"\\\\(\",end:\"\\\\)\",illegal:'\"',contains:[{className:\"type\",begin:\"\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?\"},COMMENT]};return{keywords:\"let in if then else case of where module import exposing type alias as infix infixl infixr port effect command subscription\",\ncontains:[{beginKeywords:\"port effect module\",end:\"exposing\",keywords:\"port effect module where command subscription exposing\",contains:[LIST,COMMENT],illegal:\"\\\\W\\\\.|;\"},{begin:\"import\",end:\"$\",keywords:\"import as exposing\",contains:[LIST,COMMENT],illegal:\"\\\\W\\\\.|;\"},{begin:\"type\",end:\"$\",keywords:\"type alias\",contains:[CONSTRUCTOR,LIST,{begin:\"{\",end:\"}\",contains:LIST.contains},COMMENT]},{beginKeywords:\"infix infixl infixr\",end:\"$\",contains:[hljs.C_NUMBER_MODE,COMMENT]},{begin:\"port\",end:\"$\",keywords:\"port\",\ncontains:[COMMENT]},{className:\"string\",begin:\"'\\\\\\\\?.\",end:\"'\",illegal:\".\"},hljs.QUOTE_STRING_MODE,hljs.C_NUMBER_MODE,CONSTRUCTOR,hljs.inherit(hljs.TITLE_MODE,{begin:\"^[_a-z][\\\\w']*\"}),COMMENT,{begin:\"-\\x3e|\\x3c-\"}],illegal:/;/}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$elm\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  var COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        '{-',\n        '-}',\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      COMMENT\n    ]\n  };\n\n  var RECORD = {\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  var CHARACTER = {\n    className: 'string',\n    begin: '\\'\\\\\\\\?.', end: '\\'',\n    illegal: '.'\n  };\n\n  return {\n    keywords:\n      'let in if then else case of where module import exposing ' +\n      'type alias as infix infixl infixr port effect command subscription',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'port effect module', end: 'exposing',\n        keywords: 'port effect module where command subscription exposing',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'import', end: '$',\n        keywords: 'import as exposing',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'type', end: '$',\n        keywords: 'type alias',\n        contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]\n      },\n      {\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\n      },\n      {\n        begin: 'port', end: '$',\n        keywords: 'port',\n        contains: [COMMENT]\n      },\n\n      // Literals and names.\n\n      CHARACTER,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n      COMMENT,\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ],\n    illegal: /;/\n  };\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["variants","begin","className","contains","relevance","keywords","beginKeywords","illegal","end"]],"~:compiled-at",1598576871284,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$elm.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACnHD,MAAAC,QAAA,CAAiBC,QAAQ,CAACC,IAAD,CAAO,CAC9B,IAAIC,QAAU,CACZC,SAAU,CACRF,IAAAC,QAAA,CAAa,IAAb,CAAmB,GAAnB,CADQ,CAERD,IAAAC,QAAA,CACE,IADF,CAEE,IAFF,CAGE,CACEE,SAAU,CAAC,MAAD,CADZ,CAHF,CAFQ,CADE,CAAd,CAaIC,YAAc,CAChBC,UAAW,MADK,CAEhBC,MAAO,iBAFS,CAGhBC,UAAW,CAHK,CAblB,CAmBIC,KAAO,CACTF,MAAO,KADE,CACKG,IAAK,KADV,CAETC,QAAS,GAFA,CAGTP,SAAU,CACR,CAACE,UAAW,MAAZ,CAAoBC,MAAO,wCAA3B,CADQ,CAERL,OAFQ,CAHD,CAoBX,OAAO,CACLU,SACE,6HAFG;AAILR,SAAU,CAIR,CACES,cAAe,oBADjB,CACuCH,IAAK,UAD5C,CAEEE,SAAU,wDAFZ,CAGER,SAAU,CAACK,IAAD,CAAOP,OAAP,CAHZ,CAIES,QAAS,UAJX,CAJQ,CAUR,CACEJ,MAAO,QADT,CACmBG,IAAK,GADxB,CAEEE,SAAU,oBAFZ,CAGER,SAAU,CAACK,IAAD,CAAOP,OAAP,CAHZ,CAIES,QAAS,UAJX,CAVQ,CAgBR,CACEJ,MAAO,MADT,CACiBG,IAAK,GADtB,CAEEE,SAAU,YAFZ,CAGER,SAAU,CAACC,WAAD,CAAcI,IAAd,CAlCHK,CACXP,MAAO,GADIO,CACCJ,IAAK,GADNI,CAEXV,SAAUK,IAAAL,SAFCU,CAkCG,CAA4BZ,OAA5B,CAHZ,CAhBQ,CAqBR,CACEW,cAAe,qBADjB,CACwCH,IAAK,GAD7C,CAEEN,SAAU,CAACH,IAAAc,cAAD,CAAqBb,OAArB,CAFZ,CArBQ,CAyBR,CACEK,MAAO,MADT,CACiBG,IAAK,GADtB,CAEEE,SAAU,MAFZ;AAGER,SAAU,CAACF,OAAD,CAHZ,CAzBQ,CAVIc,CACdV,UAAW,QADGU,CAEdT,MAAO,SAFOS,CAEKN,IAAK,GAFVM,CAGdL,QAAS,GAHKK,CAUJ,CAkCRf,IAAAgB,kBAlCQ,CAmCRhB,IAAAc,cAnCQ,CAoCRV,WApCQ,CAqCRJ,IAAAiB,QAAA,CAAajB,IAAAkB,WAAb,CAA8B,CAACZ,MAAO,gBAAR,CAA9B,CArCQ,CAsCRL,OAtCQ,CAwCR,CAACK,MAAO,aAAR,CAxCQ,CAJL,CA8CLI,QAAS,GA9CJ,CAxCuB,CADmF;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/elm.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$elm\\\"] = function(global,require,module,exports) {\\nmodule.exports = function(hljs) {\\n  var COMMENT = {\\n    variants: [\\n      hljs.COMMENT('--', '$'),\\n      hljs.COMMENT(\\n        '{-',\\n        '-}',\\n        {\\n          contains: ['self']\\n        }\\n      )\\n    ]\\n  };\\n\\n  var CONSTRUCTOR = {\\n    className: 'type',\\n    begin: '\\\\\\\\b[A-Z][\\\\\\\\w\\\\']*', // TODO: other constructors (built-in, infix).\\n    relevance: 0\\n  };\\n\\n  var LIST = {\\n    begin: '\\\\\\\\(', end: '\\\\\\\\)',\\n    illegal: '\\\"',\\n    contains: [\\n      {className: 'type', begin: '\\\\\\\\b[A-Z][\\\\\\\\w]*(\\\\\\\\((\\\\\\\\.\\\\\\\\.|,|\\\\\\\\w+)\\\\\\\\))?'},\\n      COMMENT\\n    ]\\n  };\\n\\n  var RECORD = {\\n    begin: '{', end: '}',\\n    contains: LIST.contains\\n  };\\n\\n  var CHARACTER = {\\n    className: 'string',\\n    begin: '\\\\'\\\\\\\\\\\\\\\\?.', end: '\\\\'',\\n    illegal: '.'\\n  };\\n\\n  return {\\n    keywords:\\n      'let in if then else case of where module import exposing ' +\\n      'type alias as infix infixl infixr port effect command subscription',\\n    contains: [\\n\\n      // Top-level constructions.\\n\\n      {\\n        beginKeywords: 'port effect module', end: 'exposing',\\n        keywords: 'port effect module where command subscription exposing',\\n        contains: [LIST, COMMENT],\\n        illegal: '\\\\\\\\W\\\\\\\\.|;'\\n      },\\n      {\\n        begin: 'import', end: '$',\\n        keywords: 'import as exposing',\\n        contains: [LIST, COMMENT],\\n        illegal: '\\\\\\\\W\\\\\\\\.|;'\\n      },\\n      {\\n        begin: 'type', end: '$',\\n        keywords: 'type alias',\\n        contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]\\n      },\\n      {\\n        beginKeywords: 'infix infixl infixr', end: '$',\\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\\n      },\\n      {\\n        begin: 'port', end: '$',\\n        keywords: 'port',\\n        contains: [COMMENT]\\n      },\\n\\n      // Literals and names.\\n\\n      CHARACTER,\\n      hljs.QUOTE_STRING_MODE,\\n      hljs.C_NUMBER_MODE,\\n      CONSTRUCTOR,\\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\\\\\w\\\\']*'}),\\n      COMMENT,\\n\\n      {begin: '->|<-'} // No markup, relevance booster\\n    ],\\n    illegal: /;/\\n  };\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"module.exports\",\"hljs\",\"COMMENT\",\"variants\",\"contains\",\"CONSTRUCTOR\",\"className\",\"begin\",\"relevance\",\"LIST\",\"end\",\"illegal\",\"keywords\",\"beginKeywords\",\"RECORD\",\"C_NUMBER_MODE\",\"CHARACTER\",\"QUOTE_STRING_MODE\",\"inherit\",\"TITLE_MODE\"]\n}\n"]