["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/brainfuck.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$brainfuck=function(global,require,module,exports){module.exports=function(hljs){var LITERAL={className:\"literal\",begin:\"[\\\\+\\\\-]\",relevance:0};return{aliases:[\"bf\"],contains:[hljs.COMMENT(\"[^\\\\[\\\\]\\\\.,\\\\+\\\\-\\x3c\\x3e \\r\\n]\",\"[\\\\[\\\\]\\\\.,\\\\+\\\\-\\x3c\\x3e \\r\\n]\",{returnEnd:!0,relevance:0}),{className:\"title\",begin:\"[\\\\[\\\\]]\",relevance:0},{className:\"string\",begin:\"[\\\\.,]\",relevance:0},{begin:/(?:\\+\\+|\\-\\-)/,contains:[LITERAL]},LITERAL]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$brainfuck\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs){\n  var LITERAL = {\n    className: 'literal',\n    begin: '[\\\\+\\\\-]',\n    relevance: 0\n  };\n  return {\n    aliases: ['bf'],\n    contains: [\n      hljs.COMMENT(\n        '[^\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]',\n        '[\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]',\n        {\n          returnEnd: true,\n          relevance: 0\n        }\n      ),\n      {\n        className: 'title',\n        begin: '[\\\\[\\\\]]',\n        relevance: 0\n      },\n      {\n        className: 'string',\n        begin: '[\\\\.,]',\n        relevance: 0\n      },\n      {\n        // this mode works as the only relevance counter\n        begin: /(?:\\+\\+|\\-\\-)/,\n        contains: [LITERAL]\n      },\n      LITERAL\n    ]\n  };\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["begin","aliases","returnEnd","className","contains","relevance"]],"~:compiled-at",1598576871268,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$brainfuck.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,6DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACzHD,MAAAC,QAAA,CAAiBC,QAAQ,CAACC,IAAD,CAAM,CAC7B,IAAIC,QAAU,CACZC,UAAW,SADC,CAEZC,MAAO,UAFK,CAGZC,UAAW,CAHC,CAKd,OAAO,CACLC,QAAS,CAAC,IAAD,CADJ,CAELC,SAAU,CACRN,IAAAO,QAAA,CACE,kCADF,CAEE,iCAFF,CAGE,CACEC,UAAW,CAAA,CADb,CAEEJ,UAAW,CAFb,CAHF,CADQ,CASR,CACEF,UAAW,OADb,CAEEC,MAAO,UAFT,CAGEC,UAAW,CAHb,CATQ,CAcR,CACEF,UAAW,QADb,CAEEC,MAAO,QAFT,CAGEC,UAAW,CAHb,CAdQ,CAmBR,CAEED,MAAO,eAFT,CAGEG,SAAU,CAACL,OAAD,CAHZ,CAnBQ,CAwBRA,OAxBQ,CAFL,CANsB,CAD0F;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/brainfuck.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$brainfuck\\\"] = function(global,require,module,exports) {\\nmodule.exports = function(hljs){\\n  var LITERAL = {\\n    className: 'literal',\\n    begin: '[\\\\\\\\+\\\\\\\\-]',\\n    relevance: 0\\n  };\\n  return {\\n    aliases: ['bf'],\\n    contains: [\\n      hljs.COMMENT(\\n        '[^\\\\\\\\[\\\\\\\\]\\\\\\\\.,\\\\\\\\+\\\\\\\\-<> \\\\r\\\\n]',\\n        '[\\\\\\\\[\\\\\\\\]\\\\\\\\.,\\\\\\\\+\\\\\\\\-<> \\\\r\\\\n]',\\n        {\\n          returnEnd: true,\\n          relevance: 0\\n        }\\n      ),\\n      {\\n        className: 'title',\\n        begin: '[\\\\\\\\[\\\\\\\\]]',\\n        relevance: 0\\n      },\\n      {\\n        className: 'string',\\n        begin: '[\\\\\\\\.,]',\\n        relevance: 0\\n      },\\n      {\\n        // this mode works as the only relevance counter\\n        begin: /(?:\\\\+\\\\+|\\\\-\\\\-)/,\\n        contains: [LITERAL]\\n      },\\n      LITERAL\\n    ]\\n  };\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"module.exports\",\"hljs\",\"LITERAL\",\"className\",\"begin\",\"relevance\",\"aliases\",\"contains\",\"COMMENT\",\"returnEnd\"]\n}\n"]