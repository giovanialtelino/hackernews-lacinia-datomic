["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/ebnf.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$ebnf=function(global,require,module,exports){module.exports=function(hljs){var commentMode=hljs.COMMENT(/\\(\\*/,/\\*\\)/);return{illegal:/\\S/,contains:[commentMode,{className:\"attribute\",begin:/^[ ]*[a-zA-Z][a-zA-Z-_]*([\\s-_]+[a-zA-Z][a-zA-Z]*)*/},{begin:/=/,end:/[.;]/,contains:[commentMode,{className:\"meta\",begin:/\\?.*\\?/},{className:\"string\",variants:[hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,{begin:\"`\",end:\"`\"}]}]}]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$ebnf\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n    var commentMode = hljs.COMMENT(/\\(\\*/, /\\*\\)/);\n\n    var nonTerminalMode = {\n        className: \"attribute\",\n        begin: /^[ ]*[a-zA-Z][a-zA-Z-_]*([\\s-_]+[a-zA-Z][a-zA-Z]*)*/\n    };\n\n    var specialSequenceMode = {\n        className: \"meta\",\n        begin: /\\?.*\\?/\n    };\n\n    var ruleBodyMode = {\n        begin: /=/, end: /[.;]/,\n        contains: [\n            commentMode,\n            specialSequenceMode,\n            {\n              // terminals\n              className: 'string',\n              variants: [\n                hljs.APOS_STRING_MODE,\n                hljs.QUOTE_STRING_MODE,\n                {begin: '`', end: '`'},\n              ]\n            },\n        ]\n    };\n\n    return {\n        illegal: /\\S/,\n        contains: [\n            commentMode,\n            nonTerminalMode,\n            ruleBodyMode\n        ]\n    };\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["variants","begin","className","contains","illegal","end"]],"~:compiled-at",1598576871283,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$ebnf.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpHD,MAAAC,QAAA,CAAiBC,QAAQ,CAACC,IAAD,CAAO,CAC5B,IAAIC,YAAcD,IAAAE,QAAA,CAAa,MAAb,CAAqB,MAArB,CA6BlB,OAAO,CACHC,QAAS,IADN,CAEHC,SAAU,CACNH,WADM,CA7BQI,CAClBC,UAAW,WADOD,CAElBE,MAAO,qDAFWF,CA6BR,CAnBKG,CACfD,MAAO,GADQC,CACHC,IAAK,MADFD,CAEfJ,SAAU,CACNH,WADM,CAPYS,CACtBJ,UAAW,MADWI,CAEtBH,MAAO,QAFeG,CAOZ,CAGN,CAEEJ,UAAW,QAFb,CAGEK,SAAU,CACRX,IAAAY,iBADQ,CAERZ,IAAAa,kBAFQ,CAGR,CAACN,MAAO,GAAR,CAAaE,IAAK,GAAlB,CAHQ,CAHZ,CAHM,CAFKD,CAmBL,CAFP,CA9BqB,CADoF;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/ebnf.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$ebnf\\\"] = function(global,require,module,exports) {\\nmodule.exports = function(hljs) {\\n    var commentMode = hljs.COMMENT(/\\\\(\\\\*/, /\\\\*\\\\)/);\\n\\n    var nonTerminalMode = {\\n        className: \\\"attribute\\\",\\n        begin: /^[ ]*[a-zA-Z][a-zA-Z-_]*([\\\\s-_]+[a-zA-Z][a-zA-Z]*)*/\\n    };\\n\\n    var specialSequenceMode = {\\n        className: \\\"meta\\\",\\n        begin: /\\\\?.*\\\\?/\\n    };\\n\\n    var ruleBodyMode = {\\n        begin: /=/, end: /[.;]/,\\n        contains: [\\n            commentMode,\\n            specialSequenceMode,\\n            {\\n              // terminals\\n              className: 'string',\\n              variants: [\\n                hljs.APOS_STRING_MODE,\\n                hljs.QUOTE_STRING_MODE,\\n                {begin: '`', end: '`'},\\n              ]\\n            },\\n        ]\\n    };\\n\\n    return {\\n        illegal: /\\\\S/,\\n        contains: [\\n            commentMode,\\n            nonTerminalMode,\\n            ruleBodyMode\\n        ]\\n    };\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"module.exports\",\"hljs\",\"commentMode\",\"COMMENT\",\"illegal\",\"contains\",\"nonTerminalMode\",\"className\",\"begin\",\"ruleBodyMode\",\"end\",\"specialSequenceMode\",\"variants\",\"APOS_STRING_MODE\",\"QUOTE_STRING_MODE\"]\n}\n"]