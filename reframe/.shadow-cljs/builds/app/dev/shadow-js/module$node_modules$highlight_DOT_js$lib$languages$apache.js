["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/apache.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$apache=function(global,require,module,exports){module.exports=function(hljs){var NUMBER={className:\"number\",begin:\"[\\\\$%]\\\\d+\"};return{aliases:[\"apacheconf\"],case_insensitive:!0,contains:[hljs.HASH_COMMENT_MODE,{className:\"section\",begin:\"\\x3c/?\",end:\"\\x3e\"},{className:\"attribute\",begin:/\\w+/,relevance:0,keywords:{nomarkup:\"order deny allow setenv rewriterule rewriteengine rewritecond documentroot sethandler errordocument loadmodule options header listen serverroot servername\"},\nstarts:{end:/$/,relevance:0,keywords:{literal:\"on off all\"},contains:[{className:\"meta\",begin:\"\\\\s\\\\[\",end:\"\\\\]$\"},{className:\"variable\",begin:\"[\\\\$%]\\\\{\",end:\"\\\\}\",contains:[\"self\",NUMBER]},NUMBER,hljs.QUOTE_STRING_MODE]}}],illegal:/\\S/}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$apache\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  var NUMBER = {className: 'number', begin: '[\\\\$%]\\\\d+'};\n  return {\n    aliases: ['apacheconf'],\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {className: 'section', begin: '</?', end: '>'},\n      {\n        className: 'attribute',\n        begin: /\\w+/,\n        relevance: 0,\n        // keywords arenâ€™t needed for highlighting per se, they only boost relevance\n        // for a very generally defined mode (starts with a word, ends with line-end\n        keywords: {\n          nomarkup:\n            'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +\n            'sethandler errordocument loadmodule options header listen serverroot ' +\n            'servername'\n        },\n        starts: {\n          end: /$/,\n          relevance: 0,\n          keywords: {\n            literal: 'on off all'\n          },\n          contains: [\n            {\n              className: 'meta',\n              begin: '\\\\s\\\\[', end: '\\\\]$'\n            },\n            {\n              className: 'variable',\n              begin: '[\\\\$%]\\\\{', end: '\\\\}',\n              contains: ['self', NUMBER]\n            },\n            NUMBER,\n            hljs.QUOTE_STRING_MODE\n          ]\n        }\n      }\n    ],\n    illegal: /\\S/\n  };\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["case_insensitive","begin","aliases","className","contains","relevance","keywords","starts","illegal","nomarkup","literal","end"]],"~:compiled-at",1598576871257,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$apache.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACtHD,MAAAC,QAAA,CAAiBC,QAAQ,CAACC,IAAD,CAAO,CAC9B,IAAIC,OAAS,CAACC,UAAW,QAAZ,CAAsBC,MAAO,YAA7B,CACb,OAAO,CACLC,QAAS,CAAC,YAAD,CADJ,CAELC,iBAAkB,CAAA,CAFb,CAGLC,SAAU,CACRN,IAAAO,kBADQ,CAER,CAACL,UAAW,SAAZ,CAAuBC,MAAO,QAA9B,CAAqCK,IAAK,MAA1C,CAFQ,CAGR,CACEN,UAAW,WADb,CAEEC,MAAO,KAFT,CAGEM,UAAW,CAHb,CAMEC,SAAU,CACRC,SACE,4JAFM,CANZ;AAYEC,OAAQ,CACNJ,IAAK,GADC,CAENC,UAAW,CAFL,CAGNC,SAAU,CACRG,QAAS,YADD,CAHJ,CAMNP,SAAU,CACR,CACEJ,UAAW,MADb,CAEEC,MAAO,QAFT,CAEmBK,IAAK,MAFxB,CADQ,CAKR,CACEN,UAAW,UADb,CAEEC,MAAO,WAFT,CAEsBK,IAAK,KAF3B,CAGEF,SAAU,CAAC,MAAD,CAASL,MAAT,CAHZ,CALQ,CAURA,MAVQ,CAWRD,IAAAc,kBAXQ,CANJ,CAZV,CAHQ,CAHL,CAwCLC,QAAS,IAxCJ,CAFuB,CADsF;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/apache.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$apache\\\"] = function(global,require,module,exports) {\\nmodule.exports = function(hljs) {\\n  var NUMBER = {className: 'number', begin: '[\\\\\\\\$%]\\\\\\\\d+'};\\n  return {\\n    aliases: ['apacheconf'],\\n    case_insensitive: true,\\n    contains: [\\n      hljs.HASH_COMMENT_MODE,\\n      {className: 'section', begin: '</?', end: '>'},\\n      {\\n        className: 'attribute',\\n        begin: /\\\\w+/,\\n        relevance: 0,\\n        // keywords aren\\u2019t needed for highlighting per se, they only boost relevance\\n        // for a very generally defined mode (starts with a word, ends with line-end\\n        keywords: {\\n          nomarkup:\\n            'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +\\n            'sethandler errordocument loadmodule options header listen serverroot ' +\\n            'servername'\\n        },\\n        starts: {\\n          end: /$/,\\n          relevance: 0,\\n          keywords: {\\n            literal: 'on off all'\\n          },\\n          contains: [\\n            {\\n              className: 'meta',\\n              begin: '\\\\\\\\s\\\\\\\\[', end: '\\\\\\\\]$'\\n            },\\n            {\\n              className: 'variable',\\n              begin: '[\\\\\\\\$%]\\\\\\\\{', end: '\\\\\\\\}',\\n              contains: ['self', NUMBER]\\n            },\\n            NUMBER,\\n            hljs.QUOTE_STRING_MODE\\n          ]\\n        }\\n      }\\n    ],\\n    illegal: /\\\\S/\\n  };\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"module.exports\",\"hljs\",\"NUMBER\",\"className\",\"begin\",\"aliases\",\"case_insensitive\",\"contains\",\"HASH_COMMENT_MODE\",\"end\",\"relevance\",\"keywords\",\"nomarkup\",\"starts\",\"literal\",\"QUOTE_STRING_MODE\",\"illegal\"]\n}\n"]