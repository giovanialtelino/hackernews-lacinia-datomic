["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\n/**\n * Register the given effect `handler` for the given `id`.\n * \n *   `id` is keyword, often namespaced.\n *   `handler` is a side-effecting function which takes a single argument and whose return\n *   value is ignored.\n * \n *   Example Use\n *   -----------\n * \n *   First, registration ... associate `:effect2` with a handler.\n * \n *   (reg-fx\n *   :effect2\n *   (fn [value]\n *      ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map ...\n * \n *   {...\n * :effect2  [1 2]}\n * \n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n * called with an argument of `[1 2]`.\n */\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__21670 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__21671 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__21671);\n\ntry{try{var seq__21672 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__21673 = null;\nvar count__21674 = (0);\nvar i__21675 = (0);\nwhile(true){\nif((i__21675 < count__21674)){\nvar vec__21685 = chunk__21673.cljs$core$IIndexed$_nth$arity$2(null,i__21675);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21685,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21685,(1),null);\nvar temp__5733__auto___21772 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___21772)){\nvar effect_fn_21773 = temp__5733__auto___21772;\n(effect_fn_21773.cljs$core$IFn$_invoke$arity$1 ? effect_fn_21773.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_21773.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__21774 = seq__21672;\nvar G__21775 = chunk__21673;\nvar G__21776 = count__21674;\nvar G__21777 = (i__21675 + (1));\nseq__21672 = G__21774;\nchunk__21673 = G__21775;\ncount__21674 = G__21776;\ni__21675 = G__21777;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__21672);\nif(temp__5735__auto__){\nvar seq__21672__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__21672__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__21672__$1);\nvar G__21778 = cljs.core.chunk_rest(seq__21672__$1);\nvar G__21779 = c__4556__auto__;\nvar G__21780 = cljs.core.count(c__4556__auto__);\nvar G__21781 = (0);\nseq__21672 = G__21778;\nchunk__21673 = G__21779;\ncount__21674 = G__21780;\ni__21675 = G__21781;\ncontinue;\n} else {\nvar vec__21691 = cljs.core.first(seq__21672__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21691,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21691,(1),null);\nvar temp__5733__auto___21782 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___21782)){\nvar effect_fn_21783 = temp__5733__auto___21782;\n(effect_fn_21783.cljs$core$IFn$_invoke$arity$1 ? effect_fn_21783.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_21783.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__21784 = cljs.core.next(seq__21672__$1);\nvar G__21785 = null;\nvar G__21786 = (0);\nvar G__21787 = (0);\nseq__21672 = G__21784;\nchunk__21673 = G__21785;\ncount__21674 = G__21786;\ni__21675 = G__21787;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__21234__auto___21788 = re_frame.interop.now();\nvar duration__21235__auto___21789 = (end__21234__auto___21788 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__21235__auto___21789,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__21234__auto___21788);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__21670);\n}} else {\nvar seq__21695 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__21696 = null;\nvar count__21697 = (0);\nvar i__21698 = (0);\nwhile(true){\nif((i__21698 < count__21697)){\nvar vec__21710 = chunk__21696.cljs$core$IIndexed$_nth$arity$2(null,i__21698);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21710,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21710,(1),null);\nvar temp__5733__auto___21799 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___21799)){\nvar effect_fn_21800 = temp__5733__auto___21799;\n(effect_fn_21800.cljs$core$IFn$_invoke$arity$1 ? effect_fn_21800.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_21800.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__21801 = seq__21695;\nvar G__21802 = chunk__21696;\nvar G__21803 = count__21697;\nvar G__21804 = (i__21698 + (1));\nseq__21695 = G__21801;\nchunk__21696 = G__21802;\ncount__21697 = G__21803;\ni__21698 = G__21804;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__21695);\nif(temp__5735__auto__){\nvar seq__21695__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__21695__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__21695__$1);\nvar G__21806 = cljs.core.chunk_rest(seq__21695__$1);\nvar G__21807 = c__4556__auto__;\nvar G__21808 = cljs.core.count(c__4556__auto__);\nvar G__21809 = (0);\nseq__21695 = G__21806;\nchunk__21696 = G__21807;\ncount__21697 = G__21808;\ni__21698 = G__21809;\ncontinue;\n} else {\nvar vec__21721 = cljs.core.first(seq__21695__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21721,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21721,(1),null);\nvar temp__5733__auto___21810 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___21810)){\nvar effect_fn_21816 = temp__5733__auto___21810;\n(effect_fn_21816.cljs$core$IFn$_invoke$arity$1 ? effect_fn_21816.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_21816.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__21817 = cljs.core.next(seq__21695__$1);\nvar G__21818 = null;\nvar G__21819 = (0);\nvar G__21820 = (0);\nseq__21695 = G__21817;\nchunk__21696 = G__21818;\ncount__21697 = G__21819;\ni__21698 = G__21820;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nvar seq__21728 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__21729 = null;\nvar count__21730 = (0);\nvar i__21731 = (0);\nwhile(true){\nif((i__21731 < count__21730)){\nvar map__21745 = chunk__21729.cljs$core$IIndexed$_nth$arity$2(null,i__21731);\nvar map__21745__$1 = (((((!((map__21745 == null))))?(((((map__21745.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21745.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21745):map__21745);\nvar effect = map__21745__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21745__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21745__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__21728,chunk__21729,count__21730,i__21731,map__21745,map__21745__$1,effect,ms,dispatch){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__21728,chunk__21729,count__21730,i__21731,map__21745,map__21745__$1,effect,ms,dispatch))\n,ms);\n}\n\n\nvar G__21825 = seq__21728;\nvar G__21826 = chunk__21729;\nvar G__21827 = count__21730;\nvar G__21828 = (i__21731 + (1));\nseq__21728 = G__21825;\nchunk__21729 = G__21826;\ncount__21730 = G__21827;\ni__21731 = G__21828;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__21728);\nif(temp__5735__auto__){\nvar seq__21728__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__21728__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__21728__$1);\nvar G__21829 = cljs.core.chunk_rest(seq__21728__$1);\nvar G__21830 = c__4556__auto__;\nvar G__21831 = cljs.core.count(c__4556__auto__);\nvar G__21832 = (0);\nseq__21728 = G__21829;\nchunk__21729 = G__21830;\ncount__21730 = G__21831;\ni__21731 = G__21832;\ncontinue;\n} else {\nvar map__21747 = cljs.core.first(seq__21728__$1);\nvar map__21747__$1 = (((((!((map__21747 == null))))?(((((map__21747.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21747.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21747):map__21747);\nvar effect = map__21747__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21747__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21747__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__21728,chunk__21729,count__21730,i__21731,map__21747,map__21747__$1,effect,ms,dispatch,seq__21728__$1,temp__5735__auto__){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__21728,chunk__21729,count__21730,i__21731,map__21747,map__21747__$1,effect,ms,dispatch,seq__21728__$1,temp__5735__auto__))\n,ms);\n}\n\n\nvar G__21834 = cljs.core.next(seq__21728__$1);\nvar G__21835 = null;\nvar G__21836 = (0);\nvar G__21837 = (0);\nseq__21728 = G__21834;\nchunk__21729 = G__21835;\ncount__21730 = G__21836;\ni__21731 = G__21837;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__21751 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__21752 = null;\nvar count__21753 = (0);\nvar i__21754 = (0);\nwhile(true){\nif((i__21754 < count__21753)){\nvar event = chunk__21752.cljs$core$IIndexed$_nth$arity$2(null,i__21754);\nre_frame.router.dispatch(event);\n\n\nvar G__21841 = seq__21751;\nvar G__21842 = chunk__21752;\nvar G__21843 = count__21753;\nvar G__21844 = (i__21754 + (1));\nseq__21751 = G__21841;\nchunk__21752 = G__21842;\ncount__21753 = G__21843;\ni__21754 = G__21844;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__21751);\nif(temp__5735__auto__){\nvar seq__21751__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__21751__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__21751__$1);\nvar G__21845 = cljs.core.chunk_rest(seq__21751__$1);\nvar G__21846 = c__4556__auto__;\nvar G__21847 = cljs.core.count(c__4556__auto__);\nvar G__21848 = (0);\nseq__21751 = G__21845;\nchunk__21752 = G__21846;\ncount__21753 = G__21847;\ni__21754 = G__21848;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__21751__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__21851 = cljs.core.next(seq__21751__$1);\nvar G__21852 = null;\nvar G__21853 = (0);\nvar G__21854 = (0);\nseq__21751 = G__21851;\nchunk__21752 = G__21852;\ncount__21753 = G__21853;\ni__21754 = G__21854;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__21759 = cljs.core.seq(value);\nvar chunk__21760 = null;\nvar count__21761 = (0);\nvar i__21762 = (0);\nwhile(true){\nif((i__21762 < count__21761)){\nvar event = chunk__21760.cljs$core$IIndexed$_nth$arity$2(null,i__21762);\nclear_event(event);\n\n\nvar G__21858 = seq__21759;\nvar G__21859 = chunk__21760;\nvar G__21860 = count__21761;\nvar G__21861 = (i__21762 + (1));\nseq__21759 = G__21858;\nchunk__21760 = G__21859;\ncount__21761 = G__21860;\ni__21762 = G__21861;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__21759);\nif(temp__5735__auto__){\nvar seq__21759__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__21759__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__21759__$1);\nvar G__21862 = cljs.core.chunk_rest(seq__21759__$1);\nvar G__21863 = c__4556__auto__;\nvar G__21864 = cljs.core.count(c__4556__auto__);\nvar G__21865 = (0);\nseq__21759 = G__21862;\nchunk__21760 = G__21863;\ncount__21761 = G__21864;\ni__21762 = G__21865;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__21759__$1);\nclear_event(event);\n\n\nvar G__21866 = cljs.core.next(seq__21759__$1);\nvar G__21867 = null;\nvar G__21868 = (0);\nvar G__21869 = (0);\nseq__21759 = G__21866;\nchunk__21760 = G__21867;\ncount__21761 = G__21868;\ni__21762 = G__21869;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$day8.re-frame.tracing","~$day8.re-frame.tracing-stubs","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^O","~$re-frame.interceptor","^P","~$re-frame.events","^Q","~$re-frame.trace","^R","~$re-frame.registrar","^S","~$cljs.core","^T","~$goog","^U","~$router","~$re-frame.router","^W","^W","~$trace","^R","~$events","^Q","~$re-frame.loggers","^Z","~$re-frame.db","^["],"~:seen",["^H",["~:require"]],"~:uses",["^ ","~$app-db","^[","~$->interceptor","^P","~$set-timeout!","^O","~$get-handler","^S","~$clear-handlers","^S","~$register-handler","^S","~$console","^Z"],"~:require-macros",["^ ","^R","^R","^X","^R","^T","^T"],"~:form",["~#list",["~$ns","^J",["^1<",["^11",["^W","~:as","^V"],["^[","~:refer",["^13"]],["^P","^1?",["^14"]],["^O","^1?",["^15"]],["^Q","^1>","^Y"],["^S","^1?",["^16","^17","^18"]],["^Z","^1?",["^19"]],["^R","^1>","^X","~:include-macros",true]]]]],"~:flags",["^ ","^11",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^W","^[","^P","^O","^Q","^S","^Z","^R"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1598576996202,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (doseq [[effect-key effect-value] (:effects context)]\n                 (if-let [effect-fn (get-handler kind effect-key false)]\n                   (effect-fn effect-value)\n                   (console :error \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\")))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} (remove nil? value)]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAcA,AAAA,AAAKA;AACL,AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAMC,AAwBHC,AAAGC;AAxBN,AAyBE,AAACC,AAAiBJ,AAAKE,AAAGC;;AAI5B;;;;;;;;;;;;;;;;;;;;;;AAAKE,AAqBH,AAAA,AAAA,AAAA,AAACC,AAEQ,AACGC;AADH,AAEE,AAAA,AAAAC;AAAA,AAAAC,AAAAC;AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAF,AAAAC;;AAAA,AAAA,AAAA,AAAA,AAEE,AAAAU,AAAA,AAAAC,AAAkC,AAAA,AAAUf;AAA5CgB,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASiB;AAAT,AAAAhB,AAAAD,AAAA,AAAA,AAAoBkB;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAY/C,AAAK2C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAAtB;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAG,AAAA,AAAAN,AAAAD;AAAA,AAAA,AAAAO;AAAA,AAAA,AAAAP,AAAAO;AAAA,AAAA,AAAA,AAAAC,AAAAR;AAAA,AAAAS,AAAA,AAAAC,AAAAV;AAAA,AAAA,AAAA,AAAAW,AAAAX;AAAAS;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAAI,AAAA,AAAAC,AAAAd;AAAA,AAAAM,AAAAO,AAAA,AAAA,AAASS;AAAT,AAAAhB,AAAAO,AAAA,AAAA,AAAoBU;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAY/C,AAAK2C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAA,AAAAP,AAAAf;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAFF,AAAA,AAAA,AAAAb;AAAA,AAAA,AAAAK,AAAA,AAAAC;AAAAC,AAAA,AAAAF,AAAA,AAAA,AAAAH;AAAA,AAAA,AAAAM,AAAAC,AAAAC,AAAA,AAAAC,AAAAT,AAAA,AAAAK,AAAA,AAAA,AAAAD;;AAAA,AAAAM,AAAAP;;AAAA;AAAA,AAAA,AAAAH,AAAAD;;AAAA,AAEE,AAAA4B,AAAA,AAAAf,AAAkC,AAAA,AAAUf;AAA5C+B,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAA,AAAAb,AAAAc,AAAA,AAAA,AAASE;AAAT,AAAAhB,AAAAc,AAAA,AAAA,AAAoBG;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAY/C,AAAK2C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAAN;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAZ,AAAA,AAAAN,AAAAe;AAAA,AAAA,AAAAT;AAAA,AAAA,AAAAS,AAAAT;AAAA,AAAA,AAAA,AAAAC,AAAAQ;AAAA,AAAAP,AAAA,AAAAC,AAAAM;AAAA,AAAA,AAAA,AAAAL,AAAAK;AAAAP;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAAY,AAAA,AAAAP,AAAAE;AAAA,AAAAV,AAAAe,AAAA,AAAA,AAASC;AAAT,AAAAhB,AAAAe,AAAA,AAAA,AAAoBE;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAY/C,AAAK2C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAA,AAAAP,AAAAC;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;;AAsBf,AAAA,AAACpC,AAEC,AAAKgD;AAAL,AACE,AAAAC,AAAA,AAAA5B,AAAyC,AAACyC,AAAOC,AAAKf;AAAtDE,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAAiCQ;AAAjC,AAAAJ,AAAAJ,AAAA,AAAgBM;AAAhB,AAAAF,AAAAJ,AAAA,AAAmBO;AAAnB,AAAA,AACI,AAAI,AAAI,AAACI,AAAOJ,AAAU,AAAK,AAASD;AACtC,AAAA,AAAA,AAACZ,AAA+Dc;;AAChE,AAAA,AAACI;;AAAD,AAAe,AAACC,AAAgBN;;AAAUD;;;AAHhD;AAAA,AAAAV;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAzB,AAAA,AAAAN,AAAA4B;AAAA,AAAA,AAAAtB;AAAA,AAAA,AAAAsB,AAAAtB;AAAA,AAAA,AAAA,AAAAC,AAAAqB;AAAA,AAAApB,AAAA,AAAAC,AAAAmB;AAAA,AAAA,AAAA,AAAAlB,AAAAkB;AAAApB;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA6B,AAAA,AAAAxB,AAAAe;AAAAS,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAJ,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAAC,AAAAE,AAAAA;AAAAA,AAAiCG;AAAjC,AAAAJ,AAAAC,AAAA,AAAgBC;AAAhB,AAAAF,AAAAC,AAAA,AAAmBE;AAAnB,AAAA,AACI,AAAI,AAAI,AAACI,AAAOJ,AAAU,AAAK,AAASD;AACtC,AAAA,AAAA,AAACZ,AAA+Dc;;AAChE,AAAA,AAACI;;AAAD,AAAe,AAACC,AAAgBN;;AAAUD;;;AAHhD;AAAA,AAAA,AAAAxB,AAAAc;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AAaJ,AAAA,AAACjD,AAEC,AAAKgD;AAAL,AACE,AAAA,AAAQ,AAACmB,AAAQnB;AACf,AAAA,AAAA,AAACD,AAAqFC;;AACtF,AAACkB,AAAgBlB;;;AAgBvB,AAAA,AAAChD,AAEC,AAAKgD;AAAL,AACE,AAAA,AAAQ,AAACoB,AAAYpB;AACnB,AAAA,AAAA,AAACD,AAA2FC;;AAC5F,AAAAqB,AAAA,AAAAhD,AAAc,AAACyC,AAAOC,AAAKf;AAA3BsB,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQC;AAAR,AAAA,AAAmC,AAACP,AAAgBO;;AAApD;AAAA,AAAAJ;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAA7C,AAAA,AAAAN,AAAAgD;AAAA,AAAA,AAAA1C;AAAA,AAAA,AAAA0C,AAAA1C;AAAA,AAAA,AAAA,AAAAC,AAAAyC;AAAA,AAAAxC,AAAA,AAAAC,AAAAuC;AAAA,AAAA,AAAA,AAAAtC,AAAAsC;AAAAxC;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAK,AAAAmC,AAAQI;AAAR,AAAA,AAAmC,AAACP,AAAgBO;;AAApD;AAAA,AAAA,AAAAtC,AAAAkC;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;;AAaN,AAAA,AAACrE,AAEC,AAAKgD;AAAL,AACE,AAAM0B,AAAY,AAACC,AAAQC,AAAeC;AAA1C,AACE,AAAI,AAACT,AAAYpB;AACf,AAAA8B,AAAA,AAAAzD,AAAc2B;AAAd+B,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQR;AAAR,AAAA,AAAqB,AAACC,AAAYD;;AAAlC;AAAA,AAAAK;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAtD,AAAA,AAAAN,AAAAyD;AAAA,AAAA,AAAAnD;AAAA,AAAA,AAAAmD,AAAAnD;AAAA,AAAA,AAAA,AAAAC,AAAAkD;AAAA,AAAAjD,AAAA,AAAAC,AAAAgD;AAAA,AAAA,AAAA,AAAA/C,AAAA+C;AAAAjD;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAK,AAAA4C,AAAQL;AAAR,AAAA,AAAqB,AAACC,AAAYD;;AAAlC;AAAA,AAAA,AAAAtC,AAAA2C;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AACA,AAACJ,AAAY1B;;;AAUrB,AAAA,AAAChD,AAEC,AAAKgD;AAAL,AACE,AAAA,AAAQ,AAAA,AAAAkC,AAAaC,AAAOnC;AAC1B,AAACoC,AAAOD,AAAOnC;;AADjB","names",["re-frame.fx/kind","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__21670","re-frame.trace/*current-trace*","*current-trace*-temp-val__21671","re-frame.trace/start-trace","end__21234__auto__","re-frame.interop/now","duration__21235__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","seq__21672","cljs.core/seq","chunk__21673","count__21674","i__21675","vec__21685","cljs.core.nth","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__21691","cljs.core/first","cljs.core/next","seq__21695","chunk__21696","count__21697","i__21698","vec__21710","vec__21721","effect-key","effect-value","temp__5733__auto__","effect-fn","re_frame.registrar.get_handler","re_frame.loggers.console","value","seq__21728","chunk__21729","count__21730","i__21731","map__21745","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","map__21747","ms","dispatch","effect","cljs.core.remove","cljs.core/nil?","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__21751","chunk__21752","count__21753","i__21754","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__21759","chunk__21760","count__21761","i__21762","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^H",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1598571556000,1598571556000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",14,"~:deps-ids",["^H",[13,9]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1E","reagent/impl/batching.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","~$reagent.debug","~$reagent.impl.util"]]],["^1E","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","~$goog.dom.HtmlElement"]]],["^1E","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","~$goog.labs.userAgent.util","~$goog.string"]]],["^1E","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","~$goog.array","~$goog.asserts"]]],["^1E","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^1E","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2O","^2M","~$goog.object","~$goog.string.internal"]]],["^1E","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2P","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2R"]]],["^1E","re_frame/loggers.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","~$clojure.set"]]],["^1E","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2P"]]],["^2B","node_modules/prop-types/checkPropTypes.js"],[1598571556000,1598571556000,1549836454000,"^2C",["^ ","^2D",3,"^2E",["^H",[2]],"^2F",["^2G","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1E","reagent/impl/util.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","~$clojure.string"]]],["^1E","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2M","~$goog.reflect","^2N"]]],["^1E","re_frame/router.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","^Q","^O","^Z","^R"]]],["^1E","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^1E","re_frame/registrar.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","^O","^Z"]]],["^1E","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^2B","node_modules/scheduler/cjs/scheduler.development.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",7,"^2E",["^H",[]],"^2F",["^2G"]]],["^1E","reagent/ratom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","^2K","^2J","~$reagent.impl.batching","^2Y","^2Q"]]],["^2B","node_modules/scheduler/cjs/scheduler.production.min.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",6,"^2E",["^H",[]],"^2F",["^2G"]]],["^1E","re_frame/interop.cljs"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","~$goog.async.nextTick","~$reagent.core","~$reagent.ratom"]]],["^1E","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^2B","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",10,"^2E",["^H",[]],"^2F",["^2G"]]],["^2B","node_modules/react/index.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",5,"^2E",["^H",[1,4]],"^2F",["^2G","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1E","shadow/js.js"],["a9b6248f5bcd9480b4be9de7fccb49898ed962b8","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^1E","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^1E","reagent/impl/template.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^H",[5]],"^2F",["^U","^T","^A","^2[","~$clojure.walk","^2K","~$reagent.impl.component","^34","^37","^2J","^2Q"]]],["^1E","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2P"]]],["^2B","node_modules/react-dom/cjs/react-dom.production.min.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",9,"^2E",["^H",[0,5,8]],"^2F",["^2G","^A","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1598571556000,1598571556000,1598571537000],["^2B","node_modules/react/cjs/react.development.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",4,"^2E",["^H",[0,3]],"^2F",["^2G","^3<","~$module$node_modules$prop_types$checkPropTypes"]]],["^1E","re_frame/events.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","^[","~$re-frame.utils","^O","^S","^Z","^P","^R"]]],["^1E","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2P","^33"]]],["^1E","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2P","~$goog.html.trustedtypes","^2U","^2V","^2W","^2X"]]],["^1E","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^2B","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",11,"^2E",["^H",[]],"^2F",["^2G"]]],["^1E","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^1E","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2O","^2P","~$goog.html.SafeUrl","^2W","^2X","^2R"]]],["^1E","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2P","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3B","^2T","~$goog.html.uncheckedconversions","^2W","^2R"]]],["^1E","reagent/impl/component.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^H",[5]],"^2F",["^U","^T","^2Q","^A","^2K","^34","^37","^2J"]]],["^1E","clojure/walk.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T"]]],["^1E","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1E","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2O","^2P","~$goog.dom.TagName","~$goog.dom.tags","^3F","^3G","~$goog.html.SafeStyleSheet","^3B","^2T","^3A","^2U","^2V","^30","^2Q","^2W","^2X","^2R"]]],["^1E","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2Q"]]],["^1E","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^2B","node_modules/scheduler/index.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",8,"^2E",["^H",[7,6]],"^2F",["^2G","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1E","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2O","^2M","^2N"]]],["^1E","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2O","^2P","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3K","~$goog.dom.safe","^3E","^3H","~$goog.math.Coordinate","~$goog.math.Size","^2Q","^2N","~$goog.string.Unicode","~$goog.userAgent"]]],["^1E","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","~$goog.debug.Error","^3Q"]]],["^1E","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2O","^2P","^2N","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1E","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^2B","node_modules/object-assign/index.js"],[1598571556000,1598571556000,1484580833000,"^2C",["^ ","^2D",0,"^2E",["^H",[]],"^2F",["^2G"]]],["^1E","re_frame/db.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","^O"]]],["^1E","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^1E","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",[]]],["^1E","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2O","^2Q"]]],["^1E","clojure/string.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","^2N","~$goog.string.StringBuffer"]]],["^2B","node_modules/react/cjs/react.production.min.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",1,"^2E",["^H",[0]],"^2F",["^2G","^3<"]]],["^1E","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2P"]]],["^1E","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^3R","^3H","^2W","^2R"]]],["^1E","re_frame/interceptor.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","^Z","^O","^R","^2Y"]]],["^1E","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^1E","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2R"]]],["^1E","reagent/core.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^H",[5]],"^2F",["^U","^T","^A","~$reagent.impl.template","^3;","^2K","^34","^37","^2J","~$reagent.dom"]]],["^1E","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^1E","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","~$goog.math"]]],["^1E","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2O","^2P","^3D","^44"]]],["^1E","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","~$goog.debug.entryPointRegistry","~$goog.dom","^3K","^3R","^3D","^3E","^2T","^30","^31","^2W"]]],["^1E","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2P","^3E","^3F","^3G","^3M","^3B","^2T","^2W","^2R"]]],["^1E","re_frame/utils.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","^Z"]]],["^1E","reagent/dom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^H",[14]],"^2F",["^U","^T","^C","^2K","^42","^34","^37"]]],["^1E","re_frame/fx.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","^W","^[","^P","^O","^Q","^S","^Z","^R"]]],["^2B","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1598571556000,1598571556000,1549571078000,"^2C",["^ ","^2D",2,"^2E",["^H",[]],"^2F",["^2G"]]],["^1E","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U"]]],["^1E","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","~$goog.math.Long","~$goog.math.Integer","^2N","^2Q","^2O","~$goog.Uri","^41"]]],["^1E","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2P","^3A","^2W","^2X"]]],["^1E","reagent/debug.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T"]]],["^1E","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2O","^2P","^3G","^2Q","^2W","^2X","^2R"]]],["^1E","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^33"]]],["^1E","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^3V"]]],["^2B","node_modules/scheduler/tracing.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",12,"^2E",["^H",[11,10]],"^2F",["^2G","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2B","node_modules/react-dom/cjs/react-dom.development.js"],[1598571556000,1598571556000,499162500000,"^2C",["^ ","^2D",13,"^2E",["^H",[0,3,12,5,8]],"^2F",["^2G","^A","^3<","^3=","^3?","~$module$node_modules$scheduler$tracing"]]],["^1E","clojure/set.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T"]]],["^1E","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2O","^2P","^2N"]]],["^1E","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^2P","^2X"]]],["^1E","re_frame/trace.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^H",[]],"^2F",["^U","^T","^O","^Z","^3D"]]]]],"~:clj-info",["^ ","jar:file:/home/giovani/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1598571553000,"jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/interop.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596724258000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/core.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/trace.cljc",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1598571537000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U","^V","^W","^W","^W","^X","^R","^Y","^Q","^Z","^Z","^[","^["],"^10",["^H",["^11"]],"^12",["^ ","^13","^[","^14","^P","^15","^O","^16","^S","^17","^S","^18","^S","^19","^Z"],"~:defs",["^ ","~$kind",["^ ","^I","^1Q","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1<",["~$quote",["^1<",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^I","^1S","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1<",[["^5:","^5;"]]],"~:protocol-impl",null,"~:arglists-meta",["^1<",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^58",["^1<",["^59",["^1<",[["^5:","^5;"]]]]],"^5<","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",47,"^8",6,"^9",47,"^:",11],"^I","^1U","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",47,"^9",47,"^54","~$cljs.core/IMap","^5<","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^1:",["^ ","^R","^R","^X","^R","^T","^T"],"~:cljs.analyzer/constants",["^ ","^10",["^H",["~:db","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^5V","^5Q","^5I","^5O","^5W","^5P","^5J","^5L","^5T","^5R","^5S","^5X","^5U","^5N","^5K","^5M","^5H"]],"^1A",["^ ","^11",["^H",[]]],"^1B",["^ "],"^1C",["^U","^T","^W","^[","^P","^O","^Q","^S","^Z","^R"]],"^L","^J","~:ns-specs",["^ "],"~:ns-spec-vars",["^H",[]],"~:compiler-options",["^2A",[["^60","~:static-fns"],true,["^60","~:shadow-tweaks"],null,["^60","~:source-map-inline"],null,["^60","~:elide-asserts"],true,["^60","~:optimize-constants"],null,["^60","^1H"],null,["^60","~:external-config"],null,["^60","~:tooling-config"],null,["^60","~:emit-constants"],null,["^60","~:load-tests"],false,["^60","~:form-size-threshold"],null,["^60","~:infer-externs"],true,["^60","^1J"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^60","~:fn-invoke-direct"],null,["^60","~:source-map"],null]]]