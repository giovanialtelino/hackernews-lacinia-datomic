["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\nreagent.ratom.debug = false;\nreagent.ratom.generation = (0);\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn (cljs.core.deref(reagent.ratom._running));\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nif((len === reagent.ratom.arr_len(y))){\nvar i = (0);\nwhile(true){\nvar or__4126__auto__ = (i === len);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__20184 = (i + (1));\ni = G__20184;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn false;\n}\n});\n/**\n * When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n * \n *   See function notify-deref-watcher! to know how *ratom-context* is updated\n */\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__20050 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20051 = obj;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20051);\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20050);\n}});\n/**\n * Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n *   `deref`ed atoms captured during `in-context`, if any differ from the\n *   `watching` field of r.  Clears the `dirty?` flag on r.\n * \n *   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n *   the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\n(r.captured = null);\n\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\n(r.dirty_QMARK_ = false);\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5739__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5739__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn (r.captured = [derefed]);\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?(this$.watchesArr = cljs.core.reduce_kv((function (p1__20056_SHARP_,p2__20057_SHARP_,p3__20058_SHARP_){\nvar G__20059 = p1__20056_SHARP_;\nG__20059.push(p2__20057_SHARP_);\n\nG__20059.push(p3__20058_SHARP_);\n\nreturn G__20059;\n}),[],this$.watches)):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_20188 = (a[i]);\nvar f_20189 = (a[(i + (1))]);\n(f_20189.cljs$core$IFn$_invoke$arity$4 ? f_20189.cljs$core$IFn$_invoke$arity$4(k_20188,this$,old,new$) : f_20189.call(null,k_20188,this$,old,new$));\n\nvar G__20190 = ((2) + i);\ni = G__20190;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s){\ncljs.core._write(writer,[\"#<\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__20060 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20061 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20061);\n\ntry{return cljs.core._deref(a);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20060);\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\">\");\n});\nreagent.ratom.rea_queue = null;\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\n(reagent.ratom.rea_queue = []);\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\n(reagent.ratom.rea_queue = null);\n\nvar n__4613__auto___20196 = q.length;\nvar i_20197 = (0);\nwhile(true){\nif((i_20197 < n__4613__auto___20196)){\n(q[i_20197])._queued_run();\n\nvar G__20198 = (i_20197 + (1));\ni_20197 = G__20198;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\n(reagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_);\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Atom:\");\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\n}\n\nvar old_value = self__.state;\n(self__.state = new_value);\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n}));\n\n(reagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RAtom.cljs$lang$type = true);\n\n(reagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\");\n\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/RAtom\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__20074 = arguments.length;\nswitch (G__20074) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4757__auto__ = [];\nvar len__4736__auto___20204 = arguments.length;\nvar i__4737__auto___20205 = (0);\nwhile(true){\nif((i__4737__auto___20205 < len__4736__auto___20204)){\nargs_arr__4757__auto__.push((arguments[i__4737__auto___20205]));\n\nvar G__20206 = (i__4737__auto___20205 + (1));\ni__4737__auto___20205 = G__20206;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4758__auto__ = (new cljs.core.IndexedSeq(args_arr__4757__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4758__auto__);\n\n}\n});\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n}));\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__20075){\nvar map__20077 = p__20075;\nvar map__20077__$1 = (((((!((map__20077 == null))))?(((((map__20077.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__20077.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20077):map__20077);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20077__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20077__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n}));\n\n/** @this {Function} */\n(reagent.ratom.atom.cljs$lang$applyTo = (function (seq20072){\nvar G__20073 = cljs.core.first(seq20072);\nvar seq20072__$1 = cljs.core.next(seq20072);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20073,seq20072__$1);\n}));\n\n(reagent.ratom.atom.cljs$lang$maxFixedArity = (1));\n\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = o.reagReactionCache;\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__20084 = f;\nvar G__20085 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__20086 = (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __20209 = o.reagReactionCache;\nvar __20210__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__20209,k);\n(o.reagReactionCache = __20210__$1);\n\nif((!((obj == null)))){\n(obj.reaction = null);\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__20084,G__20085,G__20086) : reagent.ratom.make_reaction.call(null,G__20084,G__20085,G__20086));\n})();\nvar v = cljs.core._deref(r__$1);\n(o.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\n(obj.reaction = r__$1);\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nreturn reagent.ratom.cached_reaction((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n}),self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track:\");\n}));\n\n(reagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Track.cljs$lang$type = true);\n\n(reagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\");\n\n(reagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/Track\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__20095 = (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});\nvar G__20096 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__20097 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__20095,G__20096,G__20097) : reagent.ratom.make_reaction.call(null,G__20095,G__20096,G__20097));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___20211 = arguments.length;\nvar i__4737__auto___20212 = (0);\nwhile(true){\nif((i__4737__auto___20212 < len__4736__auto___20211)){\nargs__4742__auto__.push((arguments[i__4737__auto___20212]));\n\nvar G__20213 = (i__4737__auto___20212 + (1));\ni__4737__auto___20212 = G__20213;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.ratom.track.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track.cljs$lang$applyTo = (function (seq20098){\nvar G__20099 = cljs.core.first(seq20098);\nvar seq20098__$1 = cljs.core.next(seq20098);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20099,seq20098__$1);\n}));\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___20216 = arguments.length;\nvar i__4737__auto___20217 = (0);\nwhile(true){\nif((i__4737__auto___20217 < len__4736__auto___20216)){\nargs__4742__auto__.push((arguments[i__4737__auto___20217]));\n\nvar G__20218 = (i__4737__auto___20217 + (1));\ni__4737__auto___20217 = G__20218;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq20101){\nvar G__20102 = cljs.core.first(seq20101);\nvar seq20101__$1 = cljs.core.next(seq20101);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20102,seq20101__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__20105 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20107 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20107);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20105);\n}}));\n\n(reagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\n(self__.state = newstate);\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n}));\n\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Cursor: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.path)].join(''));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20116 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20116) : f.call(null,G__20116));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20118 = a__$1._peek();\nvar G__20119 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20118,G__20119) : f.call(null,G__20118,G__20119));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20120 = a__$1._peek();\nvar G__20121 = x;\nvar G__20122 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20120,G__20121,G__20122) : f.call(null,G__20120,G__20121,G__20122));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n}):(function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n}));\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n}));\n\n(reagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RCursor.cljs$lang$type = true);\n\n(reagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\");\n\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/RCursor\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5739__auto__ = v.destroy;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5739__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5737__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5737__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5737__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nvar reagent$ratom$IDisposable$dispose_BANG_$dyn_20220 = (function (this$){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null,this$));\n} else {\nvar m__4426__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n});\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nreturn reagent$ratom$IDisposable$dispose_BANG_$dyn_20220(this$);\n}\n});\n\nvar reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_20223 = (function (this$,f){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4429__auto__.call(null,this$,f));\n} else {\nvar m__4426__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4426__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n});\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nreturn reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_20223(this$,f);\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nvar reagent$ratom$IRunnable$run$dyn_20224 = (function (this$){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (reagent.ratom.run[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null,this$));\n} else {\nvar m__4426__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n});\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nreturn reagent$ratom$IRunnable$run$dyn_20224(this$);\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__20133 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20134 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20134);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20133);\n}}));\n\n(reagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\n(self__.dirty_QMARK_ = true);\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\n(self__.watching = derefed);\n\nvar seq__20137_20225 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__20138_20226 = null;\nvar count__20139_20227 = (0);\nvar i__20140_20228 = (0);\nwhile(true){\nif((i__20140_20228 < count__20139_20227)){\nvar w_20229 = chunk__20138_20226.cljs$core$IIndexed$_nth$arity$2(null,i__20140_20228);\ncljs.core._add_watch(w_20229,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__20230 = seq__20137_20225;\nvar G__20231 = chunk__20138_20226;\nvar G__20232 = count__20139_20227;\nvar G__20233 = (i__20140_20228 + (1));\nseq__20137_20225 = G__20230;\nchunk__20138_20226 = G__20231;\ncount__20139_20227 = G__20232;\ni__20140_20228 = G__20233;\ncontinue;\n} else {\nvar temp__5735__auto___20235 = cljs.core.seq(seq__20137_20225);\nif(temp__5735__auto___20235){\nvar seq__20137_20236__$1 = temp__5735__auto___20235;\nif(cljs.core.chunked_seq_QMARK_(seq__20137_20236__$1)){\nvar c__4556__auto___20237 = cljs.core.chunk_first(seq__20137_20236__$1);\nvar G__20238 = cljs.core.chunk_rest(seq__20137_20236__$1);\nvar G__20239 = c__4556__auto___20237;\nvar G__20240 = cljs.core.count(c__4556__auto___20237);\nvar G__20241 = (0);\nseq__20137_20225 = G__20238;\nchunk__20138_20226 = G__20239;\ncount__20139_20227 = G__20240;\ni__20140_20228 = G__20241;\ncontinue;\n} else {\nvar w_20242 = cljs.core.first(seq__20137_20236__$1);\ncljs.core._add_watch(w_20242,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__20243 = cljs.core.next(seq__20137_20236__$1);\nvar G__20244 = null;\nvar G__20245 = (0);\nvar G__20246 = (0);\nseq__20137_20225 = G__20243;\nchunk__20138_20226 = G__20244;\ncount__20139_20227 = G__20245;\ni__20140_20228 = G__20246;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__20143 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__20144 = null;\nvar count__20145 = (0);\nvar i__20146 = (0);\nwhile(true){\nif((i__20146 < count__20145)){\nvar w = chunk__20144.cljs$core$IIndexed$_nth$arity$2(null,i__20146);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__20247 = seq__20143;\nvar G__20248 = chunk__20144;\nvar G__20249 = count__20145;\nvar G__20250 = (i__20146 + (1));\nseq__20143 = G__20247;\nchunk__20144 = G__20248;\ncount__20145 = G__20249;\ni__20146 = G__20250;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__20143);\nif(temp__5735__auto__){\nvar seq__20143__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__20143__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__20143__$1);\nvar G__20251 = cljs.core.chunk_rest(seq__20143__$1);\nvar G__20252 = c__4556__auto__;\nvar G__20253 = cljs.core.count(c__4556__auto__);\nvar G__20254 = (0);\nseq__20143 = G__20251;\nchunk__20144 = G__20252;\ncount__20145 = G__20253;\ni__20146 = G__20254;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__20143__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__20255 = cljs.core.next(seq__20143__$1);\nvar G__20256 = null;\nvar G__20257 = (0);\nvar G__20258 = (0);\nseq__20143 = G__20255;\nchunk__20144 = G__20256;\ncount__20145 = G__20257;\ni__20146 = G__20258;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{(self__.caught = null);\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e20148){var e = e20148;\n(self__.state = e);\n\n(self__.caught = e);\n\nreturn (self__.dirty_QMARK_ = false);\n}}));\n\n(reagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\n(self__.state = res);\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n}));\n\n(reagent.ratom.Reaction.prototype._set_opts = (function (p__20150){\nvar self__ = this;\nvar map__20151 = p__20150;\nvar map__20151__$1 = (((((!((map__20151 == null))))?(((((map__20151.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__20151.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20151):map__20151);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20151__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20151__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20151__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20151__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\n(this$.auto_run = auto_run__$1);\n} else {\n}\n\nif((!((on_set == null)))){\n(this$.on_set = on_set);\n} else {\n}\n\nif((!((on_dispose == null)))){\n(this$.on_dispose = on_dispose);\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn (this$.nocache_QMARK_ = no_cache);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Reaction \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(a__$1)),\":\"].join(''));\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\n(self__.watching = null);\n\n(self__.state = null);\n\n(self__.auto_run = null);\n\n(self__.dirty_QMARK_ = true);\n\nvar seq__20155_20262 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__20156_20264 = null;\nvar count__20157_20265 = (0);\nvar i__20158_20266 = (0);\nwhile(true){\nif((i__20158_20266 < count__20157_20265)){\nvar w_20267 = chunk__20156_20264.cljs$core$IIndexed$_nth$arity$2(null,i__20158_20266);\ncljs.core._remove_watch(w_20267,this$__$1);\n\n\nvar G__20268 = seq__20155_20262;\nvar G__20269 = chunk__20156_20264;\nvar G__20270 = count__20157_20265;\nvar G__20271 = (i__20158_20266 + (1));\nseq__20155_20262 = G__20268;\nchunk__20156_20264 = G__20269;\ncount__20157_20265 = G__20270;\ni__20158_20266 = G__20271;\ncontinue;\n} else {\nvar temp__5735__auto___20272 = cljs.core.seq(seq__20155_20262);\nif(temp__5735__auto___20272){\nvar seq__20155_20273__$1 = temp__5735__auto___20272;\nif(cljs.core.chunked_seq_QMARK_(seq__20155_20273__$1)){\nvar c__4556__auto___20274 = cljs.core.chunk_first(seq__20155_20273__$1);\nvar G__20275 = cljs.core.chunk_rest(seq__20155_20273__$1);\nvar G__20276 = c__4556__auto___20274;\nvar G__20277 = cljs.core.count(c__4556__auto___20274);\nvar G__20278 = (0);\nseq__20155_20262 = G__20275;\nchunk__20156_20264 = G__20276;\ncount__20157_20265 = G__20277;\ni__20158_20266 = G__20278;\ncontinue;\n} else {\nvar w_20279 = cljs.core.first(seq__20155_20273__$1);\ncljs.core._remove_watch(w_20279,this$__$1);\n\n\nvar G__20280 = cljs.core.next(seq__20155_20273__$1);\nvar G__20281 = null;\nvar G__20282 = (0);\nvar G__20283 = (0);\nseq__20155_20262 = G__20280;\nchunk__20156_20264 = G__20281;\ncount__20157_20265 = G__20282;\ni__20158_20266 = G__20283;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5739__auto__ = this$__$1.on_dispose_arr;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5739__auto__;\nvar n__4613__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4613__auto__)){\nvar fexpr__20161_20284 = (a[i]);\n(fexpr__20161_20284.cljs$core$IFn$_invoke$arity$1 ? fexpr__20161_20284.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__20161_20284.call(null,this$__$1));\n\nvar G__20286 = (i + (1));\ni = G__20286;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = this$__$1.on_dispose_arr;\nif((temp__5737__auto__ == null)){\nreturn (this$__$1.on_dispose_arr = [f__$1]);\n} else {\nvar a = temp__5737__auto__;\nreturn a.push(f__$1);\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\n\nvar oldval = self__.state;\n(self__.state = newval);\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20163 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__20163) : f__$1.call(null,G__20163));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20165 = a__$1._peek_at();\nvar G__20166 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__20165,G__20166) : f__$1.call(null,G__20165,G__20166));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20167 = a__$1._peek_at();\nvar G__20168 = x;\nvar G__20169 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__20167,G__20168,G__20169) : f__$1.call(null,G__20167,G__20168,G__20169));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.flush_BANG_();\n\nreturn this$__$1._run(false);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5739__auto___20297 = self__.caught;\nif((temp__5739__auto___20297 == null)){\n} else {\nvar e_20298 = temp__5739__auto___20297;\nthrow e_20298;\n}\n\nvar non_reactive_20299 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_20299){\nreagent.ratom.flush_BANG_();\n} else {\n}\n\nif(((non_reactive_20299) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_20302 = self__.state;\n(self__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_20302,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_20302,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Reaction.cljs$lang$type = true);\n\n(reagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\");\n\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/Reaction\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___20303 = arguments.length;\nvar i__4737__auto___20304 = (0);\nwhile(true){\nif((i__4737__auto___20304 < len__4736__auto___20303)){\nargs__4742__auto__.push((arguments[i__4737__auto___20304]));\n\nvar G__20305 = (i__4737__auto___20304 + (1));\ni__4737__auto___20304 = G__20305;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__20175){\nvar map__20176 = p__20175;\nvar map__20176__$1 = (((((!((map__20176 == null))))?(((((map__20176.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__20176.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20176):map__20176);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20176__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20176__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20176__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n}));\n\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq20173){\nvar G__20174 = cljs.core.first(seq20173);\nvar seq20173__$1 = cljs.core.next(seq20173);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20174,seq20173__$1);\n}));\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\n(reagent.ratom.temp_reaction = reagent.ratom.make_reaction(null));\n\nr._set_opts(opts);\n\n(r.f = f);\n\n(r.auto_run = (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n}));\n\ngoog.object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\n(self__.changed = true);\n\n(self__.state = newval);\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrap:\");\n}));\n\n(reagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Wrapper.cljs$lang$type = true);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\");\n\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/Wrapper\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$day8.re-frame.tracing","~$day8.re-frame.tracing-stubs","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",["^ ","~$warn","~$reagent.debug","~$dev?","^H"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","~$with-let",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","~$reagent.ratom","~:macro",true],"~$reaction",["^ ","^O",["^P",[["~$&","^R"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^S","~$reagent.ratom/reaction","^U","^V","^W",true],"~$run!",["^ ","^O",["^P",[["~$&","^R"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^S","~$reagent.ratom/run!","^U","^V","^W",true]],"^S","^V","~:op","^U","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^14","~$obj","~$goog.object","~$cljs.core","^17","~$goog","^18","^16","^16","~$reagent.impl.batching","^19","~$clojure.set","^1:","~$util","^14","~$s","^1:","~$batch","^19","^H","^H"],"~:seen",["^K",["~:require","~:require-macros"]],"~:uses",null,"^1?",["^ ","^V","^V","^H","^H","^17","^17"],"~:form",["^P",["~$ns","^V",["^P",["~:refer-clojure","~:exclude",["^L"]]],["^P",["^1?",["^V"]]],["^P",["^1>",["^14","~:as","^1;"],["^H","~:refer-macros",["^G","^I"]],["^19","^1E","^1<"],["^1:","^1E","~$s"],["^16","^1E","^15"]]]]],"~:flags",["^ ","^1?",["^K",[]],"^1>",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^18","^17","^14","^H","^19","^1:","^16"]],"^U","^V","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1598576993411,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [warn dev?]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)\n        len (alength a)]\n    (loop [i 0]\n      (when (< i len)\n        (let [k (aget a i)\n              f (aget a (inc i))]\n          (f k this old new))\n        (recur (+ 2 i))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^K",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.ratom/debug","reagent.ratom/generation","reagent.ratom/-running","cljs.core.atom","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","i","or__4126__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__20050","*ratom-context*-temp-val__20051","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5739__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc","reagent.ratom/remove-w","cljs.core.dissoc","reagent.ratom/notify-w","a","p1__20056#","p2__20057#","p3__20058#","cljs.core/reduce-kv","G__20059","k","reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__20060","*ratom-context*-temp-val__20061","cljs.core/-deref","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4613__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","old-value","more","cljs.core.apply","_","new-meta","goog/getUid","var_args","G__20074","reagent.ratom/atom","args-arr__4757__auto__","len__4736__auto__","i__4737__auto__","argseq__4758__auto__","cljs.core/IndexedSeq","p__20075","map__20077","cljs.core/hash-map","cljs.core.get","seq20072","G__20073","cljs.core/first","cljs.core/next","self__4723__auto__","reagent.ratom/cached-reaction","destroy","m","G__20084","G__20085","G__20086","reagent.ratom/make-reaction","cljs.core/dec","v","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5737__auto__","cljs.core._EQ_","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__20095","G__20096","G__20097","args__4742__auto__","argseq__4743__auto__","reagent.ratom/track","seq20098","G__20099","reagent.ratom/track!","seq20101","G__20102","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__20105","*ratom-context*-temp-val__20107","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in","cljs.core/reset!","cljs.core/assoc-in","G__20116","G__20118","G__20119","G__20120","G__20121","G__20122","reagent.ratom/cursor","src","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","reagent$ratom$IDisposable$dispose_BANG_$dyn","x__4428__auto__","m__4429__auto__","reagent.ratom/dispose!","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent$ratom$IRunnable$run$dyn","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__20150","map__20151","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","oldval","G__20163","G__20165","G__20166","G__20167","G__20168","G__20169","*ratom-context*-orig-val__20133","*ratom-context*-temp-val__20134","cljs.core/set","seq__20137","cljs.core/seq","chunk__20138","count__20139","i__20140","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference","cljs.core/-add-watch","seq__20143","chunk__20144","count__20145","i__20146","cljs.core/-remove-watch","e20148","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__20155","chunk__20156","count__20157","i__20158","fexpr__20161","p__20175","map__20176","seq20173","G__20174","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]],"~:used-vars",["^K",["~$cljs.core/PROTOCOL_SENTINEL","~$reagent.ratom/check-derefs","~$reagent.ratom/generation","~$reagent.ratom/make-track!","~$reagent.ratom/run","~$reagent.ratom/remove-w","~$cljs.core/=","~$reagent.ratom/->RAtom","~$cljs.core/-write","~$cljs.core/-deref","~$cljs.core/pr-writer","~$cljs.core/hash","~$cljs.core/-reset!","~$cljs.core/count","~$cljs.core/deref","~$reagent.ratom/arr-len","~$cljs.core/apply","~$goog/getUid","~$reagent.ratom/flush!","~$reagent.ratom/notify-deref-watcher!","~$cljs.core/dissoc","~$reagent.ratom/check-watches","~$reagent.ratom/with-let-destroy","~$cljs.core/chunk-rest","~$cljs.core/atom","~$reagent.ratom/debug","~$reagent.ratom/rea-enqueue","~$reagent.ratom/RCursor","~$reagent.ratom/make-wrapper","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$reagent.ratom/IReactiveAtom","~$reagent.ratom/track","~$reagent.impl.util/make-partial-fn","~$cljs.core/reset!","~$reagent.ratom/cached-reaction","~$reagent.ratom/Wrapper","~$cljs.core/-add-watch","~$reagent.ratom/track!","~$reagent.ratom/dispose!","~$reagent.ratom/->Reaction","~$reagent.ratom/running","~$reagent.ratom/make-reaction","~$reagent.ratom/IRunnable","~$reagent.ratom/notify-w","~$reagent.ratom/rea-queue","~$reagent.ratom/add-on-dispose!","~$reagent.impl.batching/ratom-flush","~$cljs.core/swap!","~$reagent.ratom/arr-eq","~$reagent.ratom/handle-reaction-change","~$goog.object/set","~$reagent.ratom/temp-reaction","~$cljs.core/-remove-watch","~$reagent.ratom/run-in-reaction","~$reagent.ratom/->Track","~$reagent.impl.batching/schedule","~$cljs.core/next","~$reagent.ratom/*ratom-context*","~$reagent.ratom/IDisposable","~$reagent.ratom/->Wrapper","~$reagent.ratom/Track","~$cljs.core/IDeref","~$reagent.ratom/cursor","~$cljs.core/not","~$reagent.ratom/make-track","~$reagent.ratom/add-w","~$cljs.core/assoc","~$cljs.core/assoc-in","~$reagent.ratom/-running","~$reagent.ratom/Reaction","~$reagent.ratom/RAtom","~$reagent.ratom/reactive?","~$reagent.ratom/atom","~$reagent.ratom/deref-capture","~$cljs.core/+","~$cljs.core/array","~$reagent.ratom/in-context","~$reagent.ratom/with-let-values","~$cljs.core/inc","~$reagent.ratom/->RCursor","~$cljs.core/chunked-seq?","~$reagent.ratom/pr-atom"]]],"~:cache-keys",["~#cmap",[["^1K","reagent/impl/batching.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^18","^17","^H","^14"]]],["^1K","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","~$goog.dom.HtmlElement"]]],["^1K","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","~$goog.array","~$goog.asserts"]]],["^1K","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Y","~$goog.labs.userAgent.util","^16","~$goog.string.internal"]]],["^1K","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Z","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^40"]]],["^1K","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Z"]]],["^1K","reagent/impl/util.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^17","~$clojure.string"]]],["^1K","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","reagent/ratom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^17","^14","^H","^19","^1:","^16"]]],["^1K","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Z"]]],"~:SHADOW-TIMESTAMP",[1598571556000,1598571556000,1598571537000],["^1K","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Z","~$goog.reflect"]]],["^1K","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Z","~$goog.html.trustedtypes","^43","^44","^45","^46"]]],["^1K","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Y","^3Z","~$goog.html.SafeUrl","^45","^46","^40"]]],["^1K","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Z","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4;","^42","~$goog.html.uncheckedconversions","^45","^40"]]],["^1K","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1K","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Y","^3Z","~$goog.dom.TagName","~$goog.dom.tags","^4?","^4@","~$goog.html.SafeStyleSheet","^4;","^42","^4:","^43","^44","~$goog.labs.userAgent.browser","^16","^45","^46","^40"]]],["^1K","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^16"]]],["^1K","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1K","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Y","^3Z","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1K","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",[]]],["^1K","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Y","^16"]]],["^1K","clojure/string.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^17","^4J","~$goog.string.StringBuffer"]]],["^1K","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","~$goog.dom.safe","^4A","^45","^40"]]],["^1K","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^40"]]],["^1K","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Y","^3Z","^4=","~$goog.math"]]],["^1K","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Z","^4>","^4?","^4@","^4F","^4;","^42","^45","^40"]]],["^1K","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18"]]],["^1K","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","~$goog.math.Long","~$goog.math.Integer","^4J","^16","^3Y","~$goog.Uri","^4P"]]],["^1K","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Z","^4:","^45","^46"]]],["^1K","reagent/debug.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^17"]]],["^1K","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Y","^3Z","^4@","^16","^45","^46","^40"]]],["^1K","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^49"]]],["^1K","clojure/set.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^17"]]],["^1K","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Y","^3Z","^4J"]]],["^1K","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3T",["^ ","^3U",null,"^3V",["^K",[]],"^3W",["^18","^3Z","^46"]]]]],"~:clj-info",["^ ","jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596724258000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1598571553000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1598571537000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1596724260000,"jar:file:/home/giovani/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1596724288000,"jar:file:/home/giovani/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1598571537000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"~:shadow/protocol-prefixes",["^K",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^F",["^ ","^G","^H","^I","^H"],"^J",["^K",["^L"]],"^M",["^ ","^N",["^ ","^O",["^P",[["^Q","~$&","^R"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","^S","^T","^U","^V","^W",true],"^X",["^ ","^O",["^P",[["~$&","^R"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^S","^Y","^U","^V","^W",true],"^Z",["^ ","^O",["^P",[["~$&","^R"]]],"^[","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^S","^10","^U","^V","^W",true]],"~:shadow/js-access-properties",["^K",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^S","^V","^12",null,"^13",["^ ","^14","^14","^15","^16","^17","^17","^18","^18","^16","^16","^19","^19","^1:","^1:","^1;","^14","~$s","^1:","^1<","^19","^H","^H"],"^1=",["^K",["^1>","^1?"]],"^1@",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",105,"^8",8,"^9",105,"^:",15,"~:private",true,"^O",["^P",["~$quote",["^P",[["~$a","~$writer","~$opts","~$s"]]]]]],"^5L",true,"^S","^3Q","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^P",[["~$a","^5N","^5O","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^P",[null,null]],"^8",1,"~:variadic?",false,"^7",105,"~:ret-tag","~$any","^9",105,"~:max-fixed-arity",4,"~:fn-var",true,"^O",["^P",["^5M",["^P",[["~$a","^5N","^5O","~$s"]]]]]],"~$->RCursor",["^ ","^5K",null,"^5",["^ ","~:protocols",["^K",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","^2J","^3=","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",257,"^9",257,"^O",["^P",["^5M",["^P",[["~$ratom","~$path","^X","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^K",["^5Z","^5[","^60","^61","^63","^64","^3=","^65"]],"^[","Positional factory function for reagent.ratom/RCursor."],"^5Y",["^K",["^5Z","^5[","^60","^61","^62","^63","^64","^2J","^3=","^65"]],"^S","^3O","^6","reagent/ratom.cljs","^:",17,"^5P",["^P",[["^68","^69","^X","^6:","^6;"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^66","^67","^7",257,"^5T","^2F","^9",257,"^5V",5,"^5W",true,"^O",["^P",["^5M",["^P",[["^68","^69","^X","^6:","^6;"]]]]],"^6<",["^K",["^5Z","^5[","^60","^61","^63","^64","^3=","^65"]],"^[","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",63,"^8",8,"^9",63,"^:",29,"^5L",true,"^O",["^P",["^5M",["^P",[["~$derefed"]]]]],"^[","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^5L",true,"^S","^2>","^6","reagent/ratom.cljs","^:",29,"^5P",["^P",[["^6>"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",63,"^5T",["^K",[null,"^5U","~$clj-nil"]],"^9",63,"^5V",1,"^5W",true,"^O",["^P",["^5M",["^P",[["^6>"]]]]],"^[","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",115,"^8",8,"^9",115,"^:",19,"^5L",true,"^O",["^P",["^5M",["^P",[["~$r"]]]]]],"^5L",true,"^S","^2E","^6","reagent/ratom.cljs","^:",19,"^5P",["^P",[["~$r"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",115,"^5T","^5U","^9",115,"^5V",1,"^5W",true,"^O",["^P",["^5M",["^P",[["~$r"]]]]]],"~$in-context",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",36,"^8",8,"^9",36,"^:",18,"^5L",true,"^O",["^P",["^5M",["^P",[["^15","~$f"]]]]],"^[","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"^5L",true,"^S","^3L","^6","reagent/ratom.cljs","^:",18,"^5P",["^P",[["^15","~$f"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",36,"^9",36,"^5V",2,"^5W",true,"^O",["^P",["^5M",["^P",[["^15","~$f"]]]]],"^[","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"~$make-track",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",237,"^8",7,"^9",237,"^:",17,"^O",["^P",["^5M",["^P",[["~$f","~$args"]]]]]],"^S","^3@","^6","reagent/ratom.cljs","^:",17,"^5P",["^P",[["~$f","^6C"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",237,"^5T","^3<","^9",237,"^5V",2,"^5W",true,"^O",["^P",["^5M",["^P",[["~$f","^6C"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^5Y",["^K",["^5Z","^5[","^60","^61","^63","^64","^2J","~$cljs.core/IMeta","^3=","^65","~$cljs.core/IWithMeta"]],"^S","^3F","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",137,"~:record",false,"^9",137,"~:tag","~$function","^6<",["^K",["^5Z","^5[","^60","^61","^63","^64","^6F","^3=","^65","^6G"]]],"^L",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",182,"^8",7,"^9",182,"^:",11,"^O",["^P",["^5M",["^P",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^[","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^5S",true,"~:fixed-arity",1,"^5V",1,"^5P",[["~$x"]],"^O",["^P",[["~$x"],["~$x","~$&",["^ ","^6L",["^6M","^6N"]]]]],"^5R",["^P",[null,null]]]],"^S","^3H","^6","reagent/ratom.cljs","^:",11,"^6O",["^ ","^5S",true,"^6P",1,"^5V",1,"^5P",[["~$x"]],"^O",["^P",[["~$x"],["~$x","~$&",["^ ","^6L",["^6M","^6N"]]]]],"^5R",["^P",[null,null]]],"^5P",[["~$x"]],"^5Q",null,"^6P",1,"^5R",["^P",[null,null]],"^8",1,"^5S",true,"~:methods",[["^ ","^6P",1,"^5S",false,"^6J","^3F"],["^ ","^6P",1,"^5S",true,"^6J","^3F"]],"^7",182,"^9",182,"^5V",1,"^5W",true,"^O",["^P",[["~$x"],["~$x","~$&",["^ ","^6L",["^6M","^6N"]]]]],"^[","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",89,"^8",8,"^9",89,"^:",16,"^5L",true,"^O",["^P",["^5M",["^P",[["~$this","~$old","~$new"]]]]]],"^5L",true,"^S","^2W","^6","reagent/ratom.cljs","^:",16,"^5P",["^P",[["^6S","^6T","^6U"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",89,"^5T","^6?","^9",89,"^5V",3,"^5W",true,"^O",["^P",["^5M",["^P",[["^6S","^6T","^6U"]]]]]],"~$->Reaction",["^ ","^5K",null,"^5",["^ ","^5Y",["^K",["^5Z","^5[","^60","^61","^62","^63","^64","^2J","^2V","^3:","^3=","^65"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^66","^67","^7",365,"^9",365,"^O",["^P",["^5M",["^P",[["~$f","^6:","~$dirty?","~$nocache?","~$watching","^6;","~$auto-run","~$caught"]]]]],"^6<",["^K",["^5Z","^5[","^60","^61","^63","^64","^3=","^65"]],"^[","Positional factory function for reagent.ratom/Reaction."],"^5Y",["^K",["^5Z","^5[","^60","^61","^62","^63","^64","^2J","^2V","^3:","^3=","^65"]],"^S","^2S","^6","reagent/ratom.cljs","^:",18,"^5P",["^P",[["~$f","^6:","^6W","^6X","^6Y","^6;","^6Z","^6["]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^66","^67","^7",365,"^5T","^3E","^9",365,"^5V",8,"^5W",true,"^O",["^P",["^5M",["^P",[["~$f","^6:","^6W","^6X","^6Y","^6;","^6Z","^6["]]]]],"^6<",["^K",["^5Z","^5[","^60","^61","^63","^64","^3=","^65"]],"^[","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",601,"^8",7,"^9",601,"^:",19,"^O",["^P",["^5M",["^P",[["~$value","~$callback-fn","^6C"]]]]]],"^S","^2G","^6","reagent/ratom.cljs","^:",19,"^5P",["^P",[["^71","^72","^6C"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",601,"^5T","^2O","^9",601,"^5V",3,"^5W",true,"^O",["^P",["^5M",["^P",[["^71","^72","^6C"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","reagent/ratom.cljs","^:",27,"^8",14,"^7",135,"~:protocol-info",["^ ","^6Q",["^ "]],"^9",135,"~:sigs",["^ "],"~:jsdoc",["^P",["@interface"]]],"^74",true,"^S","^2J","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",135,"^75",["^ ","^6Q",["^ "]],"~:info",null,"^9",135,"^6J","^5U","^76",["^ "],"~:impls",["^K",["^2F","^3<","^3E","^3F"]],"^77",["^P",["@interface"]]],"~$track",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",247,"^8",7,"^9",247,"^:",12,"^O",["^P",["^5M",["^P",[["~$f","~$&","^6C"]]]]],"^6O",["^ ","^5S",true,"^6P",1,"^5V",1,"^5P",[["^P",["~$f","^6C"]]],"^O",["^P",[["~$f","~$&","^6C"]]],"^5R",["^P",[null]]]],"^S","^2K","^6","reagent/ratom.cljs","^:",12,"^6O",["^ ","^5S",true,"^6P",1,"^5V",1,"^5P",[["^P",["~$f","^6C"]]],"^O",["^P",[["~$f","~$&","^6C"]]],"^5R",["^P",[null]]],"^5P",[["^P",["~$f","^6C"]]],"^5Q",null,"^6P",1,"^5R",["^P",[null]],"^8",1,"^5S",true,"^6Q",[["^ ","^6P",1,"^5S",true,"^6J","^3<"]],"^7",247,"^5T","^5U","^9",247,"^5V",1,"^5W",true,"^O",["^P",[["~$f","~$&","^6C"]]]],"~$dispose!",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",347,"^8",4,"^9",347,"^:",12,"~:protocol","^3:","^[",null,"^O",["^P",["^5M",["^P",[["^6S"]]]]]],"^7<","^3:","^S","^2R","^6","reagent/ratom.cljs","^:",12,"^5P",["^P",[["^6S"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",346,"^5T","^5U","^9",347,"^5V",1,"^5W",true,"^O",["^P",["^5M",["^P",[["^6S"]]]]],"^[",null],"~$arr-eq",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",27,"^8",17,"^9",27,"^:",23,"^6J","~$boolean","^5L",true,"^O",["^P",["^5M",["^P",[["~$x","~$y"]]]]]],"^5L",true,"^S","^30","^6","reagent/ratom.cljs","^:",23,"^5P",["^P",[["~$x","~$y"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",27,"^5T","^7>","^9",27,"^5V",2,"^6J","^7>","^5W",true,"^O",["^P",["^5M",["^P",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",353,"^8",8,"^9",353,"^:",30,"^5L",true,"^O",["^P",["^5M",["^P",[["^6S","~$sender","^6T","^6U"]]]]]],"^5L",true,"^S","^31","^6","reagent/ratom.cljs","^:",30,"^5P",["^P",[["^6S","^7@","^6T","^6U"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",353,"^5T","^5U","^9",353,"^5V",4,"^5W",true,"^O",["^P",["^5M",["^P",[["^6S","^7@","^6T","^6U"]]]]]],"~$run",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",351,"^8",4,"^9",351,"^:",7,"^7<","^2V","^[",null,"^O",["^P",["^5M",["^P",[["^6S"]]]]]],"^7<","^2V","^S","^1[","^6","reagent/ratom.cljs","^:",7,"^5P",["^P",[["^6S"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",350,"^5T","^5U","^9",351,"^5V",1,"^5W",true,"^O",["^P",["^5M",["^P",[["^6S"]]]]],"^[",null],"~$add-on-dispose!",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",348,"^8",4,"^9",348,"^:",19,"^7<","^3:","^[",null,"^O",["^P",["^5M",["^P",[["^6S","~$f"]]]]]],"^7<","^3:","^S","^2Y","^6","reagent/ratom.cljs","^:",19,"^5P",["^P",[["^6S","~$f"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",346,"^5T","^5U","^9",348,"^5V",2,"^5W",true,"^O",["^P",["^5M",["^P",[["^6S","~$f"]]]]],"^[",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",524,"^8",16,"^9",524,"^:",29,"^5L",true],"^5L",true,"^S","^33","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",524,"^9",524,"^6J","^3E"],"~$make-track!",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",240,"^8",7,"^9",240,"^:",18,"^O",["^P",["^5M",["^P",[["~$f","^6C"]]]]]],"^S","^1Z","^6","reagent/ratom.cljs","^:",18,"^5P",["^P",[["~$f","^6C"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",240,"^5T","^5U","^9",240,"^5V",2,"^5W",true,"^O",["^P",["^5M",["^P",[["~$f","^6C"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",30,"^5L",true],"^5L",true,"^S","^1Y","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",12,"^9",12,"^6J","~$number"],"~$run-in-reaction",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",527,"^8",7,"^9",527,"^:",22,"^O",["^P",["^5M",["^P",[["~$f","^15","~$key","^7A","^5O"]]]]],"^[","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^S","^35","^6","reagent/ratom.cljs","^:",22,"^5P",["^P",[["~$f","^15","^7H","^7A","^5O"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",527,"^5T","^5U","^9",527,"^5V",5,"^5W",true,"^O",["^P",["^5M",["^P",[["~$f","^15","^7H","^7A","^5O"]]]]],"^[","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^74",true,"^6","reagent/ratom.cljs","^:",25,"^8",14,"^7",346,"^75",["^ ","^6Q",["^ ","^7;",[["^6S"]],"^7B",[["^6S","~$f"]]]],"^9",346,"^76",["^ ","~:dispose!",["^ ","^S","^7;","^O",["^P",[["^6S"]]],"^[",null],"~:add-on-dispose!",["^ ","^S","^7B","^O",["^P",[["^6S","~$f"]]],"^[",null]],"^77",["^P",["@interface"]]],"^74",true,"^S","^3:","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",346,"^75",["^ ","^6Q",["^ ","^7;",[["^6S"]],"^7B",[["^6S","~$f"]]]],"^78",null,"^9",346,"^6J","^5U","^76",["^ ","^7J",["^ ","^S","^7;","^O",["^P",[["^6S"]]],"^[",null],"^7K",["^ ","^S","^7B","^O",["^P",[["^6S","~$f"]]],"^[",null]],"^79",["^K",["^3E"]],"^77",["^P",["@interface"]]],"~$check-watches",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",74,"^8",8,"^9",74,"^:",21,"^5L",true,"^O",["^P",["^5M",["^P",[["^6T","^6U"]]]]]],"^5L",true,"^S","^2@","^6","reagent/ratom.cljs","^:",21,"^5P",["^P",[["^6T","^6U"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",74,"^9",74,"^5V",2,"^5W",true,"^O",["^P",["^5M",["^P",[["^6T","^6U"]]]]]],"~$with-let-destroy",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",333,"^8",7,"^9",333,"^:",23,"^O",["^P",["^5M",["^P",[["~$v"]]]]]],"^S","^2A","^6","reagent/ratom.cljs","^:",23,"^5P",["^P",[["~$v"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",333,"^5T",["^K",["^5U","^6?"]],"^9",333,"^5V",1,"^5W",true,"^O",["^P",["^5M",["^P",[["~$v"]]]]]],"~$make-reaction",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",515,"^8",7,"^9",515,"^:",20,"^O",["^P",["^5M",["^P",[["~$f","~$&",["^ ","^6L",["^6Z","~$on-set","~$on-dispose"]]]]]]],"^6O",["^ ","^5S",true,"^6P",1,"^5V",1,"^5P",[["^P",["~$f",["^ ","^6L",["^6Z","^7O","^7P"]]]]],"^O",["^P",[["~$f","~$&",["^ ","^6L",["^6Z","^7O","^7P"]]]]],"^5R",["^P",[null]]]],"^S","^2U","^6","reagent/ratom.cljs","^:",20,"^6O",["^ ","^5S",true,"^6P",1,"^5V",1,"^5P",[["^P",["~$f",["^ ","^6L",["^6Z","^7O","^7P"]]]]],"^O",["^P",[["~$f","~$&",["^ ","^6L",["^6Z","^7O","^7P"]]]]],"^5R",["^P",[null]]],"^5P",[["^P",["~$f",["^ ","^6L",["^6Z","^7O","^7P"]]]]],"^5Q",null,"^6P",1,"^5R",["^P",[null]],"^8",1,"^5S",true,"^6Q",[["^ ","^6P",1,"^5S",true,"^6J","^3E"]],"^7",515,"^5T","^5U","^9",515,"^5V",1,"^5W",true,"^O",["^P",[["~$f","~$&",["^ ","^6L",["^6Z","^7O","^7P"]]]]]],"~$add-w",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",79,"^8",8,"^9",79,"^:",13,"^5L",true,"^O",["^P",["^5M",["^P",[["^6S","^7H","~$f"]]]]]],"^5L",true,"^S","^3A","^6","reagent/ratom.cljs","^:",13,"^5P",["^P",[["^6S","^7H","~$f"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",79,"^9",79,"^5V",3,"^5W",true,"^O",["^P",["^5M",["^P",[["^6S","^7H","~$f"]]]]]],"~$Reaction",["^ ","^6E",8,"^5Y",["^K",["^5Z","^5[","^60","^61","^62","^63","^64","^2J","^2V","^3:","^3=","^65"]],"^S","^3E","^6","reagent/ratom.cljs","^:",18,"^6H",true,"^8",10,"^7",365,"^6I",false,"^9",365,"^6J","^6K","^6<",["^K",["^5Z","^5[","^60","^61","^63","^64","^3=","^65"]]],"~$flush!",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",121,"^8",7,"^9",121,"^:",13,"^O",["^P",["^5M",["^P",[[]]]]]],"^S","^2=","^6","reagent/ratom.cljs","^:",13,"^5P",["^P",[[]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",121,"^5T","^6?","^9",121,"^5V",0,"^5W",true,"^O",["^P",["^5M",["^P",[[]]]]]],"~$RCursor",["^ ","^6E",5,"^5Y",["^K",["^5Z","^5[","^60","^61","^62","^63","^64","^2J","^3=","^65"]],"^S","^2F","^6","reagent/ratom.cljs","^:",17,"^6H",true,"^8",10,"^7",257,"^6I",false,"^9",257,"^6J","^6K","^6<",["^K",["^5Z","^5[","^60","^61","^63","^64","^3=","^65"]]],"~$cached-reaction",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",192,"^8",8,"^9",192,"^:",23,"^5L",true,"^O",["^P",["^5M",["^P",[["~$f","~$o","~$k","^15","~$destroy"]]]]]],"^5L",true,"^S","^2N","^6","reagent/ratom.cljs","^:",23,"^5P",["^P",[["~$f","~$o","~$k","^15","^7V"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",192,"^5T","^5U","^9",192,"^5V",5,"^5W",true,"^O",["^P",["^5M",["^P",[["~$f","~$o","~$k","^15","^7V"]]]]]],"~$Track",["^ ","^6E",3,"^5Y",["^K",["^60","^61","^2J","^3=","^65"]],"^S","^3<","^6","reagent/ratom.cljs","^:",15,"^6H",true,"^8",10,"^7",216,"^6I",false,"^9",216,"^6J","^6K","^6<",["^K",["^60","^61","^3=","^65"]]],"~$debug",["^ ","^S","^2D","^6","reagent/ratom.cljs","^7",11,"^8",1,"^9",11,"^:",24,"^6J","^7>","^5",["^ ","^6","reagent/ratom.cljs","^7",11,"^8",19,"^9",11,"^:",24,"^6J","^7>"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",20,"^9",13,"^:",28,"^5L",true],"^5L",true,"^S","^3D","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",13,"^9",13,"^6J","~$cljs.core/Atom"],"~$cursor",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",319,"^8",7,"^9",319,"^:",13,"^O",["^P",["^5M",["^P",[["~$src","^69"]]]]]],"^S","^3>","^6","reagent/ratom.cljs","^:",13,"^5P",["^P",[["^80","^69"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",319,"^5T","^2F","^9",319,"^5V",2,"^5W",true,"^O",["^P",["^5M",["^P",[["^80","^69"]]]]]],"~$Wrapper",["^ ","^6E",4,"^5Y",["^K",["^5Z","^5[","^60","^63","^64","^3=","^65"]],"^S","^2O","^6","reagent/ratom.cljs","^:",17,"^6H",true,"^8",10,"^7",554,"^6I",false,"^9",554,"^6J","^6K","^6<",["^K",["^5Z","^5[","^60","^63","^64","^3=","^65"]]],"~$running",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",21,"^8",7,"^9",21,"^:",14,"^O",["^P",["^5M",["^P",[[]]]]]],"^S","^2T","^6","reagent/ratom.cljs","^:",14,"^5P",["^P",[[]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",21,"^5T","^7F","^9",21,"^5V",0,"^5W",true,"^O",["^P",["^5M",["^P",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^74",true,"^6","reagent/ratom.cljs","^:",23,"^8",14,"^7",350,"^75",["^ ","^6Q",["^ ","^7A",[["^6S"]]]],"^9",350,"^76",["^ ","~:run",["^ ","^S","^7A","^O",["^P",[["^6S"]]],"^[",null]],"^77",["^P",["@interface"]]],"^74",true,"^S","^2V","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",350,"^75",["^ ","^6Q",["^ ","^7A",[["^6S"]]]],"^78",null,"^9",350,"^6J","^5U","^76",["^ ","^84",["^ ","^S","^7A","^O",["^P",[["^6S"]]],"^[",null]],"^79",["^K",["^3E"]],"^77",["^P",["@interface"]]],"~$reactive?",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",16,"^9",15,"^:",25,"^6J","^7>","^O",["^P",["^5M",["^P",[[]]]]]],"^S","^3G","^6","reagent/ratom.cljs","^:",25,"^5P",["^P",[[]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",15,"^5T","^7>","^9",15,"^5V",0,"^6J","^7>","^5W",true,"^O",["^P",["^5M",["^P",[[]]]]]],"~$deref-capture",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",44,"^8",8,"^9",44,"^:",21,"^5L",true,"^O",["^P",["^5M",["^P",[["~$f","~$r"]]]]],"^[","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"^5L",true,"^S","^3I","^6","reagent/ratom.cljs","^:",21,"^5P",["^P",[["~$f","~$r"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",44,"^5T","^5U","^9",44,"^5V",2,"^5W",true,"^O",["^P",["^5M",["^P",[["~$f","~$r"]]]]],"^[","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",113,"^8",20,"^9",113,"^:",29,"^5L",true],"^5L",true,"^S","^2X","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",113,"^9",113,"^6J","^6?"],"~$with-let-values",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",337,"^8",7,"^9",337,"^:",22,"^O",["^P",["^5M",["^P",[["^7H"]]]]]],"^S","^3M","^6","reagent/ratom.cljs","^:",22,"^5P",["^P",[["^7H"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",337,"^5T",["^K",["^5U","~$array"]],"^9",337,"^5V",1,"^5W",true,"^O",["^P",["^5M",["^P",[["^7H"]]]]]],"~$track!",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",251,"^8",7,"^9",251,"^:",13,"^O",["^P",["^5M",["^P",[["~$f","~$&","^6C"]]]]],"^6O",["^ ","^5S",true,"^6P",1,"^5V",1,"^5P",[["^P",["~$f","^6C"]]],"^O",["^P",[["~$f","~$&","^6C"]]],"^5R",["^P",[null]]]],"^S","^2Q","^6","reagent/ratom.cljs","^:",13,"^6O",["^ ","^5S",true,"^6P",1,"^5V",1,"^5P",[["^P",["~$f","^6C"]]],"^O",["^P",[["~$f","~$&","^6C"]]],"^5R",["^P",[null]]],"^5P",[["^P",["~$f","^6C"]]],"^5Q",null,"^6P",1,"^5R",["^P",[null]],"^8",1,"^5S",true,"^6Q",[["^ ","^6P",1,"^5S",true,"^6J","^5U"]],"^7",251,"^5T","^5U","^9",251,"^5V",1,"^5W",true,"^O",["^P",[["~$f","~$&","^6C"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",10,"^8",20,"^9",10,"^:",35,"~:dynamic",true,"~:declared",true],"^S","^39","^6","reagent/ratom.cljs","^:",35,"^8",1,"^8<",true,"^7",10,"^8=",true,"^9",10,"^6J","^5U"],"~$check-derefs",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",546,"^8",7,"^9",546,"^:",19,"^O",["^P",["^5M",["^P",[["~$f"]]]]]],"^S","^1X","^6","reagent/ratom.cljs","^:",19,"^5P",["^P",[["~$f"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",546,"^5T","~$cljs.core/IVector","^9",546,"^5V",1,"^5W",true,"^O",["^P",["^5M",["^P",[["~$f"]]]]]],"~$remove-w",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",84,"^8",8,"^9",84,"^:",16,"^5L",true,"^O",["^P",["^5M",["^P",[["^6S","^7H"]]]]]],"^5L",true,"^S","^20","^6","reagent/ratom.cljs","^:",16,"^5P",["^P",[["^6S","^7H"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",84,"^9",84,"^5V",2,"^5W",true,"^O",["^P",["^5M",["^P",[["^6S","^7H"]]]]]],"~$->Wrapper",["^ ","^5K",null,"^5",["^ ","^5Y",["^K",["^5Z","^5[","^60","^63","^64","^3=","^65"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^66","^67","^7",554,"^9",554,"^O",["^P",["^5M",["^P",[["^6:","~$callback","~$changed","^6;"]]]]],"^6<",["^K",["^5Z","^5[","^60","^63","^64","^3=","^65"]],"^[","Positional factory function for reagent.ratom/Wrapper."],"^5Y",["^K",["^5Z","^5[","^60","^63","^64","^3=","^65"]],"^S","^3;","^6","reagent/ratom.cljs","^:",17,"^5P",["^P",[["^6:","^8B","^8C","^6;"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^66","^67","^7",554,"^5T","^2O","^9",554,"^5V",4,"^5W",true,"^O",["^P",["^5M",["^P",[["^6:","^8B","^8C","^6;"]]]]],"^6<",["^K",["^5Z","^5[","^60","^63","^64","^3=","^65"]],"^[","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^5K",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",24,"^8",16,"^9",24,"^:",23,"^6J","^7F","^5L",true,"^O",["^P",["^5M",["^P",[["~$x"]]]]]],"^5L",true,"^S","^2:","^6","reagent/ratom.cljs","^:",23,"^5P",["^P",[["~$x"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^7",24,"^5T","^7F","^9",24,"^5V",1,"^6J","^7F","^5W",true,"^O",["^P",["^5M",["^P",[["~$x"]]]]]],"~$->RAtom",["^ ","^5K",null,"^5",["^ ","^5Y",["^K",["^5Z","^5[","^60","^61","^63","^64","^2J","^6F","^3=","^65","^6G"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^66","^67","^7",137,"^9",137,"^O",["^P",["^5M",["^P",[["^6:","^6M","^6N","^6;"]]]]],"^6<",["^K",["^5Z","^5[","^60","^61","^63","^64","^6F","^3=","^65","^6G"]],"^[","Positional factory function for reagent.ratom/RAtom."],"^5Y",["^K",["^5Z","^5[","^60","^61","^63","^64","^2J","^6F","^3=","^65","^6G"]],"^S","^22","^6","reagent/ratom.cljs","^:",15,"^5P",["^P",[["^6:","^6M","^6N","^6;"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^66","^67","^7",137,"^5T","^3F","^9",137,"^5V",4,"^5W",true,"^O",["^P",["^5M",["^P",[["^6:","^6M","^6N","^6;"]]]]],"^6<",["^K",["^5Z","^5[","^60","^61","^63","^64","^6F","^3=","^65","^6G"]],"^[","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^5K",null,"^5",["^ ","^5Y",["^K",["^60","^61","^2J","^3=","^65"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^66","^67","^7",216,"^9",216,"^O",["^P",["^5M",["^P",[["~$f","^6C","^X"]]]]],"^6<",["^K",["^60","^61","^3=","^65"]],"^[","Positional factory function for reagent.ratom/Track."],"^5Y",["^K",["^60","^61","^2J","^3=","^65"]],"^S","^36","^6","reagent/ratom.cljs","^:",15,"^5P",["^P",[["~$f","^6C","^X"]]],"^5Q",null,"^5R",["^P",[null,null]],"^8",1,"^5S",false,"^66","^67","^7",216,"^5T","^3<","^9",216,"^5V",3,"^5W",true,"^O",["^P",["^5M",["^P",[["~$f","^6C","^X"]]]]],"^6<",["^K",["^60","^61","^3=","^65"]],"^[","Positional factory function for reagent.ratom/Track."]],"^1?",["^ ","^V","^V","^H","^H","^17","^17"],"~:cljs.analyzer/constants",["^ ","^1=",["^K",["~:on-set","^6[","^6Y","^7>","^X","^8B","^5","~:else","^69","^6C","~:validator","^6;","^6M","^6N","^6W","~:no-cache","^68","^6:","~:auto-run","~:on-dispose","^6J","~:mutable","^8C","^6Z","^6X","~$f"]],"~:order",["^6:","^8N","^6M","^6N","^6;","^5","^8J","^8I","^8M","~$f","^6C","^X","^8L","^68","^69","^8H","^8K","^6W","^6J","^7>","^6X","^6Y","^6Z","^6[","^8B","^8C"]],"^1G",["^ ","^1?",["^K",[]],"^1>",["^K",[]]],"^1H",["^ "],"^1I",["^18","^17","^14","^H","^19","^1:","^16"]],"^U","^V","~:ns-specs",["^ "],"~:ns-spec-vars",["^K",[]],"~:compiler-options",["^3S",[["^8R","~:static-fns"],true,["^8R","~:shadow-tweaks"],null,["^8R","~:source-map-inline"],null,["^8R","~:elide-asserts"],true,["^8R","~:optimize-constants"],null,["^8R","^1N"],null,["^8R","~:external-config"],null,["^8R","~:tooling-config"],null,["^8R","~:emit-constants"],null,["^8R","~:load-tests"],false,["^8R","~:form-size-threshold"],null,["^8R","~:infer-externs"],true,["^8R","^1P"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^8R","~:fn-invoke-direct"],null,["^8R","~:source-map"],null]]]