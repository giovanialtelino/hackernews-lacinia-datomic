{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$elixir.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/elixir.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$elixir\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS =\n    'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote require import with|0';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n\n  var SIGIL_DELIMITERS = '[/|([{<\"\\']'\n  var LOWERCASE_SIGIL = {\n    className: 'string',\n    begin: '~[a-z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      {\n        endsParent:true,\n        contains: [{\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            { begin: /\"/, end: /\"/ },\n            { begin: /'/, end: /'/ },\n            { begin: /\\//, end: /\\// },\n            { begin: /\\|/, end: /\\|/ },\n            { begin: /\\(/, end: /\\)/ },\n            { begin: /\\[/, end: /\\]/ },\n            { begin: /\\{/, end: /\\}/ },\n            { begin: /</, end: />/ }\n          ]\n        }]\n      },\n    ],\n  };\n\n  var UPCASE_SIGIL = {\n    className: 'string',\n    begin: '~[A-Z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      { begin: /\"/, end: /\"/ },\n      { begin: /'/, end: /'/ },\n      { begin: /\\//, end: /\\// },\n      { begin: /\\|/, end: /\\|/ },\n      { begin: /\\(/, end: /\\)/ },\n      { begin: /\\[/, end: /\\]/ },\n      { begin: /\\{/, end: /\\}/ },\n      { begin: /\\</, end: /\\>/ }\n    ]\n  };\n\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {\n        begin: /\"\"\"/, end: /\"\"\"/,\n      },\n      {\n        begin: /'''/, end: /'''/,\n      },\n      {\n        begin: /~S\"\"\"/, end: /\"\"\"/,\n        contains: []\n      },\n      {\n        begin: /~S\"/, end: /\"/,\n        contains: []\n      },\n      {\n        begin: /~S'''/, end: /'''/,\n        contains: []\n      },\n      {\n        begin: /~S'/, end: /'/,\n        contains: []\n      },\n      {\n        begin: /'/, end: /'/\n      },\n      {\n        begin: /\"/, end: /\"/\n      },\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord', end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    UPCASE_SIGIL,\n    LOWERCASE_SIGIL,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      begin: '::'\n    },\n    {\n      className: 'symbol',\n      begin: ':(?![\\\\s:])',\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':(?!:)',\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0o[0-7_]+)|(\\\\b0b[01_]+)|(\\\\b0x[0-9a-fA-F_]+)|(-?\\\\b[1-9][0-9_]*(.[0-9_]+([eE][-+]?[0-9]+)?)?)',\n      relevance: 0\n    },\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            {\n              begin: '/', end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[', end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","SUBST","className","begin","end","lexemes","ELIXIR_IDENT_RE","keywords","ELIXIR_KEYWORDS","LOWERCASE_SIGIL","contains","endsParent","BACKSLASH_ESCAPE","variants","STRING","FUNCTION","beginKeywords","inherit","TITLE_MODE","CLASS","ELIXIR_DEFAULT_CONTAINS","UPCASE_SIGIL","HASH_COMMENT_MODE","ELIXIR_METHOD_RE","relevance","RE_STARTERS_RE","illegal"]
}
