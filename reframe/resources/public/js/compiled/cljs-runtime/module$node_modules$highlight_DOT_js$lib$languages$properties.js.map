{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$properties.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC1HD,MAAAC,QAAA,CAAiBC,QAAQ,CAACC,IAAD,CAAO,CAU9B,IAAIC,gBAAkB,CAEdC,IANIC,0CAIU,CAGdC,UAAW,CAHG,CAIdC,OAAQ,CAENC,UAAW,QAFL,CAGNJ,IAAK,GAHC,CAINE,UAAW,CAJL,CAKNG,SAAU,CACR,CAAEC,MAAO,SAAT,CADQ,CALJ,CAJM,CAetB,OAAO,CACLC,iBAAkB,CAAA,CADb,CAELC,QAAS,IAFJ,CAGLH,SAAU,CACRP,IAAAW,QAAA,CAAa,WAAb,CAA0B,GAA1B,CADQ,CAIR,CACEH,MAAO,4EADT,CAEEI,YAAa,CAAA,CAFf,CAGEL,SAAU,CACR,CACED,UAAW,MADb;AAEEE,MA/BSK,oCA6BX,CAGEC,WAAY,CAAA,CAHd,CAIEV,UAAW,CAJb,CADQ,CAHZ,CAWEC,OAAQJ,eAXV,CAJQ,CAkBR,CACEO,MAAO,yEADT,CAEEI,YAAa,CAAA,CAFf,CAGER,UAAW,CAHb,CAIEG,SAAU,CACR,CACED,UAAW,MADb,CAEEE,MA7CMO,iCA2CR,CAGED,WAAY,CAAA,CAHd,CAIEV,UAAW,CAJb,CADQ,CAJZ,CAYEC,OAAQJ,eAZV,CAlBQ,CAiCR,CACEK,UAAW,MADb,CAEEF,UAAW,CAFb,CAGEI,MAAO,4CAHT,CAjCQ,CAHL,CAzBuB,CAD0F;",
"sources":["node_modules/highlight_DOT_js/lib/languages/properties.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$properties\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n\n  // whitespaces: space, tab, formfeed\n  var WS0 = '[ \\\\t\\\\f]*';\n  var WS1 = '[ \\\\t\\\\f]+';\n  // delimiter\n  var DELIM = '(' + WS0+'[:=]'+WS0+ '|' + WS1 + ')';\n  var KEY_ALPHANUM = '([^\\\\\\\\\\\\W:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n  var KEY_OTHER = '([^\\\\\\\\:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n\n  var DELIM_AND_VALUE = {\n          // skip DELIM\n          end: DELIM,\n          relevance: 0,\n          starts: {\n            // value: everything until end of line (again, taking into account backslashes)\n            className: 'string',\n            end: /$/,\n            relevance: 0,\n            contains: [\n              { begin: '\\\\\\\\\\\\n' }\n            ]\n          }\n        };\n\n  return {\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      hljs.COMMENT('^\\\\s*[!#]', '$'),\n      // key: everything until whitespace or = or : (taking into account backslashes)\n      // case of a \"normal\" key\n      {\n        begin: KEY_ALPHANUM + DELIM,\n        returnBegin: true,\n        contains: [\n          {\n            className: 'attr',\n            begin: KEY_ALPHANUM,\n            endsParent: true,\n            relevance: 0\n          }\n        ],\n        starts: DELIM_AND_VALUE\n      },\n      // case of key containing non-alphanumeric chars => relevance = 0\n      {\n        begin: KEY_OTHER + DELIM,\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {\n            className: 'meta',\n            begin: KEY_OTHER,\n            endsParent: true,\n            relevance: 0\n          }\n        ],\n        starts: DELIM_AND_VALUE\n      },\n      // case of an empty key\n      {\n        className: 'attr',\n        relevance: 0,\n        begin: KEY_OTHER + WS0 + '$'\n      }\n    ]\n  };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","DELIM_AND_VALUE","end","DELIM","relevance","starts","className","contains","begin","case_insensitive","illegal","COMMENT","returnBegin","KEY_ALPHANUM","endsParent","KEY_OTHER"]
}
