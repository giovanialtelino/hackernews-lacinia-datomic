{"version":3,"sources":["hackernews_reframe/graphql.cljs"],"mappings":";;AAEA,AAAA,AAAKA;AAYL,AAAA,AAAKC;AAYL,AAAA,AAAKC;AAiBL,AAAA,AAAKC;AAaL,AAAA,AAAKC;AAcL,AAAA,AAAKC;AAaL,AAAA,AAAKC;AAaL,AAAA,AAAKC;AAYL,AAAA,AAAKC;AAIL,AAAA,AAAKC;AAIL,AAAA,AAAKC;AAOL,AAAA,AAAKC;AAUL,AAAA,AAAKC;AAIL,AAAA,AAAKC;AAUL,AAAA,AAAKC","names":["hackernews-reframe.graphql/login","hackernews-reframe.graphql/sign","hackernews-reframe.graphql/get-comment","hackernews-reframe.graphql/feed","hackernews-reframe.graphql/get-user-posts","hackernews-reframe.graphql/get-link","hackernews-reframe.graphql/post","hackernews-reframe.graphql/refresh","hackernews-reframe.graphql/vote","hackernews-reframe.graphql/vote-comment","hackernews-reframe.graphql/user-description","hackernews-reframe.graphql/get-comments","hackernews-reframe.graphql/delete-comment","hackernews-reframe.graphql/get-user-comments","hackernews-reframe.graphql/post-comment"],"sourcesContent":["(ns hackernews-reframe.graphql)\n\n(def login\n  \"login($email:String!, $password:String!) {\n    login(email: $email, password: $password) {\n       token\n       error\n       refresh\n       user {\n        name\n        email\n        createdat\n        karma}}}\")\n\n(def sign\n  \"signup($email:String!, $name:String!, $password:String!) {\n    signup(email:$email, name:$name, password:$password) {\n     token\n     refresh\n     error\n     user {\n     name\n     email\n     createdat\n     karma}}}\")\n\n(def get-comment\n  \"comment($id:String!){\n  comment(id:$id){\n      depth\n      error\n      father\n      fatherName\n      id\n      link\n      linkText\n      linkId\n      createdAt\n      position\n      postedBy\n      text\n      votes}}\")\n\n(def feed\n  \"feed($first:Int, $orderBy:String, $skip:Int){\n  feed(first:$first, orderby:$orderBy, skip:$skip){\n    comments\n    createdAt\n    description\n    error\n    id\n    order\n    postedBy\n    url\n    votes}}\")\n\n(def get-user-posts\n  \"user_posts($user:String!){\n   user_posts(user:$user){\n    comments\n    createdAt\n    description\n    error\n    id\n    order\n    postedBy\n    url\n    votes\n    }}\")\n\n(def get-link\n  \"link($id:String!){\n   link(id:$id){\n    comments\n    createdAt\n    description\n    error\n    id\n    order\n    postedBy\n    url\n    votes}}\")\n\n(def post\n  \"post($description:String!, $url:String!){\n   post(description:$description, url:$url){\n    comments\n    createdAt\n    description\n    error\n    id\n    order\n    postedBy\n    url\n    votes}}\")\n\n(def refresh\n  \"refresh {\n  refresh  {\n   error\n   refresh\n   token\n   user {\n    name\n    email\n    createdat\n    karma}}}\")\n\n(def vote\n  \"vote($id:String!){\n  vote(id:$id)}\")\n\n(def vote-comment\n  \"comment_vote($id:String!){\n  comment_vote(id:$id)}\")\n\n(def user-description\n  \"userdescription($name:String!){\n   userdescription (name:$name) {\n    username\n    karma\n    createdat}}\")\n\n(def get-comments\n  \"comments($father:String!){\n   comments(father:$father){\n    id\n    father\n    createdAt\n    text\n    votes\n    postedBy}}\")\n\n(def delete-comment\n  \"comment_delete($id:String!){\n    comment_delete(id:$id)}\")\n\n(def get-user-comments\n  \"user_comments($user:String!){\n   user_comments(user:$user){\n    id\n    father\n    createdAt\n    text\n    votes\n    postedBy }}\")\n\n(def post-comment\n  \"comment_post($link:String!, $father:String!, $comment:String!, $type:String!){\n  comment_post(link:$link, father:$father, comment:$comment, type:$type){\n    depth\n    error\n    father\n    fatherName\n    id\n    link\n    linkText\n    linkId\n    createdAt\n    position\n    postedBy\n    text\n    votes  }}\")"]}