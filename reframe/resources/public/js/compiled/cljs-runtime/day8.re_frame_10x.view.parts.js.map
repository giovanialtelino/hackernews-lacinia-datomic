{"version":3,"sources":["day8/re_frame_10x/view/parts.cljs"],"mappings":";;;;;;;;;AASA,AAAA,AAAMA,AAAmBC;AAAzB,AACE,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAE,AAAAJ;AAAA,AAAAK,AA27EiD,AAAAyC,AAAA9C;AA37EjDM,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAAK,AAAA,AAAAC,AAAAP,AAAAK;AAAA,AAAAG,AAAAF,AAAA,AAAA,AAAOY;AAAP,AAAAV,AAAAF,AAAA,AAAA,AAASa;AAAT,AAAA,AAAA,AAAAV,AAAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACS,AAAA,AAAKV,AAASyB,AAGiB,AAACO,AAAQP;;AAJjD,AAAA,AAAAb,AAAA;;;;AAAA;;;;;AAAA,AAAAK,AAAA,AAAAC,AAAAR,AAAA,AAAAS,AAAA,AAAAC,AAAAlB;;AAAA,AAAAe,AAAA,AAAAC,AAAAR,AAAA;;;AAAA,AAAAW,AAAA,AAAAC,AAAApB;AAAA,AAAAa,AAAAM,AAAA,AAAA,AAAOI;AAAP,AAAAV,AAAAM,AAAA,AAAA,AAASK;AAAT,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAJ,AAAA,AAAAK,AAAAtB,AACS,AAAA,AAAKF,AAASyB,AAGiB,AAACO,AAAQP;;;AAJjD;;;;AAAA,AAAA;;AAAA,AAAA,AAAAxB,AAAY,AAAC0B,AAAQC,AAAI,AAAA,AAAAC,AAACC,AAAKC,AAAqC/B;;AAMtE,AAAA,AAAMiC,AAAajC;AAAnB,AACE,AAAAC,AAAA,AAAAiC;AAAA,AAAA,AAAA/B,AAAA,AAAA;AAAA,AAAA,AAAA+B,AAAAA;;AAAA,AAAA,AAAA9B,AAAA,AAAAC,AAAA6B;AAAA,AAAA,AAAA9B;AAAA,AAAA,AAAA8B,AAAA9B;AAAA,AAAA,AAAA,AAAAE,AAAA4B;AAAA,AAAA3B,AAo7EiD,AAAAyC,AAAAd;AAp7EjD1B,AAAA,AAAAC,AAAAF;AAAA4B,AAAA,AAAAxB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAA4B,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA5B;AAAA,AAAA6B,AAAA,AAAAvB,AAAAP,AAAA6B;AAAA,AAAArB,AAAAsB,AAAA,AAAA,AAAOZ;AAAP,AAAAV,AAAAsB,AAAA,AAAA,AAASX;AAAT,AAAA,AAAA,AAAAV,AAAAmB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACS,AAAA,AAAKnC,AAASyB,AAIpB,AAACO,AAAQP;;AALZ,AAAA,AAAAW,AAAA;;;;AAAA;;;;;AAAA,AAAAnB,AAAA,AAAAC,AAAAiB,AAAA,AAAAG,AAAA,AAAAlB,AAAAc;;AAAA,AAAAjB,AAAA,AAAAC,AAAAiB,AAAA;;;AAAA,AAAAI,AAAA,AAAAjB,AAAAY;AAAA,AAAAnB,AAAAwB,AAAA,AAAA,AAAOd;AAAP,AAAAV,AAAAwB,AAAA,AAAA,AAASb;AAAT,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAe,AAAA,AAAAd,AAAAU,AACS,AAAA,AAAKlC,AAASyB,AAIpB,AAACO,AAAQP;;;AALZ;;;;AAAA,AAAA;;AAAA,AAAA,AAAAxB,AAAY,AAAC0B,AAAQC,AAAI,AAAA,AAAAC,AAACC,AAAKC,AAAqC/B;;AAOtE,AAAA,AAAMwC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACGC,AAEW,AAAC1C,AAAkB2C,AAEnB,AAACT,AAAYU,AAEb,AAAC5C,AAAkB6C,AAEnB,AAAC7C,AAAkB8C,AAClBC,AAAeC","names":["day8.re-frame-10x.view.parts/render-registered","kind","iter__4529__auto__","s__53352","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__53354","cljs.core/chunk-buffer","i__53353","vec__53355","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__53351","cljs.core/chunk-rest","vec__53358","cljs.core/first","cljs.core/cons","cljs.core/rest","k","v","cljs.core.sort_by","cljs.core/key","cljs.core/deref","cljs.core.get","re-frame.registrar/kind->id->handler","cljs.core.prn_str","day8.re-frame-10x.view.parts/render-subs","s__53370","b__53372","i__53371","vec__53377","iter__53369","vec__53387","day8.re-frame-10x.view.parts/render","day8.re-frame-10x.utils.re-com/v-box","re-frame.events/kind","re-frame.subs/kind","re-frame.fx/kind","re-frame.cofx/kind","day8.re-frame-10x.utils.re-com/gap-f","day8.re-frame-10x.common-styles/gs-19s","cljs.core/chunk-first"],"sourcesContent":["(ns day8.re-frame-10x.view.parts\n  (:require [day8.re-frame-10x.utils.re-com :as rc]\n            [re-frame.registrar]\n            [re-frame.events]\n            [re-frame.subs]\n            [re-frame.fx]\n            [re-frame.cofx]\n            [day8.re-frame-10x.common-styles :as common]))\n\n(defn render-registered [kind]\n  (for [[k v] (sort-by key (get @re-frame.registrar/kind->id->handler kind))]\n    ^{:key (str kind \"|\" k)}\n    [:pre {:style {:border       \"1px black solid\"\n                   :padding      \"10px\"\n                   :margin-right \"10px\"}} (prn-str k)]))\n\n(defn render-subs [kind]\n  (for [[k v] (sort-by key (get @re-frame.registrar/kind->id->handler kind))]\n    ^{:key (str kind \"|\" k)}\n    [:pre {:style {:border       \"1px black solid\"\n                   :padding      \"10px\"\n                   :margin-right \"10px\"}}\n     (prn-str k)]))\n\n(defn render []\n  [rc/v-box\n   :children [[:h1 \"Events\"]\n              (render-registered re-frame.events/kind)\n              [:h1 \"Subscriptions\"]\n              (render-subs re-frame.subs/kind)\n              [:h1 \"FX\"]\n              (render-registered re-frame.fx/kind)\n              [:h1 \"co-fx\"]\n              (render-registered re-frame.cofx/kind)\n              [rc/gap-f :size common/gs-19s]]])\n"]}