{"version":3,"sources":["re_graph/logging.cljc"],"mappings":"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","names":["re-graph.logging/logger","goog.log/getLogger","re-graph.logging/levels","js/goog.debug.Logger.Level.SEVERE","js/goog.debug.Logger.Level.WARNING","js/goog.debug.Logger.Level.INFO","js/goog.debug.Logger.Level.CONFIG","js/goog.debug.Logger.Level.FINE","js/goog.debug.Logger.Level.FINER","js/goog.debug.Logger.Level.FINEST","re-graph.logging/log-to-console!","js/goog.debug.Console","re-graph.logging/set-level!","level","cljs.core.get","re-graph.logging/fmt","msgs","cljs.core.apply","cljs.core/str","cljs.core.interpose","cljs.core.map","cljs.core/pr-str","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","re-graph.logging/info","seq61702","self__4724__auto__","cljs.core/seq","s","msg","goog.log/info","re-graph.logging/debug","seq61703","goog.log/fine","re-graph.logging/warn","seq61704","goog.log/warning","re-graph.logging/error","seq61719","goog.log/error"],"sourcesContent":[";; borrowed from https://gist.github.com/caskolkm/39d823f5bac7051d3062\n(ns re-graph.logging\n  (:refer-clojure :exclude [time])\n  (:require #?(:clj  [clojure.tools.logging :as log]\n               :cljs [goog.log :as glog]))\n  #?(:cljs (:import goog.debug.Console)))\n\n#?(:cljs\n   (def logger\n     (glog/getLogger \"app\")))\n\n#?(:cljs\n   (def levels {:severe goog.debug.Logger.Level.SEVERE\n                :warning goog.debug.Logger.Level.WARNING\n                :info goog.debug.Logger.Level.INFO\n                :config goog.debug.Logger.Level.CONFIG\n                :fine goog.debug.Logger.Level.FINE\n                :finer goog.debug.Logger.Level.FINER\n                :finest goog.debug.Logger.Level.FINEST}))\n\n#?(:cljs\n   (defn log-to-console! []\n     (.setCapturing (goog.debug.Console.) true)))\n\n#?(:cljs\n   (defn set-level! [level]\n     (.setLevel logger (get levels level (:info levels)))))\n\n(defn fmt [msgs]\n  (apply str (interpose \" \" (map pr-str msgs))))\n\n(defn info [& s]\n  (let [msg (fmt s)]\n    #?(:clj  (log/info msg)\n       :cljs (glog/info logger msg))))\n\n(defn debug [& s]\n  (let [msg (fmt s)]\n    #?(:clj  (log/debug msg)\n       :cljs (glog/fine logger msg))))\n\n(defn warn [& s]\n  (let [msg (fmt s)]\n    #?(:clj (log/warn msg)\n       :cljs (glog/warning logger msg))))\n\n(defn error [& s]\n  (let [msg (fmt s)]\n    #?(:clj (log/error msg)\n       :cljs (glog/error logger msg))))\n"]}