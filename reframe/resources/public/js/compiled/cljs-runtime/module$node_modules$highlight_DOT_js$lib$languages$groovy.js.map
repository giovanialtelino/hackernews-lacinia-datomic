{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$groovy.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACtHD,MAAAC,QAAA,CAAiBC,QAAQ,CAACC,IAAD,CAAO,CAC5B,MAAO,CACHC,SAAU,CACNC,QAAU,iBADJ,CAENC,QACA,sUAHM,CADP;AAaHC,SAAU,CACNJ,IAAAK,QAAA,CACI,SADJ,CAEI,MAFJ,CAGI,CACIC,UAAY,CADhB,CAEIF,SAAW,CACT,CAEIG,MAAO,MAFX,CAEmBD,UAAW,CAF9B,CADS,CAKT,CACIE,UAAY,QADhB,CAEID,MAAQ,YAFZ,CALS,CAFf,CAHJ,CADM,CAkBNP,IAAAS,oBAlBM,CAmBNT,IAAAU,qBAnBM,CAoBN,CACIF,UAAW,QADf,CAEID,MAAO,KAFX,CAEkBI,IAAK,KAFvB,CApBM,CAwBN,CACIH,UAAW,QADf,CAEID,MAAO,KAFX,CAEkBI,IAAK,KAFvB,CAxBM,CA4BN,CACIH,UAAW,QADf,CAEID,MAAO,MAFX,CAEmBI,IAAK,MAFxB,CAGIL,UAAW,EAHf,CA5BM,CAiCNN,IAAAY,iBAjCM,CAkCN,CACIJ,UAAW,QADf,CAEID,MAAO,gBAFX,CAGIH,SAAU,CACNJ,IAAAa,iBADM,CAHd,CAlCM,CAyCNb,IAAAc,kBAzCM,CA0CN,CACIN,UAAW,MADf,CAEID,MAAO,iBAFX,CAE8BI,IAAK,GAFnC,CAGII,QAAS,IAHb,CA1CM;AA+CNf,IAAAgB,mBA/CM,CAgDN,CACIR,UAAW,OADf,CAEIS,cAAe,4BAFnB,CAEiDN,IAAK,GAFtD,CAGII,QAAS,GAHb,CAIIX,SAAU,CACN,CAACa,cAAe,oBAAhB,CADM,CAENjB,IAAAkB,sBAFM,CAJd,CAhDM,CAyDNlB,IAAAmB,cAzDM,CA0DN,CACIX,UAAW,MADf,CACuBD,MAAO,YAD9B,CA1DM,CA6DN,CAEIC,UAAW,QAFf,CAEyBD,MAAO,2BAFhC,CA7DM,CAiEN,CAGIA,MAAO,IAHX,CAGiBI,IAAK,GAHtB,CAjEM,CAsEN,CAEIH,UAAW,QAFf,CAEyBD,MAAO,sBAFhC,CAGID,UAAW,CAHf,CAtEM,CAbP,CAyFHS,QAAS,OAzFN,CADqB,CADsF;",
"sources":["node_modules/highlight_DOT_js/lib/languages/groovy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$groovy\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n    return {\n        keywords: {\n            literal : 'true false null',\n            keyword:\n            'byte short char int long boolean float double void ' +\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'super this abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n        },\n\n        contains: [\n            hljs.COMMENT(\n                '/\\\\*\\\\*',\n                '\\\\*/',\n                {\n                    relevance : 0,\n                    contains : [\n                      {\n                          // eat up @'s in emails to prevent them to be recognized as doctags\n                          begin: /\\w+@/, relevance: 0\n                      },\n                      {\n                          className : 'doctag',\n                          begin : '@[A-Za-z]+'\n                      }\n                    ]\n                }\n            ),\n            hljs.C_LINE_COMMENT_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            {\n                className: 'string',\n                begin: '\"\"\"', end: '\"\"\"'\n            },\n            {\n                className: 'string',\n                begin: \"'''\", end: \"'''\"\n            },\n            {\n                className: 'string',\n                begin: \"\\\\$/\", end: \"/\\\\$\",\n                relevance: 10\n            },\n            hljs.APOS_STRING_MODE,\n            {\n                className: 'regexp',\n                begin: /~?\\/[^\\/\\n]+\\//,\n                contains: [\n                    hljs.BACKSLASH_ESCAPE\n                ]\n            },\n            hljs.QUOTE_STRING_MODE,\n            {\n                className: 'meta',\n                begin: \"^#!/usr/bin/env\", end: '$',\n                illegal: '\\n'\n            },\n            hljs.BINARY_NUMBER_MODE,\n            {\n                className: 'class',\n                beginKeywords: 'class interface trait enum', end: '{',\n                illegal: ':',\n                contains: [\n                    {beginKeywords: 'extends implements'},\n                    hljs.UNDERSCORE_TITLE_MODE\n                ]\n            },\n            hljs.C_NUMBER_MODE,\n            {\n                className: 'meta', begin: '@[A-Za-z]+'\n            },\n            {\n                // highlight map keys and named parameters as strings\n                className: 'string', begin: /[^\\?]{0}[A-Za-z0-9_$]+ *:/\n            },\n            {\n                // catch middle element of the ternary operator\n                // to avoid highlight it as a label, named parameter, or map key\n                begin: /\\?/, end: /\\:/\n            },\n            {\n                // highlight labeled statements\n                className: 'symbol', begin: '^\\\\s*[A-Za-z0-9_$]+:',\n                relevance: 0\n            }\n        ],\n        illegal: /#|<\\//\n    }\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","keywords","literal","keyword","contains","COMMENT","relevance","begin","className","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","end","APOS_STRING_MODE","BACKSLASH_ESCAPE","QUOTE_STRING_MODE","illegal","BINARY_NUMBER_MODE","beginKeywords","UNDERSCORE_TITLE_MODE","C_NUMBER_MODE"]
}
